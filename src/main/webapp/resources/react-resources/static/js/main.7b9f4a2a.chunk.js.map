{"version":3,"sources":["logo.svg","constant/Url.js","components/navigation/Menu.js","constant/Menus.js","components/container/ContentTitle.js","components/pages/index/Home.js","utils/StringUtil.js","components/buttons/ActionButtons.js","components/container/CrudRow.js","components/container/InstantTable.js","components/pages/about/About.js","redux/actionCreators.js","redux/types.js","components/container/Label.js","components/card/Card.js","components/pages/catalog/CatalogItem.js","components/DetailRow.js","components/buttons/ActionButton.js","components/container/ImageCarousel.js","components/pages/catalog/ProductDetail.js","utils/ComponentUtil.js","components/inputs/InputField.js","components/navigation/NavButtons.js","components/inputs/ComboBox.js","components/container/GridComponent.js","components/pages/catalog/Catalog.js","components/messages/Message.js","components/pages/login/Login.js","components/navigation/Tab.js","components/pages/dashboard/DashboardMenu.js","components/pages/transaction/StockListTable.js","components/messages/Loader.js","components/pages/transaction/TransactionReceipt.js","components/inputs/DropdownItem.js","components/inputs/DynamicDropdown.js","components/pages/transaction/AddToCartButton.js","components/pages/transaction/DetailProductPanel.js","components/pages/transaction/TransactionSelling.js","components/ErrorPage.js","components/pages/transaction/TransactionPurchasing.js","components/pages/transaction/BaseTransactionPage.js","components/Chart.js","components/inputs/ComboBoxes.js","utils/ComponentCreator.js","components/pages/dashboard/GraphChart.js","utils/DateUtil.js","components/pages/dashboard/Cashflow.js","components/pages/dashboard/ProductSalesDetail.js","components/pages/dashboard/ProductSales.js","components/pages/dashboard/Dashboard.js","components/pages/supplier_list/SupplierList.js","components/layout/footer/Footer.js","components/pages/chat_room/CharList.js","components/pages/chat_room/ChatRoom.js","components/cart/CartDetail.js","components/inputs/InputFile.js","components/inputs/InputFileMultiple.js","components/pages/management/EntityForm.js","components/messages/SimpleLoader.js","components/pages/management/EntityList.js","components/pages/management/Management.js","components/cart/CartInfo.js","components/layout/header/Header.js","components/messages/Alert.js","App.js","redux/shopReducer.js","utils/HardCodedEntites.js","redux/userReducer.js","redux/transactionReducer.js","redux/managementReducer.js","redux/reducers.js","middlewares/Common.js","middlewares/UserMiddleware.js","middlewares/ManagementMiddleware.js","middlewares/RealtimeChatMiddleware.js","middlewares/CatalogMiddleware.js","redux/configureStore.js","Root.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","devMode","document","getElementById","value","rootValue","contextPath","concat","baseImageUrl","baseResUrl","Menu","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","fontColor","applicationProfile","backgroundColor","color","_this2","renderedMenus","menus","react_default","a","createElement","className","style","UserLink","loggedUser","map","menu","i","Menu_MenuItem","key","cart","activeCode","handleMenuCLick","Component","Fragment","id","Avatar","user","displayName","margin","textAlign","backgroundImage","url","profileImage","backgroundSize","width","height","borderRadius","padding","MenuItem","menuClass","fillStyle","isActive","code","isCart","liStyle","menuName","name","class","count","length","cartCount","onClick","Link","to","connect","state","userState","shopState","LOGOUT","ContentTitle","title","description","iconClass","children","Home","profile","setMenuCode","container_ContentTitle","welcomingMessage","src","backgroundUrl","index","uniqueId","string","Date","getUTCMilliseconds","beautifyNominal","val","nominal","result","zero","isNonNullArrayWithIndex","array","months","monthYearString","m","y","ActionButtons","orientation","role","buttonsData","buttonData","status","objectSpread","stringUtil","text","CrudRow","handleEdit","disabled","identifier","handleDelete","values","Array","newValues","CS","RS","colspan","rowspan","push","trStyle","borderTop","actionButton","buttons_ActionButtons","valign","CrudRow_Cells","Cells","element","valueComponent","constructor","React","isValidElement","JSON","stringify","rowSpan","colSpan","InstantTable","rows","tableStyle","row","components_container_CrudRow","About","fontFamily","container_InstantTable","shortDescription","usedHost","apiBaseUrl","apiEntityBaseUrl","apiAccount","apiAdmin","apiTransaction","getSupplierList","request","app","startLoading","requested","type","payload","entity","filter","limit","page","fieldsFilter","orderBy","orderby","orderType","ordertype","meta","categoryId","Label","Card","titleComponent","icon","marginRight","content","CardContent","product","container_Label","fontWeight","price","unit","category","CatalogItem","productImageUrl","imageUrl","split","getProductDetail","card_Card","DetailRow","desc","ActionButton","carouselStyle","bgUrl","ImageCarousel","prev","imageUrls","currentIndex","setState","next","console","debug","buttons_ActionButton","ProductDetail","supplierShown","supplierPage","updated","refresh","log","goBack","setDetailMode","showSupplierList","mode","loadMoreSupplier","productId","assertThisInitialized","supplierListPanel","suppliers","supplier","components_DetailRow","website","iconUrl","ProductImage","components_container_ImageCarousel","dispatch","referrer","actions","byId","clearFields","inputs","getElementsByTagName","_len","arguments","ignore","_key","withIgnore","loop","checkExistance","undefined","createNavButtons","totalButton","currentPage","Math","ceil","min","max","getCurrentMMYY","getMonth","getFullYear","getDropdownOptionsMonth","options","getDropdownOptionsYear","from","InputField","handleKeyup","onKeyUp","onChange","placeholder","inputField","checked","fontSize","NavButtons","buttonClick","active","ComboBox","handleOnChange","e","label","defaultValue","option","GridComponent","items","repeat","cols","gridAutoColumns","display","verticalAlign","gridTemplateColumns","item","Catalog","catalogData","entities","totalData","products","catalogPage","firstLoad","requestOrderBy","requestOrderType","requestProductName","requestWithStock","requestCategoryId","selectedProduct","buttonCount","enableShopping","activeId","focusToActiveField","componentUtil","focus","getProductInCart","cartItem","clearCart","confirmDialog","updateCart","addToCart","currentCart","existingIndex","currentCartItem","getProductCatalog","_page","withStock","handleOrderChange","rawOrderRequest","handleInputNameChange","clearField","infoDialog","removeEntity","detailMode","handleCategoryChange","floor","totalPage","handleChangeWithStockOption","handleChangeEnableShoppingOption","setEnableShopping","generateNavButtonsData","navButtonsData","_loop","b","getAllProductCategories","categories","actionButtons","productCategories","container_GridComponent","inputs_InputField","inputs_ComboBox","filterProductOption","_this3","rendered","navigation_NavButtons","filterBox","ProductCard","pages_catalog_ProductDetail","shoppingInfo","qty","cartButtonsData","catalog_CatalogItem","withRouter","exacts","contains","withSupplier","Message","Login","username","password","showMessageLoginFailed","handleUsername","handlePassword","doLogin","performLogin","endMessage","getLoggedUser","validateLoginStatus","loginStatus","info","history","message","loginFailed","messages_Message","loginAttempt","Tab","tabsData","tabData","href","DashboardMenu","goToMenu","menuCode_","currentMenu","components_navigation_Tab","whiteSpace","StockListTable","headers","stockListRow","productFlows","productFlow","purchasing","totalPrice","priceString","totalPriceString","expiryDate","flowReferenceId","entityId","headerValue","LoaderContent","realtime","progress","transitionDuration","aria-hidden","Loader","timer","intervalId","update","clearInterval","withTimer","setInterval","msgStyle","zIndex","Spinner","TransactionReceipt","transactionReceiptComponent","stakeHolder","transactionData","transaction","customer","String","transactionDate","DropdownItem","hover","onHover","unHover","onMouseLeave","onMouseOver","DropDownComponent","dropdownComponent","dropdownList","data","hoverIndex","onSelect","position","inputs_DropdownItem","DynamicDropdown","onBlur","dataValue","onFocus","AddToCartButton","DetailProductPanel","getRowData","stockView","defaultVal","spinner","productImageName","TransactionSelling","productName","customerName","productFlowStock","showDetail","messageShow","messageType","stockId","quantity","activeField","setActiveField","getStockInfo","isExistInTheChart","getProductFlow","window","confirm","newProductFlow","random","addProductFlow","emptyForm","currentFlows","showMessage","alert","splice","submitTransaction","submitPurchaseTransaction","messageText","reset","resetPurchaseTransaction","calculateTotalPrice","forEach","getCustomerList","selectCustomer","customersData","resetCustomers","getProductStockList","selectproduct","productCode","resetProductStocks","detailStockComponent","transaction_DetailProductPanel","buttonAddToCart","transaction_AddToCartButton","messageComponent","components_messages_Loader","productList","customerList","getCustomerDropdownData","getProductDropdownData","formComponent","gridRowGap","inputs_DynamicDropdown","setFeatureCode","successTransaction","transaction_TransactionReceipt","transaction_StockListTable","transactionState","code[EXACTS]","ErrorPage","TransactionPurchasing","supplierName","expDate","getProduct","submitSupplyTransaction","emptyFormValues","trim","selectSupplier","resetSuppliers","getProductList","addFormFieldId","selectProduct","resetProducts","formFieldIds","supplierList","detailStock","getSupplierDropdownData","BaseTransactionPage","indexOf","suppliersData","productsData","Chart","counter","percentage","maxValue","chartStyle","mainStyle","legendStyle","marginLeft","marginBottom","marginTop","writingMode","textOrientation","borderLeft","barClassName","ComboBoxes","comboBoxes","comboBox","FilterBox","DateSelectionFrom","inputs_ComboBoxes","monthVal","handleOnChangeMfrom","yearVal","years","handleOnChangeYfrom","DateSelectionTo","handleOnChangeMto","handleOnChangeYto","ChartItem","isHorizonal","bgStyle","transform","GraphChart","components","chartData","chartGroups","g","group","groupedComponents","component","groupedComponent","isHorizontal","borderBottom","borderRight","getChartComponents","MONTHS","Cashflow","date","chartOrientation","fromMonth","fromYear","toMonth","toYear","getCashflowDetail","onChangeChartOrientation","constructFilterBox","isChartHorizontal","isChartVertical","inputRadio","filterButtons","ComponentCreator_FilterBox","ComponentCreator_DateSelectionFrom","transactionYears","ComponentCreator_DateSelectionTo","constructFilterInfo","filterInfo","cashflowDetail","supplies","purchases","cashflowDataRows","chartIndex","spending","earning","period","month","year","earningAmount","amount","spendingAmount","series","cashflowListComponent","overflow","dashboard_GraphChart","monthTo","yearTo","ProductSalesDetail","chartRows","productSalesDetails","salesData","components_Chart","sales","ProductSales","productDetailId","getProductSales","loadMore","getProductSalesDetail","resetPage","setRequestProductName","productSalesData","periodInfo","list","productDetailRows","productSalesListComponent","productSalesDetailsXX","dashboard_ProductSalesDetail","Dashboard","featureCode","cashflowYear","cashflowMonth","getCashflowInfo","minYear","maxYear","cashflowInfoIn","cashflowInfoOut","mainComponent","gridColumnGap","CashflowInfoContent","cashflowInfo","transaction_TransactionSelling","transaction_TransactionPurchasing","dashboard_Cashflow","dashboard_ProductSales","dashboard_DashboardMenu","components_ErrorPage","SupplierList","requestSupplierName","filterSupplierOptions","SupplierCard","address","float","Footer","footerStyle","footerIconClassValue","ChatList","chats","messages","chatRows","chat","CharList_ChatItem","ChatItem","admin","sender","senderComponent","ChatRoom","sendChatMessage","handleMessage","response","localStorage","getItem","storeChatMessageLocally","changeUsername","getMessages","userAlias","CharList","client_default","topics","onMessage","msg","ref","client","clientRef","CartDetail","CartItemList","grandTotalPrice","cartRows","number","DisplayedImage","enableRemove","removeImage","InputFile","base64Data","file","referer","callback","reader","FileReader","readAsDataURL","files","onload","onerror","error","target","displayImage","accept","InputFileMultiple","handleAddMoreFile","addMoreImage","inputFields","inputFilesData","inputFileData","inputs_InputFile","base64","includes","inputId","EntityForm","managedEntity","formValues","dropdownValues","selectedEntities","base64DataMultiple","validateEntity","getElementProperty","multiple","arrayOfValues","resultValue","updatedValue","join","handleSubmit","updateEntity","entityProperty","entityName","clear","focusActiveId","propName","updateSelectedEntity","removeManagedEntity","populateDropdown","entityname","fieldname","fieldvalue","fieldName","fieldValue","getEntitiesWithCallback","onKeyUpDynamicDropdown","inputPhysicalId","fieldId","reffEntity","optionItemName","toLowerCase","populateDropdownValues","currentDropdownValue","optionValueName","getSelectedDropdownItem","elements","currentValue","handleRemoveImage","handleChangeBase64Image","handleChangeBase64MultipleImage","removeElementAtPosition","handleRemoveMultipleImage","_fieldId","newArrayValue","selectFromDynamicDropdown","stateDropdownList","stateDropdownValues","selectedOption","displayPropName","selectFromFixedDropdown","currentDropdownList","selectFromPlainListDropdown","toString","updateFixedListValues","updatePlainListValues","FormElement","entityConfig","stateManagedEntity","FormActionButtons","_props","entityExist","elementId","entityReferenceClass","valueAsObject","inputComponent","lableName","comboBoxOptions","getFixedListElementOptions","plainListValues","getPlainListElementOptions","valueSplit","imagesData","valueSplitItem","inputs_InputFileMultiple","idField","el","CenterLoading","EntityList","getEntityById","goToPage","orderObject","entitiesData","config","getEntityInPage","setOrderBy","createFilterInputsv2","input","handleFilterChange","DateFilter","SortingButton","getEntityDataTableRowData","SimpleLoader_CenterLoading","toConsumableArray","getHeaderNamesv2","rowValues","j","isObject","entityValue","alt","imgName","dateStr","toDateString","str","substr","NavigationButton","management_EntityForm","EntityTable","valueDay","valueMonth","valueYear","inputDay","inputMonth","inputYear","headerName","fixButtonData","paddingTop","Management","entityList","loadEntityManagement","getEntities","getEntityProperty","checkIfCurrentMenuName","getTabMenusData","entityConfigList","configList","flag","newRecord","isNewRecord","callbackHandleUpdate","getManagementMenus","alias","management_EntityList","managementState","managementMenus","action","CartInfo","detail","showCartList","hideCartList","handleClick","caculateTotalPrice","CartInfoContent","paddingLeft","Header","showOptionButton","left","showMenu","hideMenu","Backdrop","Body","onOk","yesOnly","onNo","onClose","Alert","tabindex","aria-labelledby","Alert_Header","Alert_Footer","blankFunc","App","menuCode","loading","loadingPercentage","requestId","mainAppUpdated","hideSidebar","loadings","alertCallback","logout","performLogout","requestAppId","incrementLoadings","decrementLoadings","endLoading","mainContent","Switch","Route","exact","path","render","renderProps","pages_index_Home","supplier_list_SupplierList","chat_room_ChatRoom","about_About","pages_catalog_Catalog","cart_CartDetail","pages_login_Login","pages_dashboard_Dashboard","pages_management_Management","alertDialog","showInfo","refreshLogin","updateIcon","link","querySelector","rel","head","appendChild","additionalMenus","isNotAuthenticated","authenticated","isShoppingDisabled","setMenus","isHideSidebar","contentClass","Loading","AlertComponent","alertData","hideInfo","cart_CartInfo","layout_header_Header","components_navigation_Menu","layout_footer_Footer","messages_Alert","initState","getTime","reducer","currentProduct","loadedSupplier","loginKey","updatedMenus","loggedIn","setItem","removeItem","sessionData","currentProductSalesData","loadedProductList","generalList","rootReducer","combineReducers","shopReducer","userReducer","transactionReducer","managementReducer","initialState","commonAuthorizedHeader","Content-Type","getRequestId","performLoginMiddleware","store","fetch","method","body","common","then","Promise","all","json","_ref","_ref2","slicedToArray","responseJson","loginSuccess","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","entries","Symbol","iterator","done","pair","err","return","newAction","assign","catch","finally","param","requestAppIdMiddleware","getLoggedUserMiddleware","refreshLoginStatusMiddleware","parse","performLogoutMiddleware","_ref3","_ref4","logoutSuccess","getEntitiesWithCallbackMiddleware","updateEntityMiddleware","getEntityByIdMiddleware","getEntityListMiddleware","getEntityPropertyMiddleware","getManagementMenusMiddleware","removeManagedEntityMiddleware","getMessagesMiddleware","sendChatMessageMiddleware","storeChatMessageLocallyMiddleware","getProductListMiddleware","getProductDetailMiddleWare","loadMoreSupplierMiddleware","parap","removeEntityMiddleware","getSupplierListMiddleware","getAllProductCategoriesMiddleware","updateCartMiddleware","getProductStocksMiddleware","getProductSalesDetailMiddleware","getProductSalesMiddleware","getCashflowDetailMiddleware","getCashflowInfoMiddleware","getProductListTrxMiddleware","getCustomerListMiddleware","resetProductStocksMiddleware","resetCustomersMiddleware","resetProductsMiddleware","resetSuppliersMiddleware","resetPurchaseTransactionMiddleware","submitSupplyTransactionMiddleware","submitPurchaseTransactionMiddleware","getStockInfoMiddleware","configureStore","createStore","applyMiddleware","catalogMiddleware","userMiddleware","managementMiddleware","realtimeChatMiddleware","Root","es","HashRouter","src_App_0","Boolean","location","hostname","match","ReactDOM","src_Root","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.7b9f4a2a.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","\r\nconst devMode = document.getElementById(\"rootPath\").value == \"${contextPath}\";\r\nconst rootValue = devMode ?\r\n     \"/universal-good-shop/\" : document.getElementById(\"rootPath\").value+\"/\";\r\n\r\nexport const contextPath = function(){\r\n    return devMode? \"http://localhost:8080\".concat(rootValue):rootValue;\r\n}\r\n \r\nexport const baseImageUrl = contextPath()+\"WebAsset/Shop1/Images/\";\r\nexport const baseResUrl = contextPath()+\"res/img/\";\r\n","import React, { Component } from 'react'\r\nimport './Menu.css'\r\nimport * as url from '../../constant/Url'\r\nimport { Link } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\n\r\nclass Menu extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.fontColor = this.props.applicationProfile.fontColor;\r\n        this.backgroundColor = this.props.applicationProfile.color;\r\n\r\n    }\r\n\r\n    componentDidUpdate() { }\r\n\r\n    render() {\r\n        let renderedMenus = [];\r\n        if (this.props.menus != null) {\r\n            renderedMenus = this.props.menus;\r\n        }\r\n\r\n        return (\r\n\r\n            <div className=\"side-menu\" >\r\n                <ul className=\"menu-ul \" style={{ backgroundColor: this.backgroundColor }}>\r\n                    <UserLink loggedUser={this.props.loggedUser} fontColor={this.fontColor} />\r\n                    {renderedMenus.map(\r\n                        (menu, i) => {\r\n                            return <MenuItem\r\n                                key={\"menu_\" + i}\r\n\r\n                                fontColor={this.fontColor}\r\n                                backgroundColor={this.backgroundColor}\r\n                                menu={menu}\r\n                                cart={this.props.cart}\r\n                                activeCode={this.props.activeCode}\r\n                                handleMenuCLick={this.props.handleMenuCLick} />\r\n                        }\r\n                    )\r\n                    } </ul>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nfunction UserLink(props) {\r\n    if (props.loggedUser == null) {\r\n        return <></>\r\n    }\r\n    return (<li id=\"user-link\">\r\n        <Avatar user={props.loggedUser} />\r\n        <div style={{ color: props.fontColor }} className=\"fill\" >Welcome, {props.loggedUser.displayName} </div>\r\n    </li>);\r\n}\r\n\r\nfunction Avatar(props) {\r\n    const style = {\r\n        margin: 'auto',\r\n        textAlign: 'center',\r\n        backgroundImage: 'url(' + url.baseImageUrl + \"/\" + props.user.profileImage + ')',\r\n        backgroundSize: '50px 50px',\r\n        width: '50px', height: '50px', borderRadius: '25px'\r\n    };\r\n    return <div style={{ padding: '5px' }}><div style={style}></div></div>\r\n}\r\n\r\nfunction MenuItem(props) {\r\n    let menuClass = \"fa fa-store-alt\";\r\n    const menu = props.menu;\r\n    const fillStyle = {\r\n        color: props.fontColor\r\n    }\r\n    const isActive = props.activeCode == menu.code;\r\n    const isCart = menu.code == 'cart';\r\n    const liStyle = isActive ? { backgroundColor: props.fontColor } : {};\r\n    if (isActive) {\r\n        fillStyle.color = props.backgroundColor;\r\n    }\r\n    if (menu.menuClass) {\r\n        menuClass = menu.menuClass;\r\n    }\r\n\r\n    const menuName = isCart ? <span>{menu.name}&nbsp;<span class=\"badge badge-warning\">{cartCount(props.cart)} </span></span> : <span>{menu.name}</span>;\r\n\r\n    if (menu.url == \"#\") {\r\n        return (<li style={liStyle} onClick={() => props.handleMenuCLick(menu)} className={isActive ? \"active\" : \"\"} key={menu.name}\r\n            id={menu.name}> <Link key={menu.name + \"LINK\"} className=\"App-link\"\r\n                to=\"#\" ><div style={fillStyle} className=\"fill\" ><i className={menuClass}></i>&nbsp;{menuName} </div></Link></li >)\r\n    }\r\n\r\n    return (<li style={liStyle} className={isActive ? \"menu-active\" : \"\"} key={menu.name}\r\n        id={menu.name}> <Link key={menu.name + \"LINK\"} className=\"App-link\"\r\n            to={menu.url} ><div style={fillStyle} className=\"fill\" ><i className={menuClass}></i>&nbsp;{menuName} </div></Link></li >\r\n    )\r\n}\r\n\r\nfunction cartCount(cart) {\r\n    let count = 0;\r\n    for (let i = 0; i < cart.length; i++) {\r\n        count += cart[i].count\r\n    }\r\n    return count;\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        applicationProfile: state.userState.applicationProfile,\r\n        cart: state.shopState.cart,\r\n        loggedUser: state.userState.loggedUser,\r\n    }\r\n}\r\nexport default (connect(\r\n    mapStateToProps\r\n)(Menu));","export const HOME = \"home\";\r\nexport const CATALOG = \"catalog\";\r\nexport const ABOUT = \"about\";\r\nexport const ACCOUNT = \"account\";\r\nexport const LOGIN = \"login\";\r\nexport const LOGOUT = \"logout\";\r\nexport const DASHBOARD = \"dashboard\";\r\nexport const SUPPLIERLIST = \"supplierlist\";","import React, { Component } from 'react'\r\nimport './Content.css'\r\nimport { connect } from 'react-redux'\r\n\r\nclass ContentTitle extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n    }\r\n\r\n    render() {\r\n\r\n        let title = this.props.title ? this.props.title : \"\";\r\n        let description = this.props.description ? this.props.description : \"\";\r\n        let iconClass = this.props.iconClass ? this.props.iconClass : \"fas fa-home\";\r\n\r\n        return (\r\n            <div style={{color: this.props.applicationProfile.color}}>\r\n                <h2><i className={iconClass}></i>&nbsp;{title}</h2>\r\n                <p>{description}</p>\r\n                {this.props.children}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    //console.log(state);\r\n    return {\r\n        applicationProfile: state.userState.applicationProfile,\r\n    }\r\n}\r\n\r\nexport default (connect(\r\n    mapStateToProps\r\n)(ContentTitle));","import React, { Component } from 'react'\r\nimport * as homeCss from './Home.css'\r\nimport * as menus from '../../../constant/Menus'\r\nimport ContentTitle from '../../container/ContentTitle';\r\nimport * as url from '../../../constant/Url'\r\n\r\nclass Home extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n        const profile = this.props.applicationProfile ? this.props.applicationProfile : {};\r\n        document.title = profile.name;\r\n        this.props.setMenuCode(menus.HOME);\r\n    }\r\n\r\n    render() {\r\n        const profile = this.props.applicationProfile ? this.props.applicationProfile : {};\r\n        return (\r\n            <div className=\"section-container\">\r\n                <ContentTitle title={profile.name} description={profile.welcomingMessage} />\r\n                <div style={{ textAlign: 'center' }} className=\"article-content\">\r\n                    <img width=\"800\" src={url.baseImageUrl + \"/\" + profile.backgroundUrl} />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Home;","let index = 1;\r\nexport const uniqueId = function () {\r\n\tlet string = \"\";\r\n\tstring = new Date().getUTCMilliseconds();\r\n\tindex++;\r\n\treturn index + \"-\" + string;\r\n}\r\n\r\nexport function beautifyNominal(val) {\r\n\tif (val == \"\" || val == null) return \"0\";\r\n\tlet nominal = \"\" + val;\r\n\tlet result = \"\";\r\n\tif (nominal.length > 3) {\r\n\t\tlet zero = 0;\r\n\t\tfor (let i = nominal.length - 1; i > 0; i--) {\r\n\t\t\tzero++;\r\n\t\t\tresult = nominal[i] + result;\r\n\t\t\tif (zero == 3) {\r\n\t\t\t\tresult = \".\" + result;\r\n\t\t\t\tzero = 0;\r\n\t\t\t}\r\n\r\n\t\t}\r\n\t\tresult = nominal[0] + result;\r\n\t} else {\r\n\t\tresult = val;\r\n\t}\r\n\treturn result;\r\n}\r\n\r\nexport const getMaxSales = (list) => {\r\n\tlet result = 0;\r\n\tfor (let i = 0; i < list.length; i++) {\r\n\t\tconst element = list[i];\r\n\t\tif (element.sales > result)\r\n\t\t\tresult = element.sales;\r\n\t}\r\n\treturn result;\r\n}\r\n\r\nexport const isNonNullArray = function (array) {\r\n\treturn array != null && array.length > 0;\r\n}\r\n\r\nexport const isNonNullArrayWithIndex = function (array, i) {\r\n\treturn array != null && array.length > 0 && array[i] != null;\r\n}\r\n\r\nconst months = [\r\n\t\"January\", \"Ferbuary\", \"March\", \"April\", \"May\", \"June\",\r\n\t\"July\", \"August\", \"September\", \"October\", \"November\", \"December\"\r\n]\r\n\r\nexport const monthYearString = function (m, y) {\r\n\tif (m == null || y == null) {\r\n\t\treturn \"-\";\r\n\t}\r\n\treturn months[m - 1] + \" \" + y;\r\n}","import React, { Component } from 'react' \r\nimport * as stringUtil from '../../utils/StringUtil'\r\nimport './Buttons.css'\r\n\r\nclass ActionButtons extends Component {\r\n    constructor(props) { super(props) }\r\n\r\n    render() {\r\n        let className = \"btn-group\";\r\n        if(this.props.orientation == \"vertical\"){\r\n            className+=\"-vertical\";\r\n        }\r\n        if(this.props.className){\r\n            className += \" \"+this.props.className;\r\n        }\r\n        return (\r\n            <div style={this.props.style ? this.props.style : {}} className={ className} role=\"group\"  >\r\n                {this.props.buttonsData.map(buttonData => {\r\n                    let className = \"btn btn-outline-secondary btn-sm\";\r\n                    if (buttonData.status != null) {\r\n                        className =\r\n                            \"btn btn\".concat(\"-\").concat(buttonData.status).concat(\" \").concat(buttonData.className);\r\n                    }\r\n                    return (\r\n                        <button style={{...buttonData.style}} className={className} key={\"btnKey-\" + stringUtil.uniqueId()} onClick={buttonData.onClick}>{buttonData.text}</button>\r\n                    )\r\n                })}\r\n            </div>);\r\n    }\r\n}\r\n\r\nexport default ActionButtons;","import React, { Component } from 'react'\r\nimport * as stringUtil from '../../utils/StringUtil'\r\nimport ActionButtons from '../buttons/ActionButtons';\r\nimport './CrudRow.css'\r\n\r\nclass CrudRow extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.handleEdit = () => {\r\n            if (this.props.handleEdit && !this.props.disabled) {\r\n                this.props.handleEdit(this.props.identifier);\r\n            }\r\n        }\r\n        this.handleDelete = () => {\r\n            if (this.props.handleDelete) {\r\n                this.props.handleDelete(this.props.identifier);\r\n            }\r\n        }\r\n    }\r\n\r\n    render() {\r\n        let values = this.props.values;\r\n        const defaultRowColSpan = 1;\r\n        if (null == values) {\r\n            values = new Array();\r\n        } else {\r\n            let newValues = new Array();\r\n            for (let i = 0; i < values.length; i++) {\r\n                const value = values[i];\r\n                if (this.props.CS || this.props.RS) {\r\n                    let colspan = stringUtil.isNonNullArrayWithIndex(this.props.CS, i) ?\r\n                        this.props.CS[i] : defaultRowColSpan;\r\n                    let rowspan = stringUtil.isNonNullArrayWithIndex(this.props.RS, i) ?\r\n                        this.props.RS[i] : defaultRowColSpan;\r\n                    newValues.push({ value: value, colspan: colspan, rowspan: rowspan });\r\n                } else {\r\n                    newValues.push({ value: value });\r\n                }\r\n            }\r\n            values = newValues;\r\n        }\r\n\r\n        let trStyle = this.props.style ? this.props.style : {\r\n            borderTop: 'solid 1px gray',\r\n        };\r\n        let actionButton = <td style={trStyle}>\r\n            <ActionButtons buttonsData={[\r\n                {\r\n                    id: \"k-btn-edit-\" + this.props.identifier,\r\n                    status: 'warning btn-sm',\r\n                    onClick: this.handleEdit,\r\n                    text: <i className=\"fas fa-edit\"></i>\r\n                },\r\n                {\r\n                    id: \"k-btn-dlt-\" + this.props.identifier,\r\n                    status: 'danger btn-sm',\r\n                    onClick: this.handleDelete,\r\n                    text: <i className=\"fas fa-trash\"></i>\r\n                }\r\n            ]} />\r\n        </td>;\r\n        const disabled = this.props.disabled;\r\n        if (disabled == true) {\r\n            actionButton = null;\r\n            trStyle = this.props.style ? this.props.style : {};\r\n        }\r\n\r\n        return (\r\n            <tr className={disabled ? \"\" : \"crud-row\"} style={trStyle} key={stringUtil.uniqueId()}\r\n                valign={this.props.valign} onClick= {this.handleEdit}> \r\n                <Cells values={values} trStyle={trStyle} />\r\n                {actionButton}</tr>\r\n        )\r\n    }\r\n}\r\n\r\nconst Cells = (props) => {\r\n\r\n    return <>{props.values.map(element => {\r\n\r\n        const isJSON = element.value != null && element.value.constructor == Object && !React.isValidElement(element.value);\r\n        const valueComponent = isJSON ? JSON.stringify(element.value) : element.value;\r\n        return (\r\n            <td key={\"td-key-\" + stringUtil.uniqueId()} id={\"td-\" + stringUtil.uniqueId()}\r\n                style={props.trStyle}\r\n                rowSpan={element.rowspan}\r\n                colSpan={element.colspan}>\r\n                {valueComponent}\r\n            </td>\r\n        )\r\n    })}</>\r\n}\r\n\r\nexport default CrudRow;","import React, { Component } from 'react'  \r\nimport * as stringUtil from '../../utils/StringUtil' \r\nimport CrudRow from './CrudRow';\r\n\r\nclass InstantTable extends Component {\r\n    constructor(props) { super(props) }\r\n\r\n    render() {\r\n        let rows = [];\r\n        if (this.props.rows) { rows = this.props.rows; }\r\n        \r\n        let className = \"table\";\r\n        let tableStyle = this.props.style ? this.props.style : {};\r\n        \r\n        if (this.props.className) {\r\n            className += \" \" + this.props.className;\r\n        }\r\n        return (\r\n            <table style={tableStyle} className={className}><tbody>\r\n                {rows.map(row => {\r\n                    let disabled = row.disabled == false? false:true; \r\n                    \r\n                    return (\r\n                        <CrudRow\r\n                            style={row.style}\r\n                            valign={this.props.valign ? this.props.valign : \"top\"}\r\n                            RS={row.RS}\r\n                            identifier={row.identifier ? row.identifier : \"0000\"}\r\n                            handleEdit={row.handleEdit}\r\n                            handleDelete={row.handleDelete}\r\n                            CS={row.CS}\r\n                            values={row.values ? row.values : []}\r\n                            key={stringUtil.uniqueId()}\r\n                            disabled={disabled}\r\n                        />\r\n                    )\r\n                })}\r\n            </tbody></table>\r\n\r\n        )\r\n    }\r\n}\r\n\r\nexport default InstantTable;","import React, { Component } from 'react' \r\nimport * as menus from '../../../constant/Menus' \r\nimport * as url from '../../../constant/Url' \r\nimport ContentTitle from '../../container/ContentTitle'\r\nimport InstantTable from '../../container/InstantTable'\r\n\r\nclass About extends Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n        document.title = \"About Us\";\r\n        this.props.setMenuCode(menus.ABOUT);\r\n    }\r\n\r\n    render() {\r\n        const profile = this.props.applicationProfile;\r\n\r\n        return (\r\n            <div className=\"section-container about-section  \" >\r\n                <ContentTitle title=\"About Us\" iconClass=\"fas fa-address-book\"/>\r\n                <div className=\" abount-content\" style={{\r\n                    padding: '5px',\r\n                    width: '90%',\r\n                    fontFamily: 'Consolas', margin: '5px'\r\n                }}>\r\n                    <InstantTable\r\n                        rows={[\r\n                            { values: [\"Name\", profile.name] },\r\n                            { values: [\"Version\", \"1.0.0\"] },\r\n                            { values: [\"Description\", profile.shortDescription] },\r\n\r\n\r\n                        ]} />\r\n                    <h2>Powered By</h2>\r\n                    <img style={{ width: '80%' }} src={url.baseResUrl + \"POWERED_BY.png\"} />\r\n                </div></div>\r\n \r\n        )\r\n    }\r\n}\r\n\r\nexport default About;","import * as types from './types'\r\nimport * as url from '../constant/Url'\r\n\r\nconst usedHost = url.contextPath();\r\nconst apiBaseUrl = usedHost + \"api/public/\"\r\nconst apiEntityBaseUrl = usedHost + \"api/entity/\"\r\nconst apiAccount = usedHost + \"api/account/\"\r\nconst apiAdmin = usedHost + \"api/admin/\"\r\nconst apiTransaction = usedHost + \"api/transaction/\";\r\n\r\nexport const resetProductStocks = () => {\r\n    return { type: types.RESET_PRODUCT_STOCKS, payload: {}, meta: { type: types.RESET_PRODUCT_STOCKS } };\r\n}\r\n\r\nexport const updateCart = (cart, app) => {\r\n    return { type: types.UPDATE_CART, payload: { cart: cart, app: app }, meta: { type: types.UPDATE_CART } };\r\n}\r\n\r\nexport const resetProducts = () => {\r\n    return { type: types.RESET_PRODUCTS, payload: {}, meta: { type: types.RESET_PRODUCTS } };\r\n}\r\nexport const resetSuppliers = () => {\r\n    return { type: types.RESET_SUPPLIERS, payload: {}, meta: { type: types.RESET_SUPPLIERS } };\r\n}\r\nexport const resetCustomers = () => {\r\n    return { type: types.RESET_CUSTOMERS, payload: {}, meta: { type: types.RESET_CUSTOMERS } };\r\n}\r\n\r\nexport const removeManagedEntity = () => {\r\n    return {\r\n        type: types.REMOVE_MANAGED_ENTITY,\r\n        payload: {},\r\n        meta: { type: types.REMOVE_MANAGED_ENTITY }\r\n    };\r\n}\r\n\r\nexport const updateEntity = (request, referer, callback) => {\r\n    referer.props.app.startLoading();\r\n    let requested = {\r\n        type: types.UPDATE_ENTITY,\r\n        payload: {\r\n            \"entity\": request.entityName\r\n        },\r\n        meta: {\r\n            type: types.UPDATE_ENTITY,\r\n            url: request.isNewRecord ? apiEntityBaseUrl.concat(\"add\") : apiEntityBaseUrl.concat(\"update\"),\r\n            app: referer.props.app,\r\n            callback: callback,\r\n            referer: referer\r\n        }\r\n    };\r\n    requested.payload[request.entityName] = request.entity;\r\n    return requested;\r\n}\r\n\r\nexport const getEntitiesWithCallback = (request, referer, callback) => {\r\n    referer.props.app.startLoading();\r\n    let requested = {\r\n        type: types.GET_ENTITY_WITH_CALLBACK,\r\n        payload: {\r\n            \"entity\": request.entityName,\r\n            \"filter\": {\r\n                \"limit\": 10,\r\n                'fieldsFilter': {}\r\n            }\r\n        },\r\n        meta: {\r\n            type: types.GET_ENTITY_WITH_CALLBACK,\r\n            url: apiEntityBaseUrl.concat(\"get\"),\r\n            app: referer.props.app,\r\n            referer: referer,\r\n            callback: callback\r\n        }\r\n    };\r\n    requested.payload.filter.fieldsFilter[request.fieldName] = request.fieldValue;\r\n    return requested;\r\n}\r\n\r\nexport const getEntityById = (name, id, app) => {\r\n    app.startLoading();\r\n    let requested = {\r\n        type: types.GET_ENTITY_BY_ID,\r\n        payload: {\r\n            \"entity\": name,\r\n            \"filter\": {\r\n                \"limit\": 1,\r\n                \"page\": 0,\r\n                \"exacts\": true,\r\n                \"contains\": false,\r\n                \"fieldsFilter\": { \"id\": id }\r\n            }\r\n        },\r\n        meta: {\r\n            type: types.GET_ENTITY_BY_ID,\r\n            url: apiEntityBaseUrl.concat(\"get\"),\r\n            app: app\r\n        }\r\n    };\r\n    return requested;\r\n}\r\n\r\nexport const getEntityList = (request, app) => {\r\n    app.startLoading();\r\n    let requested = {\r\n        type: types.GET_ENTITY,\r\n        payload: {\r\n            entity: request.entityName,\r\n            filter: {\r\n                limit: request.limit,\r\n                page: request.page,\r\n                fieldsFilter: request.fieldsFilter,\r\n                orderBy: request.orderBy,\r\n                orderType: request.orderType,\r\n            },\r\n\r\n        },\r\n        meta: {\r\n            type: types.GET_ENTITY,\r\n            url: apiEntityBaseUrl.concat(\"get\"),\r\n            app: app,\r\n            entityConfig: request.entityConfig\r\n        }\r\n    };\r\n    return requested;\r\n}\r\n\r\n\r\nexport const getEntityProperty = (entityName, app) => {\r\n    app.startLoading();\r\n    let requested = {\r\n        type: types.GET_ENTITY_PROPERTY,\r\n        payload: {\r\n            entity: entityName\r\n        },\r\n        meta: {\r\n            type: types.GET_ENTITY_PROPERTY,\r\n            url: apiEntityBaseUrl.concat(\"config\"),\r\n            app: app, \r\n        }\r\n    };\r\n    return requested;\r\n}\r\n\r\n\r\nexport const getManagementMenus = ( app) => {\r\n    app.startLoading();\r\n    let requested = {\r\n        type: types.GET_MANAGEMENT_MENUS,\r\n        payload: {  },\r\n        meta: {\r\n            type: types.GET_MANAGEMENT_MENUS,\r\n            url: apiEntityBaseUrl.concat(\"managementpages\"),\r\n            app: app, \r\n        }\r\n    };\r\n    return requested;\r\n}\r\n\r\nexport const getProductStocks = (name, app) => {\r\n    app.startLoading(true);\r\n    return {\r\n        type: types.GET_PRODUCT_STOCKS,\r\n        payload: {\r\n            entity: 'product',\r\n            filter: {\r\n                limit: 20,\r\n                fieldsFilter: { name: name }\r\n            }\r\n        },\r\n        meta: {\r\n            app: app, type: types.GET_PRODUCT_STOCKS,\r\n            url: apiEntityBaseUrl.concat(\"get\")\r\n        }\r\n    };\r\n}\r\n\r\nexport const requestAppId = (app) => {\r\n    app.startLoading();\r\n    return {\r\n        type: types.REQUEST_ID,\r\n        payload: {},\r\n        meta: {\r\n            app: app, type: types.REQUEST_ID,\r\n            url: apiBaseUrl.concat(\"requestid\")\r\n        }\r\n    };\r\n}\r\n\r\nexport const getMessageList = (app) => {\r\n    app.startLoading();\r\n    return {\r\n        type: types.GET_MESSAGE,\r\n        payload: {},\r\n        meta: {\r\n            type: types.GET_MESSAGE, app: app,\r\n            url: apiAdmin.concat(\"getmessages\")\r\n        }\r\n    };\r\n}\r\n\r\nexport const storeMessageLocally = (messages) => {\r\n\r\n    return {\r\n        type: types.STORE_MESSAGE,\r\n        payload: {\r\n            entities: messages\r\n        },\r\n        meta: {\r\n            type: types.STORE_MESSAGE,\r\n        }\r\n    };\r\n}\r\n\r\nexport const sendChatMessage = (message, username, app) => {\r\n    app.startLoading();\r\n    return {\r\n        type: types.SEND_MESSAGE,\r\n        payload: {\r\n            value: message,\r\n            username: username\r\n        },\r\n        meta: {\r\n            app: app,\r\n            type: types.SEND_MESSAGE,\r\n            url: apiAdmin.concat(\"sendmessage\")\r\n        }\r\n    };\r\n}\r\n\r\nexport const getProductSalesDetail = (request, app) => {\r\n    app.startLoading(true);\r\n    return {\r\n        type: types.GET_PRODUCT_SALES_DETAIL,\r\n        payload: {\r\n            filter:\r\n                { page: request.page, limit: 10, month: request.fromMonth, year: request.fromYear, monthTo: request.toMonth, yearTo: request.toYear }\r\n        },\r\n        meta: {\r\n            app: app,\r\n            type: types.GET_PRODUCT_SALES_DETAIL,\r\n            loadMore: request.loadMore == true, url: apiTransaction.concat(\"productsalesdetail/\" + request.productId)\r\n        }\r\n    };\r\n}\r\n\r\nexport const getProductSales = (request) => {\r\n    request.referrer.props.app.startLoading(true);\r\n    return {\r\n        type: types.GET_PRODUCT_SALES,\r\n        payload: {\r\n            product: { name: request.productName },\r\n            filter:\r\n                { page: request.page, limit: 10, month: request.fromMonth, year: request.fromYear, monthTo: request.toMonth, yearTo: request.toYear }\r\n        },\r\n        meta: {\r\n            referrer: request.referrer, type: types.GET_PRODUCT_SALES, loadMore: request.loadMore == true, url: apiTransaction.concat(\"productsales\")\r\n        }\r\n    };\r\n}\r\nexport const getCashflowDetail = (request, app) => {\r\n    app.startLoading(true);\r\n    return {\r\n        type: types.GET_CASHFLOW_DETAIL,\r\n        payload: { filter: { month: request.fromMonth, year: request.fromYear, monthTo: request.toMonth, yearTo: request.toYear } },\r\n        meta: {\r\n            app: app, type: types.GET_CASHFLOW_DETAIL, url: apiTransaction.concat(\"cashflowdetail\")\r\n        }\r\n    };\r\n}\r\nexport const getCashflowInfo = (month, year, type, app) => {\r\n    app.startLoading();\r\n    return {\r\n        type: types.GET_CASHFLOW_INFO,\r\n        payload: { filter: { year: year, month: month, module: type } },\r\n        meta: {\r\n            app: app, type: types.GET_CASHFLOW_INFO, url: apiTransaction.concat(\"cashflowinfo\")\r\n        }\r\n    };\r\n}\r\n\r\nexport const getProductListTrx = (name, app) => {\r\n    app.startLoading();\r\n    return {\r\n        type: types.FETCH_PRODUCT_LIST_TRX,\r\n        payload: {\r\n            entity: \"product\", filter: { page: 0, limit: 10, fieldsFilter: { name: name } }\r\n        },\r\n        meta: {\r\n            type: types.FETCH_PRODUCT_LIST, url: apiEntityBaseUrl.concat(\"get\"), app: app\r\n        }\r\n    }\r\n}\r\n\r\nexport const getCustomerList = (name, app) => {\r\n    app.startLoading();\r\n    return {\r\n        type: types.FETCH_CUSTOMER_LIST,\r\n        payload: {\r\n            entity: \"customer\", filter: { page: 0, limit: 10, fieldsFilter: { name: name } }\r\n        },\r\n        meta: {\r\n            type: types.FETCH_CUSTOMER_LIST, url: apiEntityBaseUrl.concat(\"get\"), app: app\r\n        }\r\n    }\r\n}\r\n\r\nexport const resetPurchaseTransaction = () => ({\r\n    type: types.RESET_TRX_PURCHASE,\r\n    payload: {},\r\n    meta: { type: types.RESET_TRX_PURCHASE }\r\n})\r\nexport const submitPurchaseTransaction = (request, app) => {\r\n    app.startLoading(true);\r\n    console.log(\"Submit Supply Purchase...\")\r\n    let requested = {\r\n        type: types.SUBMIT_TRX_PURCHASE,\r\n        payload: {\r\n            customer: request.customer,\r\n            productFlows: request.productFlows\r\n        },\r\n        meta: {\r\n            app: app, type: types.SUBMIT_TRX_PURCHASE, url: apiTransaction.concat(\"selling\")\r\n        }\r\n    };\r\n    return requested;\r\n}\r\nexport const submitSupplyTrx = (request, app) => {\r\n    console.log(\"Submit Supply Trx...\")\r\n    app.startLoading(true);\r\n    let requested = {\r\n        type: types.SUBMIT_TRX_SUPPLY,\r\n        payload: {\r\n            supplier: request.supplier,\r\n            productFlows: request.productFlows\r\n        },\r\n        meta: {\r\n            app: app, type: types.SUBMIT_TRX_SUPPLY, url: apiTransaction.concat(\"purchasing\")\r\n        }\r\n    };\r\n    return requested;\r\n}\r\n\r\nexport const getStockInfo = (productCode, app) => {\r\n    app.startLoading();\r\n    return {\r\n        type: types.GET_STOCK_INFO,\r\n        payload: {\r\n            entity: \"product\",\r\n            filter: {\r\n                limit: 1,\r\n                fieldsFilter:\r\n                    { \"code[EXACTS]\": productCode, withStock: true }\r\n            }\r\n        },\r\n        meta: {\r\n            app: app, type: types.GET_STOCK_INFO, url: apiBaseUrl.concat(\"get\")\r\n        }\r\n    }\r\n}\r\n\r\nexport const performLogout = (app) => {\r\n    app.startLoading();\r\n    let loginRequest = {\r\n        type: types.DO_LOGOUT,\r\n        payload: {},\r\n        meta: { app: app, type: types.DO_LOGOUT, url: apiAccount.concat(\"logout\") }\r\n    };\r\n    return loginRequest;\r\n}\r\n\r\nexport const performLogin = (username, password, app) => {\r\n    app.startLoading();\r\n    let loginRequest = {\r\n        type: types.DO_LOGIN,\r\n        payload: {\r\n            user: { username: username, password: password }\r\n        },\r\n        meta: { type: types.DO_LOGIN, url: apiAccount.concat(\"login\"), app: app }\r\n    };\r\n    return loginRequest;\r\n}\r\n\r\nexport const getLoggedUser = (app) => {\r\n    app.startLoading();\r\n    let request = {\r\n        type: types.GET_LOGGED_USER,\r\n        payload: { },\r\n        meta: { type: types.GET_LOGGED_USER, url: apiAccount.concat(\"user\"), app: app }\r\n    };\r\n    return request;\r\n}\r\n\r\nexport const refreshLoginStatus = () => {\r\n\r\n    let loginRequest = {\r\n        type: types.REFRESH_LOGIN,\r\n        payload: {},\r\n        meta: { type: types.REFRESH_LOGIN }\r\n    };\r\n    return loginRequest;\r\n}\r\n\r\nexport const getAllProductCategories = () => ({\r\n    type: types.FETCH_PRODUCT_CATEGORIES_ALL,\r\n    payload: {\r\n        entity: \"category\",\r\n        filter: {\r\n            limit: 0,\r\n            page: 0,\r\n            orderBy: null,\r\n            orderType: null,\r\n            fieldsFilter: {}\r\n        }\r\n    },\r\n    meta: {\r\n        type: types.FETCH_PRODUCT_CATEGORIES_ALL,\r\n        url: apiEntityBaseUrl.concat(\"get\")\r\n    }\r\n})\r\n\r\nexport const getSupplierList = (request, app) => {\r\n    app.startLoading();\r\n    let requested = {\r\n        type: types.FETCH_SUPPLIER_LIST,\r\n        payload: {\r\n            entity: \"supplier\",\r\n            filter: {\r\n                limit: 10,\r\n                page: request.page,\r\n                fieldsFilter: {\r\n                    name: request.name\r\n                },\r\n                orderBy: request.orderby,\r\n                orderType: request.ordertype\r\n            }\r\n        },\r\n        meta: {\r\n            type: types.FETCH_SUPPLIER_LIST,\r\n            url: apiBaseUrl.concat(\"get\"),\r\n            app: app\r\n        }\r\n    };\r\n\r\n    if (request.categoryId != null) {\r\n        requested.payload.filter.fieldsFilter[\"category,id[EXACTS]\"] = request.categoryId;\r\n    }\r\n\r\n    return requested;\r\n}\r\n\r\nexport const getProductList = (request, app) => {\r\n    // app.startLoading(request.withStock == true);\r\n    app.startLoading(true);\r\n    let requested = {\r\n        type: types.FETCH_PRODUCT_LIST,\r\n        payload: {\r\n            entity: \"product\",\r\n            filter: {\r\n                limit: 10,\r\n                page: request.page,\r\n                fieldsFilter: {\r\n                    name: request.name,\r\n                    withStock: request.withStock\r\n                },\r\n                orderBy: request.orderby,\r\n                orderType: request.ordertype\r\n            }\r\n        },\r\n        meta: {\r\n            type: types.FETCH_PRODUCT_LIST,\r\n            url: apiBaseUrl.concat(\"get\"),\r\n            app: app\r\n        }\r\n    };\r\n\r\n    if (request.categoryId != null) {\r\n        requested.payload.filter.fieldsFilter[\"category,id[EXACTS]\"] = request.categoryId;\r\n    }\r\n\r\n    return requested;\r\n}\r\n\r\n\r\nexport const getProductDetail = (code, app) => {\r\n    app.startLoading(true);\r\n    return {\r\n        type: types.FETCH_PRODUCT_DETAIL,\r\n        payload: {\r\n\r\n            entity: \"product\",\r\n            filter: {\r\n                limit: 1,\r\n                exacts: true,\r\n                contains: false,\r\n                fieldsFilter: {\r\n                    code: code,\r\n                    withStock: true,\r\n                    withSupplier: true\r\n                }\r\n            }\r\n        },\r\n        meta: {\r\n            type: types.FETCH_PRODUCT_DETAIL,\r\n            url: apiBaseUrl.concat(\"get\"),\r\n            app: app\r\n        }\r\n    }\r\n}\r\n\r\nexport const removeEntity = () => ({\r\n    type: types.REMOVE_SHOP_ENTITY,\r\n    payload: {},\r\n    meta: { type: types.REMOVE_SHOP_ENTITY }\r\n})\r\n\r\nexport const loadMoreSupplier = (page, productId, referrer) => {\r\n    referrer.props.app.startLoading();\r\n    return {\r\n        type: types.LOAD_MORE_SUPPLIER,\r\n        payload: { filter: { page: page, fieldsFilter: { \"productId\": productId } } },\r\n        meta: {\r\n            type: types.LOAD_MORE_SUPPLIER,\r\n            url: apiBaseUrl.concat(\"moresupplier\"),\r\n            referrer: referrer\r\n        }\r\n    }\r\n}\r\n\r\n","export const FETCH_PRODUCT_LIST = \"fetch_product_list\";\r\nexport const FETCH_PRODUCT_DETAIL= \"fetch_product_detail\";\r\nexport const REMOVE_SHOP_ENTITY= \"remove_shop_entity\";\r\nexport const FETCH_SUPPLIER_LIST = \"fetch_supplier_list\";\r\nexport const LOAD_MORE_SUPPLIER = \"load_more_supplier\";\r\nexport const FETCH_PRODUCT_CATEGORIES_ALL = \"all_product_categories\";\r\nexport const DO_LOGIN = \"do_login\";\r\nexport const DO_LOGOUT = \"do_logout\";\r\nexport const GET_STOCK_INFO = \"get_stock_info\";\r\nexport const SUBMIT_TRX_PURCHASE = \"submit_purchase\";\r\nexport const SUBMIT_TRX_SUPPLY = \"submit_supply\";\r\nexport const RESET_TRX_PURCHASE = \"reset_purchase\";\r\nexport const FETCH_CUSTOMER_LIST = \"fetch_cust_list\";\r\nexport const FETCH_PRODUCT_LIST_TRX = \"fetch_product_list\";\r\nexport const GET_CASHFLOW_INFO = \"get_cashflow\";\r\nexport const GET_CASHFLOW_DETAIL = \"get_cashflow_detail\";\r\nexport const GET_PRODUCT_SALES = \"get_product_sales\";\r\nexport const RESET_SUPPLIERS = \"reset_suppliers\";\r\nexport const RESET_PRODUCTS = \"reset_products\";\r\nexport const RESET_PRODUCT_STOCKS = \"RESET_PRODUCT_STOCKS\";\r\nexport const RESET_CUSTOMERS = \"RESET_CUSTOMERS\";\r\nexport const GET_PRODUCT_STOCKS = \"get_product_stocks\";\r\nexport const GET_PRODUCT_SALES_DETAIL = \"get_product_Sales_detail\";\r\nexport const REQUEST_ID = \"req_ID\";\r\nexport const SEND_MESSAGE = \"send_message\";\r\nexport const STORE_MESSAGE = \"store_message\";\r\nexport const GET_MESSAGE = \"GET_MESSAGE\";\r\nexport const UPDATE_CART = \"update_cart\";\r\nexport const GET_ENTITY = \"get_entity\";\r\nexport const GET_ENTITY_PROPERTY = \"get_entity_config\";\r\nexport const GET_MANAGEMENT_MENUS = \"GET_MANAGEMENT_MENUS\";\r\nexport const GET_ENTITY_BY_ID = \"get_entity_by_id\";\r\nexport const UPDATE_ENTITY = \"update_entity\";\r\nexport const GET_ENTITY_WITH_CALLBACK = \"GET_ENTITY_WITH_CALLBACK\";\r\nexport const REMOVE_MANAGED_ENTITY = \"rm_mng_entity\";\r\nexport const REFRESH_LOGIN = \"refresh_login\";\r\nexport const GET_LOGGED_USER = \"get_logged_user\";","import React, {Component} from 'react' \r\n\r\nclass Label extends Component{\r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.onClick = () =>{\r\n            if(this.props.onClick){\r\n                this.props.onClick();\r\n            }\r\n        }\r\n    }\r\n\r\n    render(){\r\n        let style = this.props.style?this.props.style:{};\r\n        let className = \"input-field \";\r\n       \r\n        if(this.props.className){  className+=\" \"+this.props.className; }\r\n        if(this.props.onClick){ className+=\" clickable\";  }\r\n        \r\n        return(\r\n            <div onClick={this.onClick} style={style} className={className}>\r\n                <label>{this.props.text}</label>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default Label;","import React, { Component } from 'react'\r\n\r\nclass Card extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.onClick = () => {\r\n            if (this.props.onClick) {\r\n                this.props.onClick();\r\n            }\r\n        }\r\n    }\r\n\r\n    render() { \r\n\r\n        let className;\r\n        if (this.props.className) {\r\n            className = \"card \" + this.props.className;\r\n        } else {\r\n            className = \"card\";\r\n        }\r\n\r\n        let titleComponent;\r\n        if (this.props.icon) {\r\n            titleComponent = <img src={this.props.icon} height=\"200\" className=\"card-img-top\" />\r\n        } else {\r\n            titleComponent = <div className=\"card-header\">\r\n                {this.props.title}\r\n            </div>\r\n        }\r\n\r\n        return (\r\n            <div onClick={this.onClick} style={{ ...this.props.style, marginRight: '5px' }} className={className}>\r\n                {titleComponent}\r\n                <div className=\"card-body\">\r\n                    {this.props.icon? <div className=\"card-title\">{this.props.title}</div>:null}\r\n                    {this.props.content}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Card;","import React, { Component } from 'react'\r\n\r\nimport * as url from '../../../constant/Url'\r\nimport * as stringUtil from '../../../utils/StringUtil'\r\nimport Label from '../../container/Label'\r\nimport Card from '../../card/Card'\r\n\r\nclass CatalogItem extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        const product = this.props.product;\r\n\r\n        //check if null\r\n        if (!product || !product.category || !product.unit) {\r\n            return <h3>Please wait..</h3>\r\n        }\r\n\r\n        const productImageUrl = product.imageUrl;\r\n        const imageUrl = url.baseImageUrl + productImageUrl.split(\"~\")[0];\r\n        const content = <CardContent product={product} />\r\n        const title = <Label className=\" clickable \" text={product.name} onClick={() => this.props.getProductDetail(product.code)} />;\r\n\r\n        return (\r\n            <Card style={{width:'250px', margin:'auto'}} className=\"grid-item\" title={title} icon={imageUrl} content={content} />\r\n        )\r\n    }\r\n}\r\n\r\nfunction CardContent(props) {\r\n    const product = props.product;\r\n    return (<div>\r\n        <Label style={{ fontFamily: \"Arial Narrow\", fontWeight: 'bolder' }}\r\n            text={<span><i className=\"fas fa-tags\"></i>&nbsp;{stringUtil.beautifyNominal(product.price) + \",00\"}</span>} />\r\n        <div>\r\n            <i className=\"fas fa-cubes\"></i>&nbsp;{stringUtil.beautifyNominal(product.count)}&nbsp;{product.unit.name}\r\n        </div>\r\n        <Label text={product.category.name} />\r\n    </div>);\r\n}\r\n\r\nexport default CatalogItem;","import React, {Component} from 'react'\r\nimport * as url from '../constant/Url'\r\nimport '../css/DetailRow.css'\r\n/**\r\n * used when showing list with icon and name and desc (exp: supplier list)\r\n */\r\nclass DetailRow extends Component{\r\n\r\n    constructor(props){\r\n        super(props);\r\n    }\r\n    render(){\r\n        return (\r\n            <tr className=\"detail-item\">\r\n                <td><img src={url.baseImageUrl+this.props.icon} width=\"50\" height=\"50\"/></td>\r\n                <td>{this.props.id} . {this.props.name} <br/><span className=\"link\">{this.props.desc}</span></td>\r\n            </tr>\r\n        )\r\n    }\r\n}\r\n\r\nexport default DetailRow;","import React, { Component } from 'react' \r\n\r\nclass ActionButton extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.onClick = () => {\r\n            if(this.props.onClick){\r\n                this.props.onClick();\r\n            }\r\n        }\r\n    }\r\n\r\n    render() {\r\n        let className = \"btn btn-secondary\";\r\n        if(this.props.status!= null ){\r\n            className= \"btn \".concat(\"btn-\").concat(this.props.status);\r\n        }\r\n        return (\r\n            <div >\r\n                <button style={{...this.props.style, margin:'1px'}} className={className} id={this.props.id} onClick={this.onClick}>{this.props.text}</button>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default ActionButton;","import React, { Component } from 'react' \r\nimport './ImageCarousel.css' \r\nimport InstantTable from './InstantTable';\r\nimport Label from './Label';\r\nimport ActionButton from '../buttons/ActionButton';\r\n\r\nclass ImageCarousel extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { index: 0 }\r\n\r\n        this.prev = () => {\r\n            if (this.props.imageUrls == null) return;\r\n            let currentIndex = this.state.index;\r\n            if (currentIndex <= 0)\r\n                currentIndex = this.props.imageUrls.length - 1;\r\n            else\r\n                currentIndex--;\r\n            this.setState({ index: currentIndex })\r\n        }\r\n\r\n        this.next = () => {\r\n            if (this.props.imageUrls == null) return;\r\n            let currentIndex = this.state.index;\r\n            if (currentIndex >= this.props.imageUrls.length - 1)\r\n                currentIndex = 0;\r\n            else\r\n                currentIndex++;\r\n            this.setState({ index: currentIndex })\r\n\r\n        }\r\n    }\r\n\r\n    render() {\r\n        let image = \"\";\r\n        let bgUrl = null;\r\n        if (this.props.imageUrls) {\r\n           \r\n            for (let i = 0; i < this.props.imageUrls.length; i++) {\r\n                const imageUrl = this.props.imageUrls[i];\r\n                console.debug(i, \"this.state.index: \",this.state.index, \"Image carousel URL\", imageUrl);\r\n                if (i == this.state.index) {\r\n                    image = <img src={imageUrl} className=\"carousel-item\" />\r\n                    bgUrl = imageUrl;\r\n                }\r\n            }\r\n        }\r\n        return (\r\n            <div className=\"carousel rounded\" style={carouselStyle(bgUrl)}> \r\n                 \r\n                <InstantTable style={{backgroundColor:'rgba(150,150,150,0.5'}} className=\"carousel-navigation\" rows={[{\r\n                    values: [\r\n                        <ActionButton text={<i className=\"fas fa-chevron-left\"></i>} id=\"btn-prev-img\" onClick={this.prev} />,\r\n                        <Label text={this.state.index + 1 + \"/\" + (this.props.imageUrls ? this.props.imageUrls.length : 1)} />,\r\n                        <ActionButton text={<i className=\"fas fa-chevron-right\"></i>} id=\"btn-next-img\" onClick={this.next} />\r\n                    ]\r\n                }]} />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nfunction carouselStyle(bgUrl){\r\n    return {\r\n        backgroundImage: 'url('+bgUrl+')',\r\n        backgroundSize: '400px 300px'\r\n    };\r\n}\r\n\r\nexport default ImageCarousel;","import React, { Component } from 'react'\r\nimport './ProductDetail.css'\r\nimport DetailRow from '../../DetailRow'\r\nimport * as url from '../../../constant/Url'\r\nimport * as actions from '../../../redux/actionCreators'\r\nimport { connect } from 'react-redux'\r\nimport ActionButtons from '../../buttons/ActionButtons'\r\nimport ActionButton from '../../buttons/ActionButton'\r\nimport InstantTable from '../../container/InstantTable'\r\nimport ImageCarousel from '../../container/ImageCarousel'\r\nimport { beautifyNominal } from '../../../utils/StringUtil'\r\nimport ContentTitle from '../../container/ContentTitle'\r\n\r\n\r\nclass ProductDetail extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            supplierShown: false,\r\n            supplierPage: 1,\r\n            product: null,\r\n            updated: new Date()\r\n        }\r\n\r\n        /**\r\n         * this method is called in shopReducer\r\n         */\r\n        this.refresh = () => {\r\n            console.log(\"++reresh++\");\r\n            this.setState({ updated: new Date() });\r\n        }\r\n\r\n        this.goBack = () => {\r\n            this.props.setDetailMode(false);\r\n        }\r\n\r\n        this.showSupplierList = (mode) => {\r\n            this.setState({ supplierShown: mode });\r\n            this.setState({ product: this.props.product });\r\n        }\r\n\r\n        this.loadMoreSupplier = (page, productId) => {\r\n\r\n            page++;\r\n            this.setState({ supplierPage: page });\r\n            this.props.loadMoreSupplier(this.state.supplierPage, productId, this);\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setState({ supplierShown: false });\r\n        document.title = \"Product Detail\";\r\n\r\n    }\r\n\r\n    componentDidUpdate() {\r\n    }\r\n\r\n    render() {\r\n\r\n        let product = this.props.product;\r\n\r\n        if (product == null) {\r\n            return (\r\n                <ContentTitle title=\"Please wait..\" iconClass=\"fas fa-info-circle\" />\r\n            )\r\n        }\r\n\r\n        /////////////////////////\r\n\r\n        let supplierListPanel = <p></p>\r\n        let supplierShown = this.state.supplierShown ? true : false;\r\n        if (supplierShown && product.suppliers) {\r\n            supplierListPanel = <div className=\"detail-supplier-container\">\r\n                <h3>Supplier List</h3>\r\n                <table className=\"supplier-container\">\r\n                    <tbody>\r\n                        {product.suppliers.map(\r\n                            supplier => {\r\n                                return (\r\n                                    <DetailRow desc={supplier.website} id={\"supp-\" + supplier.id} key={\"supp-\" + supplier.id} icon={supplier.iconUrl} name={supplier.name} />\r\n                                )\r\n                            }\r\n                        )}\r\n                    </tbody>\r\n                </table>\r\n                {this.state.supplierPage}\r\n                <ActionButton\r\n                    id=\"btn-show-more\"\r\n                    onClick={() => this.loadMoreSupplier(this.state.supplierPage, product.id)}\r\n                    text=\"Show More\" />\r\n            </div>\r\n        }\r\n        return (\r\n            <div className=\"section-container\" >\r\n\r\n                <ContentTitle title={product.name} iconClass=\"fas fa-info-circle\" description={product.description} />\r\n                <div className=\"product-desc\">\r\n                    <InstantTable disabled={true}\r\n                        rows={[\r\n                            { values: [<ProductImage product={product} />], CS: [2] },\r\n                            { values: [\"Price\", beautifyNominal(product.price)] },\r\n                            { values: [\"Item(s)\", beautifyNominal(product.count) + \" \" + (product.unit ? product.unit.name : \"\")] },\r\n                            { values: [\"Category\", product.category.name] }\r\n                        ]} />\r\n\r\n                    <ActionButtons buttonsData={[{\r\n                        id: \"btn-back\", onClick: this.goBack, text: \"Back\"\r\n                    },\r\n                    {\r\n                        id: \"btn-show-supplier\", status: \"success\",\r\n                        onClick: () => this.showSupplierList(supplierShown && product.suppliers ? false : true),\r\n                        text: (supplierShown && product.suppliers ? \"Hide suppliers\" : \"Show suppliers\")\r\n                    }]} />\r\n                </div>\r\n                {supplierListPanel}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nfunction ProductImage(props) {\r\n    const product = props.product;\r\n\r\n    if (product && product.imageUrl) {\r\n\r\n        let imageUrls = new Array();\r\n        for (let index = 0; index < product.imageUrl.split(\"~\").length; index++) {\r\n            imageUrls.push(url.baseImageUrl + product.imageUrl.split(\"~\")[index]);\r\n        }\r\n        return <ImageCarousel imageUrls={imageUrls} />\r\n    }\r\n    return null;\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    console.log(\"Catalog State to props: \", state);\r\n    return {\r\n        suppliers: state.shopState.suppliers\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    loadMoreSupplier: (page, productId, referrer) => dispatch(actions.loadMoreSupplier(page, productId, referrer))\r\n\r\n})\r\nexport default (connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(ProductDetail));","export const byId = (id) => { return document.getElementById(id) }\r\n\r\nexport const clearFields = (...ignore) => {\r\n    let inputs = document.getElementsByTagName(\"input\");\r\n    let withIgnore = ignore != null;\r\n    loop: for (let i = 0; i < inputs.length; i++) {\r\n        if (withIgnore)\r\n            for (let y = 0; y < ignore.length; y++)\r\n                if (inputs[i].id == ignore[y]) continue loop;\r\n\r\n        if (inputs[i].type == \"text\") inputs[i].value = \"\";\r\n        if (inputs[i].type == \"number\") inputs[i].value = 0;\r\n    }\r\n}\r\n\r\nexport function toBase64(file, referer, callback){\r\n\tconst reader = new FileReader();\r\n    reader.readAsDataURL(file.files[0]);\r\n    reader.onload = () => callback(reader.result, referer);\r\n    reader.onerror = error => {\r\n    \talert(\"Error Loading File\");\r\n    }\r\n}\r\n\r\nexport const checkExistance = function (...ids) {\r\n    for (let i = 0; i < ids.length; i++) {\r\n        if (byId(ids[i]) == null) {\r\n            console.log(\"component with id:\", ids[i], \"does not exist\");\r\n            return false;\r\n        }\r\n    }\r\n    return true;\r\n}\r\n\r\nexport const createNavButtons = (totalButton, currentPage) => {\r\n    totalButton = Math.ceil(totalButton);\r\n    if (!currentPage) { currentPage = 0 }\r\n    let buttonData = new Array(); \r\n    let min = currentPage - 3 < 0 ? 0 : currentPage - 3;\r\n    let max = currentPage + 3 > totalButton  ? totalButton  : currentPage + 3;\r\n\r\n    if (min != 0) {\r\n        buttonData.push({\r\n            text: 1,\r\n            value: 0\r\n        });\r\n    }\r\n\r\n    for (let index = min; index < max; index++) {\r\n        buttonData.push({\r\n            text: index + 1,\r\n            value: index\r\n        });\r\n    }\r\n\r\n    if (max != totalButton  ) {\r\n        buttonData.push({\r\n            text: totalButton,\r\n            value: totalButton -1 \r\n        });\r\n    }\r\n\r\n\r\n    return buttonData;\r\n}\r\n\r\nexport const getCurrentMMYY = () => {\r\n    return [new Date().getMonth() + 1, new Date().getFullYear()];\r\n}\r\n\r\nexport const getDropdownOptionsMonth = () => {\r\n    let options = [];\r\n    for (let i = 1; i <= 12; i++) {\r\n        options.push({ value: i, text: i });\r\n    }\r\n    return options;\r\n}\r\nexport const getDropdownOptionsYear = (from, to) => {\r\n    let options = [];\r\n    for (let i = from; i <= to; i++) {\r\n        options.push({ value: i, text: i });\r\n    }\r\n    return options;\r\n}","import React, { Component } from 'react' \r\nimport { byId } from '../../utils/ComponentUtil'\r\n\r\n/**\r\n * JUST FOR INPUT !!!\r\n */\r\nclass InputField extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.handleKeyup = () => {\r\n            if (this.props.onKeyUp && this.props.id)\r\n                this.props.onKeyUp(byId(this.props.id).value, this.props.id);\r\n        }\r\n\r\n        this.onChange = () => {\r\n            if (this.props.type == \"date\") {\r\n                this.handleKeyup();\r\n            }\r\n            if (this.props.id && this.props.type == \"checkbox\") {\r\n                this.props.onChange(this.props.id);\r\n            }\r\n            if (this.props.onChange && this.props.id) {\r\n                this.props.onChange();\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    componentDidMount() { \r\n        if (this.props.value && this.props.id) { \r\n            byId(this.props.id).value = this.props.value;\r\n        }\r\n    }\r\n\r\n    render() {\r\n        let type = this.props.type ? this.props.type : \"text\";\r\n        let placeholder = this.props.placeholder ? this.props.placeholder : \"\";\r\n        let name = this.props.name ? this.props.name : \"\";\r\n        let style = this.props.style ? this.props.style : {};\r\n\r\n        let inputField = <input style={style}\r\n            className= {type == 'checkbox'?'':\"form-control\"}\r\n            name={name}\r\n            key={\"KEY-input-\" + this.props.id}\r\n            id={this.props.id}\r\n            type={type}\r\n            onKeyUp={this.handleKeyup}\r\n            placeholder={placeholder}\r\n            checked={this.props.checked}\r\n            onChange={this.onChange}\r\n\r\n        />;\r\n\r\n        if (this.props.disabled == true) {\r\n            inputField = <input style={style}\r\n                className=\"form-control\"\r\n                onChange={this.onChange}\r\n                name={name} key={\"KEY-input-\" + this.props.id}\r\n                checked={this.props.checked}\r\n                id={this.props.id}\r\n                type={type} onKeyUp={this.handleKeyup}\r\n                placeholder={placeholder}\r\n\r\n                disabled />\r\n        }\r\n\r\n        if (type == \"textarea\") {\r\n            inputField = <textarea style={style}\r\n                className=\"form-control\"\r\n                name={name}\r\n                key={\"KEY-input-\" + this.props.id}\r\n                id={this.props.id}\r\n                type={type}\r\n                onKeyUp={this.handleKeyup}\r\n                placeholder={placeholder}\r\n                onChange={this.onChange}\r\n                checked={this.props.checked} />\r\n        }\r\n\r\n        return (\r\n            <div className=\"input-field\">\r\n                {inputField}\r\n                {this.props.type == \"radio\" || this.props.type == \"checkbox\" ?\r\n                 <span style={{ fontSize: '0.9em', margin:'4px' }}>{this.props.text} </span> : \"\"}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default InputField;","import React, { Component } from 'react'\r\nimport * as stringUtil from '../../utils/StringUtil' \r\nimport ActionButtons from './../buttons/ActionButtons';\r\n\r\nclass NavButtons extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n\r\n        let buttonsData = [];\r\n        if (this.props.buttonsData) {\r\n            buttonsData = this.props.buttonsData;\r\n        }\r\n        for (let i = 0; i < buttonsData.length; i++) {\r\n            const buttonData = buttonsData[i];\r\n            buttonsData[i].onClick = buttonData.buttonClick;\r\n            buttonsData[i].key = stringUtil.uniqueId() + \"_nav\";\r\n\r\n            if(buttonData.active){\r\n                buttonsData[i].style = {backgroundColor:'lightsteelblue'}\r\n            }\r\n        } \r\n        return (\r\n            <ActionButtons buttonsData={buttonsData} />\r\n        )\r\n    }\r\n}\r\n\r\nexport default NavButtons;","import React, { Component } from 'react'\r\nimport { byId } from '../../utils/ComponentUtil'\r\nimport * as stringUtil from '../../utils/StringUtil'\r\n\r\nclass ComboBox extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.handleOnChange = (e) => {\r\n            if (this.props.onChange) {\r\n                this.props.onChange(byId(this.props.id).value );\r\n                console.log(\"Select box \",this.props.id, \" CHANGED VALUE: \", byId(this.props.id).value);\r\n            }\r\n            else {\r\n                console.log(\"Not supported\");\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (this.props.value) {\r\n            byId(this.props.id).value = this.props.value;\r\n        }\r\n    }\r\n\r\n    render() {\r\n         \r\n        let options = [];\r\n        if (this.props.options) {\r\n            options = this.props.options;\r\n        }\r\n        // console.log(\"this.props.defaultValue: \", this.props.defaultValue)\r\n        return (\r\n            <div className=\"input-field \">\r\n               {this.props.label ? <label className=\"select-label\">{this.props.label}</label> : null }\r\n                <select value={this.props.defaultValue ? this.props.defaultValue : \"\"} \r\n                    className={\"form-control\"} id={this.props.id}\r\n                    onChange={this.handleOnChange} >\r\n                    {options.map(\r\n                        option => {\r\n                            return <option key={\"opt_\" + stringUtil.uniqueId()} value={option.value} >{option.text}</option>\r\n                        }\r\n                    )}\r\n                </select>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ComboBox;","import React, { Component } from 'react'\r\n\r\nclass GridComponent extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n    }\r\n    render() {\r\n        let items = [];\r\n        if (this.props.items) {\r\n            items = this.props.items;\r\n        }\r\n\r\n        const repeat = this.props.cols ? this.props.cols : items.length;\r\n        const gridAutoColumns = \"auto \".repeat(repeat);\r\n\r\n        return (\r\n            <div style={{ ...this.props.style, display: 'grid', verticalAlign: 'middle', gridTemplateColumns: gridAutoColumns }} >\r\n                {items.map((item, i)=> {\r\n                    return <div key={\"div-\"+i}>{item}</div>;\r\n                })}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default GridComponent;","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport CatalogItem from './CatalogItem'\r\nimport '../catalog/Catalog.css'\r\nimport { BrowserRouter as Router, Route, Link, Switch, withRouter } from 'react-router-dom'\r\nimport * as actions from '../../../redux/actionCreators'\r\nimport ProductDetail from './ProductDetail'\r\nimport * as menus from '../../../constant/Menus'\r\nimport ActionButtons from '../../buttons/ActionButtons'\r\nimport InputField from '../../inputs/InputField'\r\nimport * as componentUtil from '../../../utils/ComponentUtil'\r\nimport ContentTitle from '../../container/ContentTitle'\r\nimport * as stringUtil from '../../../utils/StringUtil'\r\nimport NavButtons from '../../navigation/NavButtons'\r\nimport ComboBox from '../../inputs/ComboBox'\r\nimport GridComponent from '../../container/GridComponent'\r\n\r\nclass Catalog extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            catalogData: {\r\n                entities: []\r\n            },\r\n            limit: 10,\r\n            totalData: 0,\r\n            products: [],\r\n            catalogPage: 0,\r\n            firstLoad: true,\r\n            requestOrderBy: null,\r\n            requestOrderType: null,\r\n            requestProductName: \"\",\r\n            requestWithStock: null,\r\n            requestCategoryId: null,\r\n            selectedProduct: null,\r\n            buttonCount: 0,\r\n            enableShopping: false,\r\n            activeId: null\r\n\r\n        };\r\n\r\n        this.focusToActiveField = () => {\r\n            if (componentUtil.byId(this.state.activeId)) {\r\n                componentUtil.byId(this.state.activeId).focus();\r\n            }\r\n        }\r\n\r\n        this.getProductInCart = (id) => {\r\n            for (let i = 0; i < this.props.cart.length; i++) {\r\n                let cartItem = this.props.cart[i];\r\n                if (cartItem.product.id == id) {\r\n                    cartItem.index = i;\r\n                    return cartItem;\r\n                }\r\n            }\r\n            return { index: -1, count: 0 };\r\n        }\r\n\r\n        this.clearCart = () => {\r\n            const props = this.props;\r\n            this.props.app.confirmDialog(\"Are you sure clear shopping list?\", function (e) {\r\n                props.updateCart([], props.app);\r\n            }, null);\r\n\r\n        }\r\n\r\n        this.addToCart = (product, count) => {\r\n            let currentCart = this.props.cart;\r\n            let existingIndex = this.getProductInCart(product.id).index;\r\n\r\n            if (existingIndex >= 0) {\r\n                let currentCount = currentCart[existingIndex].count;\r\n\r\n                if (currentCount + count < 0) return;\r\n\r\n                let currentCartItem = currentCart[existingIndex];\r\n                currentCartItem.count += count;\r\n\r\n                currentCart[existingIndex] = currentCartItem;\r\n\r\n            } else if (count != 0) {\r\n                currentCart.push({\r\n                    product: product,\r\n                    count: count\r\n                })\r\n            }\r\n            this.props.updateCart(currentCart, this.props.app);\r\n        }\r\n\r\n        this.getProductCatalog = (_page) => {\r\n            console.log(\"will go to page: \", _page)\r\n            this.props.getProductCatalog(\r\n                {\r\n                    page: _page,\r\n                    name: this.state.requestProductName,\r\n                    orderby: this.state.requestOrderBy,\r\n                    ordertype: this.state.requestOrderType,\r\n                    categoryId: this.state.requestCategoryId,\r\n                    withStock: this.state.requestWithStock\r\n                }, this.props.app\r\n            );\r\n            this.setState({ catalogPage: _page, totalData: this.props.catalogData.totalData });\r\n        }\r\n\r\n        this.handleOrderChange = (value) => {\r\n\r\n            if (value == null || value == \"00\" || value.length == 0 || value.split(\"-\").length != 2) {\r\n                this.setState({ requestOrderBy: null });\r\n                this.setState({ requestOrderType: null });\r\n                return;\r\n            } else {\r\n                let rawOrderRequest = value.split(\"-\");\r\n                this.setState({ requestOrderBy: rawOrderRequest[0] });\r\n                this.setState({ requestOrderType: rawOrderRequest[1] });\r\n            }\r\n\r\n        }\r\n\r\n        this.handleInputNameChange = (value, id) => {\r\n            console.log(\"==input name changed==\", id);\r\n            this.setState({ requestProductName: value, activeId: id });\r\n        }\r\n\r\n        this.clearField = () => {\r\n            this.setState({ requestProductName: \"\" });\r\n            this.setState({ requestOrderBy: null, requestOrderType: null });\r\n            this.setState({ requestCategoryId: null });\r\n\r\n            this.props.app.infoDialog(\"filter has been cleared, please push the search button to take effect\")\r\n        }\r\n\r\n        this.getProductDetail = (code) => {\r\n            console.log(\"Detail of: \", code);\r\n            //remove selected product if any\r\n            this.props.removeEntity();\r\n\r\n            this.props.getProductDetail(code, this.props.app);\r\n            this.props.setDetailMode(true);\r\n        }\r\n\r\n        this.setDetailMode = (detailMode) => {\r\n            document.title = \"Product Catalog\";\r\n            this.props.setDetailMode(detailMode);\r\n            this.props.removeEntity();\r\n        }\r\n\r\n        this.handleCategoryChange = (value) => {\r\n            this.setState({ catalogPage: 0 })\r\n            if (value != null && value != \"00\")\r\n                this.setState({ requestCategoryId: value });\r\n            else\r\n                this.setState({ requestCategoryId: null });\r\n\r\n        }\r\n\r\n        this.next = () => {\r\n            let catalogPage = this.state.catalogPage;\r\n            let totalPage = Math.floor(this.props.catalogData.totalData / this.state.limit);\r\n            if (catalogPage >= totalPage - 1) { catalogPage = 0; }\r\n            else { catalogPage++; }\r\n\r\n            this.getProductCatalog(catalogPage);\r\n        }\r\n\r\n        this.prev = () => {\r\n            let catalogPage = this.state.catalogPage;\r\n            let totalPage = Math.floor(this.props.catalogData.totalData / this.state.limit);\r\n            if (catalogPage <= 0) { catalogPage = totalPage - 1; }\r\n            else { catalogPage--; }\r\n\r\n            this.getProductCatalog(catalogPage);\r\n        }\r\n\r\n        this.handleChangeWithStockOption = (id) => {\r\n            if (!componentUtil.byId(id))\r\n                return;\r\n            this.setState({ requestWithStock: componentUtil.byId(id).checked });\r\n        }\r\n\r\n        this.handleChangeEnableShoppingOption = (id) => {\r\n            console.log(\"ID: \", id)\r\n            if (!componentUtil.byId(id))\r\n                return;\r\n            this.props.app.setEnableShopping(componentUtil.byId(id).checked)\r\n        }\r\n\r\n        this.generateNavButtonsData = () => {\r\n            let products = this.props.catalogData.entities == null ? [] : this.props.catalogData.entities;\r\n            let buttonData = [];\r\n            if (products.length > 0)\r\n                buttonData = componentUtil.createNavButtons(this.props.catalogData.totalData / this.state.limit,\r\n                    this.state.catalogPage);\r\n\r\n            const navButtonsData = [{\r\n                id: \"btn-prev\",\r\n                buttonClick: this.prev,\r\n                text: \"previous\"\r\n            }];\r\n            for (let i = 0; i < buttonData.length; i++) {\r\n                const b = buttonData[i];\r\n                let active = (b.value == this.state.catalogPage);\r\n                navButtonsData.push({\r\n                    id: b.value,\r\n                    active: active,\r\n                    buttonClick: () => this.getProductCatalog(b.value),\r\n                    text: b.text\r\n                });\r\n            }\r\n\r\n            navButtonsData.push({\r\n                id: \"btn-next\",\r\n                buttonClick: this.next,\r\n                text: \"next\"\r\n            });\r\n            return navButtonsData;\r\n        }\r\n\r\n    }\r\n\r\n    componentWillMount() {\r\n        document.title = \"Product Catalog\";\r\n        this.getProductCatalog(this.state.catalogPage);\r\n        this.props.setMenuCode(menus.CATALOG);\r\n        this.props.getAllProductCategories();\r\n\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        if (this.state.firstLoad && this.props.catalogData.filter != null) {\r\n            this.setState({\r\n                limit: this.props.catalogData.filter.limit,\r\n                totalData: this.props.catalogData.totalData,\r\n                firstLoad: false\r\n            });\r\n        }\r\n        this.focusToActiveField();\r\n    }\r\n\r\n    filterBox() {\r\n        let categories = [{ value: \"00\", text: \"-all category-\" }];\r\n        let actionButtons = [\r\n            { text: <i className=\"fa fa-search\" ></i>, status: \"success\", onClick: () => this.getProductCatalog(0), id: \"btn-search\" },\r\n            { text: \"Clear Filter\", status: 'warning', onClick: this.clearField, id: \"Clear-filter\" }\r\n        ];\r\n        this.props.productCategories.map(category => {\r\n            categories.push({ value: category.id, text: category.name });\r\n        })\r\n\r\n        if (this.props.enableShopping) {\r\n            actionButtons.push({\r\n                text: <span><i className=\"fa fa-cart-arrow-down\" ></i></span>, onClick: () => { this.clearCart() }, status: 'danger', id: \"clear-list\"\r\n            });\r\n        }\r\n\r\n        return <div className=\"filter-box\">\r\n            <GridComponent cols={3} style={{ width: 'max-content' }} items={[\r\n                <InputField placeholder=\"search by product name\"\r\n                    value={this.state.requestProductName}\r\n                    onKeyUp={this.handleInputNameChange}\r\n                    type=\"search\" id=\"input-product-name\" />\r\n                ,\r\n                <ComboBox\r\n                    defaultValue={this.state.requestOrderBy + \"-\" + this.state.requestOrderType}\r\n                    onChange={this.handleOrderChange}\r\n                    options={filterProductOption} id={\"select-order\"}\r\n                />,\r\n                <ComboBox\r\n                    defaultValue={this.state.requestCategoryId}\r\n                    onChange={this.handleCategoryChange}\r\n                    options={categories} id=\"select-category\"\r\n                />,\r\n                <ActionButtons style={{ margin: '5px' }} buttonsData={actionButtons} />,\r\n                <div className=\"row\">\r\n                    <InputField checked={this.state.requestWithStock} onChange={this.handleChangeWithStockOption}\r\n                        type=\"checkbox\" id=\"checkbox-with-stock\"\r\n                        text=\"Inculde Remaining Stock\" /> \r\n                    <InputField checked={this.props.enableShopping} onChange={this.handleChangeEnableShoppingOption}\r\n                        type=\"checkbox\" id=\"checkbox-enable-cart\"\r\n                        text=\"Show Shopping List\" />\r\n                </div>,\r\n            ]} />\r\n            <p></p>\r\n        </div>;\r\n    }\r\n\r\n    render() {\r\n\r\n        let products = this.props.catalogData.entities == null ? [] : this.props.catalogData.entities;\r\n\r\n        let productCatalog = (\r\n            <div className=\"section-container\" id=\"catalog-main\" key=\"catalog-main\">\r\n                <ContentTitle title=\"Catalog Page\" iconClass=\"fas fa-store-alt\" description=\"Choose your favourite products\" />\r\n                <NavButtons buttonsData={this.generateNavButtonsData()} />\r\n\r\n                {this.filterBox()}\r\n                <div className=\"row catalog-container\" >\r\n                    {products.map(\r\n                        product =>  \r\n                                <ProductCard\r\n                                    getProductDetail={this.getProductDetail}\r\n                                    getProductInCart={this.getProductInCart}\r\n                                    enableShopping={this.props.enableShopping}\r\n                                    product={product}\r\n                                    addToCart={this.addToCart} /> \r\n                    )}\r\n                </div>\r\n            </div>);\r\n\r\n        let rendered = productCatalog;\r\n\r\n        if (this.props.detailMode) {\r\n            let productDetail = <ProductDetail app={this.props.app} setDetailMode={this.setDetailMode} product={this.props.selectedProduct} />\r\n            rendered = productDetail;\r\n\r\n        }\r\n\r\n        return (rendered)\r\n    }\r\n}\r\n\r\nfunction ProductCard(props) {\r\n    let shoppingInfo = <></>;\r\n    const product = props.product;\r\n    if (props.enableShopping) {\r\n\r\n        const cartItem = props.getProductInCart(product.id);\r\n        const qty = cartItem.count;\r\n\r\n        const cartButtonsData = [\r\n            { text: <i className=\"fas fa-sync\"></i>, status: \"danger btn-sm\", onClick: () => props.addToCart(product, (qty * (-1))), id: \"btn-add-cart-\" + product.id },\r\n            { text: <i className=\"fa fa-minus-circle\"></i>, status: \"warning btn-sm\", onClick: () => props.addToCart(product, -1), id: \"btn-add-cart-\" + product.id },\r\n            { text: qty, id: \"info-cart-\" + product.id, status: 'light btn-sm' },\r\n            { text: <i className=\"fa fa-plus-circle\"></i>, status: 'success btn-sm', onClick: () => props.addToCart(product, 1), id: \"btn-reduce-cart-\" + product.id }\r\n        ];\r\n\r\n        shoppingInfo = <div>\r\n            <ActionButtons buttonsData={cartButtonsData} />\r\n        </div>\r\n    }\r\n\r\n    return (\r\n        <div className=\"col-md-3\" style={{width:'min-content'}} key={stringUtil.uniqueId()}>\r\n            {shoppingInfo}\r\n            <CatalogItem getProductDetail={props.getProductDetail} key={product.id} product={product} />\r\n        </div>\r\n    )\r\n}\r\n\r\nconst filterProductOption = [\r\n    { value: \"00\", text: \"-all order-\" },\r\n    { value: \"name-asc\", text: \"Name [A-Z]\" },\r\n    { value: \"name-desc\", text: \"Name [Z-A]\" },\r\n    { value: \"price-asc\", text: \"Price [cheap]\" },\r\n    { value: \"price-desc\", text: \"Price [expensive]\" }\r\n];\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        catalogData: state.shopState.catalogData,\r\n        selectedProduct: state.shopState.entity,\r\n        productCategories: state.shopState.categories,\r\n        cart: state.shopState.cart\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    getProductCatalog: (request, app) => dispatch(actions.getProductList(request, app)),\r\n    getProductDetail: (code, app) => dispatch(actions.getProductDetail(code, app)),\r\n    removeEntity: () => dispatch(actions.removeEntity()),\r\n    getAllProductCategories: () => dispatch(actions.getAllProductCategories()),\r\n    updateCart: (cart, app) => dispatch(actions.updateCart(cart, app))\r\n})\r\nexport default withRouter(connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(Catalog));","import React, { Component } from 'react'\r\n\r\nclass Message extends Component {\r\n\r\n    render() {\r\n        const status = this.props.status ? this.props.status : \"secondary\";\r\n\r\n        return (\r\n            <div className={\"alert alert-\" + status} role=\"alert\">\r\n                {this.props.text}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Message;","import React, { Component } from 'react'\r\nimport * as actions from '../../../redux/actionCreators'\r\nimport { connect } from 'react-redux'\r\nimport * as menus from '../../../constant/Menus'\r\nimport { withRouter } from 'react-router';\r\nimport ContentTitle from '../../container/ContentTitle';\r\nimport Label from '../../container/Label';\r\nimport ActionButton from '../../buttons/ActionButton';\r\nimport Message from '../../messages/Message';\r\nimport '../login/Login.css'\r\nimport InputField from '../../inputs/InputField';\r\nimport { byId } from '../../../utils/ComponentUtil'\r\nclass Login extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            username: null,\r\n            password: null,\r\n            showMessageLoginFailed: false\r\n        }\r\n\r\n        this.handleUsername = (value) => {\r\n            this.setState({ username: value });\r\n        }\r\n        this.handlePassword = (value) => {\r\n            this.setState({ password: value });\r\n        }\r\n\r\n        this.doLogin = () => {\r\n\r\n            console.log(\"u:\", this.state.username, \",p:\", this.state.password);\r\n            this.props.performLogin(\r\n                byId(\"username-field\").value,\r\n                byId(\"password-field\").value,\r\n                this.props.app);\r\n        }\r\n\r\n        this.endMessage = () => {\r\n            this.setState({ showMessageLoginFailed: false })\r\n        }\r\n\r\n        this.getLoggedUser = () => {\r\n            this.props.getLoggedUser(this.props.app);\r\n        }\r\n\r\n        this.validateLoginStatus = () => {\r\n            if (this.props.loginStatus == true) {\r\n                console.info(\"Login success! Redirect to dashboard\");\r\n                this.getLoggedUser();\r\n                this.props.history.push(\"/dashboard\");\r\n            }\r\n        }\r\n\r\n        this.message = () => {\r\n            let message = <p>\r\n                {this.props.loginFailed ? <Message endMessage={this.endMessage} status=\"danger\" text=\"Login Failed\" /> : \"\"}\r\n            </p>\r\n            return message;\r\n        }\r\n    }\r\n\r\n\r\n    componentDidMount() {\r\n        this.validateLoginStatus();\r\n        this.props.setMenuCode(menus.LOGIN);\r\n        document.title = \"Login\";\r\n\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        this.validateLoginStatus();\r\n        // if(this.props.loginAttempt == false && this.state.showMessageLoginFailed == false){\r\n        //     this.setState({showMessageLoginFailed:true})\r\n        // }\r\n    }\r\n\r\n\r\n\r\n    render() {\r\n\r\n        return (\r\n            <div className=\"section-container\">\r\n                < ContentTitle title=\"Login Page\" iconClass=\"fas fa-sign-in-alt\" />\r\n                <this.message />\r\n                <div className=\"login-container card\">\r\n                    <div className=\"card-header\">Login</div>\r\n                    <div className=\"card-body\">\r\n                        <Label text=\"Username\" />\r\n                        <InputField id=\"username-field\" onKeyUp={this.handleUsername} />\r\n                        <Label text=\"Password\" />\r\n                        <InputField id=\"password-field\" type=\"password\" onKeyUp={this.handlePassword} />\r\n                        <ActionButton style={{ margin: '5px' }} id=\"btn-login\" status=\"primary\" onClick={this.doLogin} text=\"Login\" />\r\n                    </div></div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps = state => {\r\n    //console.log(state);\r\n    return { \r\n  \r\n      //user\r\n      loginStatus: state.userState.loginStatus, \r\n      loginFailed: state.userState.loginFailed, \r\n      loggedUser: state.userState.loggedUser,\r\n      loginAttempt: state.userState.loginAttempt,   \r\n    }\r\n  }\r\nconst mapDispatchToProps = dispatch => ({\r\n    performLogin: (username, password, app) => dispatch(actions.performLogin(username, password, app)),  \r\n    getLoggedUser: (app) => dispatch(actions.getLoggedUser(app))\r\n  })\r\nexport default withRouter(connect( \r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n  )(Login))","import React from 'react';\r\nimport './Tab.css'\r\n\r\nclass Tab extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n    }\r\n    render() {\r\n        let tabsData = this.props.tabsData ? this.props.tabsData : [];\r\n\r\n        let autoColumns = \"5% \"+(\"min-content \".repeat(tabsData.length ))+\" auto\";\r\n        return (\r\n            // <div className=\"tab-container\" style={{\r\n            //     ...this.props.style,\r\n            //     width:'auto',\r\n            //     gap:'0px',\r\n            //     display: 'grid',\r\n            //     gridTemplateColumns: autoColumns\r\n            // }} >\r\n            //      <div style={{width:'100%', borderBottom:'solid 1px lightgray'}}></div>\r\n            <ul className=\"nav nav-tabs\">\r\n  \r\n                {tabsData.map((tabData,i) => {\r\n                    return (\r\n                        <li key={\"tab\"+i} className=\"nav-item\">\r\n                            <a href=\"#\" className={tabData.active ? \"nav-link active\" : \"nav-link\"} onClick={tabData.onClick ? tabData.onClick : () => { }}>\r\n                                {tabData.text}\r\n                            </a>\r\n                        </li>\r\n                    // <div key={\"tab\"+i} className={tabData.active ? \"tab-element tab-item-active rounded-top\" : \"tab-element tab-item\"} onClick={tabData.onClick ? tabData.onClick : () => { }}>\r\n                    //     {tabData.text}\r\n                    // </div>\r\n                    )\r\n                })}\r\n            </ul>\r\n            //     <div style={{width:'100%', borderBottom:'solid 1px lightgray'}}></div>\r\n            // </div>\r\n        )\r\n    }\r\n}\r\nexport default Tab;","import React, { Component } from 'react'\r\nimport * as menuCss from '../../../components/navigation/Menu.css'\r\nimport Tab from '../../navigation/Tab';\r\n\r\nclass DashboardMenu extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.goToMenu = (menuCode_) => {\r\n\r\n            this.props.goToMenu(menuCode_);\r\n        }\r\n\r\n        this.isActive = (code) => {\r\n            return this.props.currentMenu == code;\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        document.title = \"Dashboard\";\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <div className=\"dashboard-menu\" >\r\n                <Tab style={{whiteSpace: 'nowrap'}} tabsData={[\r\n                    { onClick: () => this.goToMenu('main'), active: this.isActive('main'), text: \"Home\" },\r\n                    { onClick: () => this.goToMenu('trxIn'), active: this.isActive('trxIn'), text: \"Purchasing\" },\r\n                    { onClick: () => this.goToMenu('trxOut'), active: this.isActive('trxOut'), text: \"Selling\" },\r\n                    { onClick: () => this.goToMenu('cashflow'), active: this.isActive('cashflow'), text: \"Cashflow\" },\r\n                    { onClick: () => this.goToMenu('productSales'), active: this.isActive('productSales'), text: \"Product Sales\" }]}\r\n                />\r\n            </div >\r\n        )\r\n    }\r\n\r\n}\r\n\r\nconst MenuItem = (props) => {\r\n    return (\r\n        <div onClick={props.onClick} className=\"dashboard-menu-item  paper-shadow  \">\r\n            <h3>{props.text}</h3></div>\r\n    )\r\n}\r\n\r\nexport default DashboardMenu;","import React, { Component } from 'react'\r\nimport * as stringUtil from '../../../utils/StringUtil'\r\nimport CrudRow from '../../container/CrudRow'\r\n\r\n\r\nclass StockListTable extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.headers = () => {\r\n            let headers; \r\n            if (this.props.disabled == true) {\r\n                headers = [\r\n                    \"No\", \"Flow ID\", \"Product Name\", \"Expiry Date\", \"Quantity\", \"Price @Item\", \"Total Price\", \"Reff Stock ID\"\r\n                ];\r\n            } else {\r\n                headers = [\r\n                    \"No\", \"Flow ID\", \"Product Name\", \"Expiry Date\", \"Quantity\", \"Price @Item\", \"Total Price\", \"Reff Stock ID\", \"Option\"\r\n                ];\r\n            };\r\n            return headers;\r\n        }\r\n    }\r\n\r\n    render() { \r\n        \r\n        let i = 1;\r\n        const headers = this.headers(); \r\n        const productFlows = this.props.productFlows;\r\n        const stockListRow =\r\n            productFlows.map(\r\n                productFlow => {\r\n                    const product = productFlow.product ? productFlow.product : {};\r\n                    const price = this.props.purchasing ?  productFlow.price : product.price;\r\n                    const totalPrice = productFlow.count * product.price;\r\n                    const count = stringUtil.beautifyNominal(productFlow.count);\r\n                    const priceString = stringUtil.beautifyNominal(price) + \",00\";\r\n                    const totalPriceString = stringUtil.beautifyNominal(totalPrice) + \",00\";\r\n                    const values = [\r\n                        i, productFlow.id, product.name, productFlow.expiryDate, count, priceString, totalPriceString, productFlow.flowReferenceId\r\n                    ];\r\n                    i++;\r\n                    return <CrudRow disabled={this.props.disabled}\r\n                        handleDelete={this.props.handleDelete} handleEdit={this.props.handleEdit}\r\n                        key={stringUtil.uniqueId() + \"-row-trx\"}\r\n                        identifier={productFlow.entityId}\r\n                        values={values} />\r\n                }\r\n            );\r\n\r\n        let tableStyle = {   };\r\n\r\n        return (\r\n            <div >\r\n                <table className=\"table\" style={tableStyle}>\r\n                    <thead>\r\n                        <tr key={stringUtil.uniqueId() + \"-stock\"}>\r\n                            {headers.map(headerValue => <th key={stringUtil.uniqueId() + \"-th\"}>{headerValue} </th>)}\r\n                        </tr>\r\n                        {stockListRow}\r\n                    </thead>\r\n                </table>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default StockListTable;","import React, { Component } from 'react'\r\nimport './Loader.css'\r\n\r\nclass Loader extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            timer: 130,\r\n            intervalId: 0\r\n        }\r\n        this.update = () => {\r\n            if (this.state.timer < 0) {\r\n                clearInterval(this.state.intervalId);\r\n            }\r\n            console.log(\"tick\")\r\n            this.setState({ timer: this.state.timer - 1 })\r\n            if (this.state.timer < 0 && this.props.endMessage) {\r\n                this.props.endMessage();\r\n            }\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (this.props.withTimer == true) {\r\n            let intervalId = setInterval(this.update, 1, null);\r\n            this.setState({ intervalId: intervalId });\r\n        }\r\n    }\r\n\r\n    render() {\r\n        let className = \"message message-\" + this.props.type;\r\n        let messageText = this.props.text;\r\n\r\n        let msgStyle = {};\r\n        if (this.props.realtime == true) {  \r\n            className = \"message-loading progress\";\r\n            messageText = <span className=\"loader\">{this.props.progress + \"%\"}</span>   \r\n            msgStyle.zIndex = 100;\r\n        }\r\n\r\n        return (\r\n            <div style={msgStyle} className={className} >\r\n                <LoaderContent progress={this.props.progress} realtime={this.props.realtime} />\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nfunction LoaderContent(props){\r\n    if(props.realtime){\r\n        return (\r\n            <div className=\"progress-bar progress-bar-striped\" role=\"progressbar\" style={{ \r\n                width: props.progress + \"%\",\r\n                transitionDuration: '300ms'\r\n                }}>\r\n            </div>\r\n        );\r\n    }\r\n    return (\r\n        <button className=\"btn btn-primary\" type=\"button\" disabled>\r\n            <span className=\"spinner-border spinner-border-sm\" role=\"status\" aria-hidden=\"true\"></span>\r\n            <span className=\" \">Loading...</span>\r\n        </button>\r\n    );\r\n}\r\n\r\nexport default Loader;","import React, { Component } from 'react'\r\nimport './Transaction.css'\r\nimport InstantTable from '../../container/InstantTable';\r\nfunction Spinner(props) {\r\n    return <div className=\"spinner-border text-primary\" role=\"status\">\r\n        <span className=\"sr-only\">Loading...</span>\r\n    </div>\r\n}\r\nclass TransactionReceipt extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        const line = \"-\".repeat(77);\r\n        let transactionReceiptComponent = <Spinner />;\r\n        let stakeHolder = {};\r\n\r\n        if (this.props.transactionData &&\r\n            this.props.transactionData.user) {\r\n            let transaction = this.props.transactionData;\r\n\r\n            if (transaction.type == \"OUT\") {\r\n                stakeHolder = { id: \"trx_customer\", values: [\"Customer\", transaction.customer.name] }\r\n            } else {\r\n                stakeHolder = { id: \"trx_supplier\", values: [\"Supplier\", transaction.supplier.name] }\r\n            }\r\n\r\n            transactionReceiptComponent =\r\n                <InstantTable disabled={true} rows={[\r\n                    { id: \"trx_code\", values: [\"Code\", transaction.code] },\r\n                    { id: \"trx_date\", values: [\"Date\", new String(new Date(transaction.transactionDate))] },\r\n                    { id: \"trx_type\", values: [\"Type\", transaction.type] },\r\n                    stakeHolder,\r\n\r\n                ]} />;\r\n        }\r\n\r\n        return (\r\n            <div className=\"transaction-receipt paper-shadow\" >\r\n                <h2>Transaction {this.props.status}</h2>\r\n                {transactionReceiptComponent}\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default TransactionReceipt;","import React, { Component } from 'react'\r\n \r\n\r\nclass DropdownItem extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            hover: false\r\n        }\r\n\r\n        this.onHover = (e) => {\r\n            if(this.props.onHover)\r\n                this.props.onHover( this.props.index);\r\n        }\r\n        this.unHover = (e) => { \r\n            this.setState({ hover: false })\r\n        }\r\n    }\r\n\r\n\r\n    render() {\r\n          return (\r\n            <div onMouseLeave={this.unHover} onMouseOver ={this.onHover}  >\r\n                {this.props.text}\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default DropdownItem;","import React, { Component } from 'react'\r\nimport DropdownItem from './DropdownItem';\r\nimport * as stringUtil from '../../utils/StringUtil';\r\nimport './Inputs.css'\r\n/**\r\n * JUST FOR INPUT !!!\r\n */\r\nclass DynamicDropdown extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            focus: true, hover: false, hoverIndex: -1,\r\n\r\n        }\r\n\r\n        this.handleKeyup = () => {\r\n            if (this.props.onKeyUp && this.props.id)\r\n                this.props.onKeyUp(document.getElementById(this.props.id).value, this.props.id);\r\n        }\r\n\r\n        this.onBlur = () => {\r\n            console.log(\"blur\");\r\n            this.setState({ focus: false, hover: false })\r\n        }\r\n\r\n        this.onSelect = (dataValue, text) => {\r\n            console.log(\"select value:\", dataValue, \" text: \", text);\r\n            if (this.props.onSelect) { this.props.onSelect(dataValue); }\r\n            if (this.props.id) {\r\n                document.getElementById(this.props.id).value = text;\r\n            }\r\n        }\r\n\r\n        this.onHover = (index) => {\r\n            if (this.state.hoverIndex != index)\r\n                this.setState({ hoverIndex: index });\r\n        }\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (this.props.value && this.props.id) {\r\n            document.getElementById(this.props.id).value = this.props.value;\r\n        }\r\n    }\r\n\r\n    render() {\r\n\r\n        let placeholder = this.props.placeholder ? this.props.placeholder : \"\";\r\n        let inputClassName = \"form-control\";\r\n\r\n        return (\r\n            <div onMouseOver={() => this.setState({ focus: true })} onMouseLeave={this.onBlur} className=\"dropdown-wrapper input-field\">\r\n                \r\n                <input\r\n                    className={inputClassName}\r\n                    onFocus={() => this.setState({ focus: true })}\r\n                    id={this.props.id}\r\n                    type=\"text\"\r\n                    onKeyUp={this.handleKeyup}\r\n                    placeholder={placeholder} />\r\n\r\n                <DropDownComponent focus={this.state.focus}\r\n                    dropdownList={this.props.dropdownList}\r\n                    hoverIndex={this.state.hoverIndex}\r\n                    onSelect={this.onSelect}\r\n                    onHover={this.onHover}\r\n                />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nfunction DropDownComponent(props) {\r\n    let dropdownComponent = \"\";\r\n    if (props.focus && props.dropdownList && props.dropdownList.length > 0) {\r\n        let dropdownList = props.dropdownList;\r\n        // console.log(\"RENDERD HOVER:\", this.state.hoverIndex);\r\n        dropdownComponent = <div className=\"dropdown\">\r\n            {dropdownList.map(\r\n                (data, i) => {\r\n                    let className = \"dropdown-item\";\r\n                    if (props.hoverIndex == i) className += \" dropdown-item-hovered\";\r\n                    return (\r\n                        <div\r\n                            id={stringUtil.uniqueId()}\r\n                            key={\"dropdown-xx-\" + stringUtil.uniqueId()}\r\n                            onClick={() => props.onSelect(data.value, data.text)}\r\n                            style={{ position: \"relative\" }}\r\n                            className={className}>\r\n                            <DropdownItem onHover={props.onHover} index={i} text={data.text} />\r\n                        </div>\r\n                    )\r\n                })}\r\n        </div> \r\n    }\r\n\r\n    return dropdownComponent;\r\n}\r\n\r\n\r\nexport default DynamicDropdown;","import React, { Component } from 'react'   \r\nimport ActionButton from '../../buttons/ActionButton';\r\n \r\n\r\nclass AddToCartButton extends Component {\r\n\r\n    render(){\r\n        return <ActionButton status=\"info btn-lg\" text={<i className=\"fa fa-cart-plus\"></i>} onClick={this.props.onClick} />\r\n     }\r\n\r\n}\r\nexport default AddToCartButton;","import React, { Component } from 'react'\r\nimport * as url from '../../../constant/Url'\r\nimport * as stringUtil from '../../../utils/StringUtil'\r\nimport InstantTable from '../../container/InstantTable';\r\nimport Card from '../../card/Card'; \r\n\r\nclass DetailProductPanel extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.getRowData = () => {\r\n            const product = this.props.product;\r\n            let row = [];\r\n            if (this.props.stockView) {\r\n                row = [\r\n                    { values: [\"Name\", product.name] },\r\n                    { values: [\"Remaining\", product.count + \" \" + product.unit.name] },\r\n                    { values: [\"Price\", stringUtil.beautifyNominal(product.price) + \",00\"] },\r\n                    { values: [\"Exp Date\", '-'] }\r\n                ]\r\n            } else {\r\n                row = [\r\n                    { values: [\"Name\", product.name + \"-\" + product.id] },\r\n                    { values: [\"Unit\", product.unit.name] },\r\n                    { values: [\"Category\", product.category.name] },\r\n                    { values: [\"Price\", stringUtil.beautifyNominal(product.price) + \",00\"] },\r\n                ];\r\n            }\r\n\r\n            return row;\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        console.log(\"detail stock of:\", this.props.product);\r\n    }\r\n\r\n    render() {\r\n        let product = this.props.product;\r\n        const defaultVal = spinner();\r\n        if (this.props.product == null || this.props.product.unit == null || this.props.product.category == null) {\r\n            product = {\r\n                name: defaultVal,\r\n                unit: {\r\n                    name: defaultVal\r\n                },\r\n                category: {\r\n                    name: defaultVal\r\n                },\r\n                price: 0\r\n            }\r\n        }\r\n\r\n        let productImageName = product.imageUrl;\r\n        if (productImageName) {\r\n            productImageName = productImageName.split(\"~\")[0];\r\n        }\r\n        let imageUrl = url.baseImageUrl + productImageName;\r\n\r\n        return (\r\n           <Card title=\"Product Detail\" content={\r\n                <table><tbody><tr valign=\"top\">\r\n                    <td>\r\n                        <InstantTable disabled={true} rows={this.getRowData()} />\r\n                    </td>\r\n                    <td><div className=\"img-panel rounded box-shadow\"><img src={imageUrl} width=\"300\" height=\"200\" /></div>\r\n                    </td></tr></tbody></table>\r\n           } /> \r\n        )\r\n    }\r\n\r\n}\r\n\r\nconst spinner = (props) => {\r\n    return (\r\n        <div className=\"spinner-border\" role=\"status\">\r\n            <span className=\"sr-only\">Loading...</span>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DetailProductPanel;","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport * as actions from '../../../redux/actionCreators'\r\nimport * as trxCss from './Transaction.css'\r\nimport Label from '../../container/Label';\r\nimport InputField from '../../inputs/InputField';\r\nimport StockListTable from './StockListTable'\r\nimport Loader from '../../messages/Loader'\r\nimport TransactionReceipt from './TransactionReceipt'\r\nimport * as stringUtil from '../../../utils/StringUtil'\r\nimport ActionButtons from '../../buttons/ActionButtons'\r\nimport DynamicDropdown from '../../inputs/DynamicDropdown'\r\nimport { byId } from '../../../utils/ComponentUtil'\r\nimport * as componentUtil from '../../../utils/ComponentUtil'\r\nimport AddToCartButton from './AddToCartButton';\r\nimport DetailProductPanel from './DetailProductPanel';\r\nimport GridComponent from '../../container/GridComponent'\r\nimport Card from '../../card/Card';\r\n\r\nclass TransactionSelling extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            productName: \"\",\r\n            customerName: \"\", productFlowStock: {},\r\n            customer: {}, showDetail: false, productFlows: [], messageShow: false, messageType: \"\",\r\n            stockId: 0, quantity: 0,\r\n            activeField: \"\"\r\n        }\r\n\r\n        this.setActiveField = (id) => {\r\n            this.setState({ activeField: id });\r\n        }\r\n\r\n        this.getStockInfo = (id) => {\r\n            let stockId = id ? id : this.state.stockId;\r\n            this.props.getStockInfo(stockId, this.props.app);\r\n            this.setState({ stockId: id, showDetail: true })\r\n        }\r\n\r\n\r\n        this.isExistInTheChart = (productId) => {\r\n            if (this.state.productFlows == null) return false;\r\n            return this.getProductFlow(productId) != null;\r\n        }\r\n\r\n        this.addToCart = () => {\r\n            if (this.state.quantity <= 0) {\r\n                this.props.app.infoDialog(\"Please provide valid quantity!\"); return;\r\n            }\r\n            let quantity = this.state.quantity;\r\n            let productFlowStock = this.props.productFlowStock;\r\n            if (quantity > productFlowStock.count) {\r\n                this.props.app.infoDialog(\"Stock unavailable!\"); return;\r\n            }\r\n\r\n            // let productFlow = productFlowStock.id;\r\n            if (this.isExistInTheChart(productFlowStock.id))\r\n                if (!window.confirm(\"The product already exist in the chart, do you want to override it?\"))\r\n                    return;\r\n\r\n            let ID = Math.floor(Math.random() * 1000);\r\n            let newProductFlow = {\r\n                \"id\": ID,\r\n                \"product\": productFlowStock,\r\n                \"price\": productFlowStock.price,\r\n                \"count\": quantity,\r\n                // \"expiryDate\": productFlow.expiryDate,\r\n                \"flowReferenceId\": 0,//productFlow.id,\r\n                //stock list table identifier\r\n                \"entityId\": productFlowStock.id,\r\n            };\r\n\r\n            //update list in the state\r\n            this.addProductFlow(newProductFlow);\r\n            this.emptyForm();\r\n        }\r\n\r\n        this.addProductFlow = (productFlow) => {\r\n            let currentFlows = this.state.productFlows;\r\n            //update\r\n            if (this.getProductFlow(productFlow.flowReferenceId) != null) {\r\n                for (let index = 0; index < this.state.productFlows.length; index++)\r\n                    if (this.state.productFlows[index].flowReferenceId == productFlow.flowReferenceId) currentFlows[index] = productFlow;\r\n\r\n            } else\r\n                currentFlows.push(productFlow); //add new\r\n\r\n            this.setState({ productFlows: currentFlows });\r\n            this.showMessage(\"Success saving to chart\", \"success\");\r\n            componentUtil.clearFields(\"input-customer-name\");\r\n        }\r\n\r\n        this.getProductFlow = (productId) => {\r\n            if (this.state.productFlows == null) return null;\r\n            for (let index = 0; index < this.state.productFlows.length; index++) {\r\n                if (this.state.productFlows[index].product.id == productId) return this.state.productFlows[index];\r\n            }\r\n            return null;\r\n        }\r\n\r\n        this.emptyForm = () => {\r\n            this.setState({ productName: null, stockId: 0, quantity: 0 });\r\n        }\r\n\r\n        this.handleEdit = (stockId) => {\r\n            alert(\"will Edit: \" + stockId);\r\n            this.props.getStockInfo(stockId, this.props.app);\r\n            this.setState({ stockId: stockId, quantity: this.getProductFlow(stockId).count });\r\n        }\r\n\r\n        this.handleDelete = (stockId) => {\r\n            if (!window.confirm(\"Are you sure want to delete this from chart?\")) return;\r\n\r\n            if (!this.isExistInTheChart(stockId)) {\r\n                alert(\"Record does not exist in the chart!\");\r\n                return;\r\n            }\r\n            let currentFlows = this.state.productFlows;\r\n            for (let index = 0; index < this.state.productFlows.length; index++) {\r\n                if (this.state.productFlows[index].flowReferenceId == stockId) {\r\n                    currentFlows.splice(index, 1);\r\n                }\r\n            }\r\n\r\n            this.setState({ productFlows: currentFlows });\r\n        }\r\n\r\n        this.submitTransaction = () => {\r\n            /**\r\n             * check mandatory fields\r\n             */\r\n            if (this.state.customer.id == null || this.state.productFlows == null || this.state.productFlows.length == 0) {\r\n                this.props.app.infoDialog(\"Mandatory fields must not be empty!\");\r\n                return;\r\n            }\r\n\r\n            const app = this;\r\n\r\n            this.props.app.confirmDialog(\"Are you sure want to proceed?\", function (e) {\r\n                let request = { productFlows: app.state.productFlows, customer: app.state.customer };\r\n                app.props.submitPurchaseTransaction(request, app.props.app);\r\n            }, function (e) { });\r\n        }\r\n\r\n        this.endMessage = () => { this.setState({ messageShow: false }) }\r\n\r\n        this.showMessage = (text, type) => {\r\n            this.setState({ messageShow: true, messageText: text, messageType: type });\r\n        }\r\n\r\n        this.reset = () => {\r\n            componentUtil.clearFields(null);\r\n            this.setState({ customerName: null, customer: null, productName: null, product: null, productFlows: [], showDetail: false });\r\n            this.emptyForm();\r\n            this.props.resetPurchaseTransaction();\r\n        }\r\n\r\n        this.calculateTotalPrice = () => {\r\n            let totalPrice = 0;\r\n            if (this.state.productFlows) {\r\n                this.state.productFlows.forEach(productFlow => {\r\n                    totalPrice = totalPrice + productFlow.count * productFlow.product.price;\r\n                });\r\n            }\r\n            return stringUtil.beautifyNominal(totalPrice) + (\",00\");\r\n        }\r\n\r\n        this.getCustomerList = (value, id) => {\r\n            this.setState({ customerName: value });\r\n            this.setActiveField(id);\r\n            this.props.getCustomerList(value, this.props.app);\r\n        }\r\n\r\n        this.selectCustomer = (id) => {\r\n            if (this.props.customersData == null) {\r\n                alert(\"Data not found!\");\r\n                return;\r\n            }\r\n            for (let index = 0; index < this.props.customersData.length; index++)\r\n                if (this.props.customersData[index].id == id)\r\n                    this.setState({ customerName: this.props.customersData[index].name, customer: this.props.customersData[index] });\r\n            this.props.resetCustomers();\r\n        }\r\n\r\n\r\n        this.getProductStockList = (value, id) => {\r\n            this.setState({ productName: value });\r\n            this.setActiveField(id);\r\n            this.props.getProductStockList(value, this.props.app);\r\n        }\r\n\r\n        this.selectproduct = (productCode) => {\r\n            if (this.props.products == null) {\r\n                alert(\"Data not found!\");\r\n                return;\r\n            }\r\n            for (let i = 0; i < this.props.products.length; i++) {\r\n                if (this.props.products[i].code == productCode) {\r\n                    this.setState({ productName: this.props.products[i].name });\r\n                }\r\n            }\r\n\r\n            this.setState({ stockId: productCode });\r\n            this.getStockInfo(productCode);\r\n            this.props.resetProductStocks();\r\n        }\r\n\r\n        this.detailStockComponent = () => {\r\n            if (this.props.productFlowStock) {\r\n                return (<DetailProductPanel stockView={true} product={this.props.productFlowStock} />);\r\n            }\r\n            return <></>\r\n        }\r\n\r\n        this.buttonAddToCart = () => {\r\n            if (this.props.productFlowStock != null)\r\n                return <AddToCartButton onClick={this.addToCart} />\r\n            else\r\n                return <></>\r\n        }\r\n\r\n        this.messageComponent = () => {\r\n            if (this.state.messageShow == true) {\r\n                return <Loader withTimer={true} text={this.state.messageText} endMessage={this.endMessage} type={this.state.messageType} />\r\n            }\r\n            return <></>\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        document.title = \"Selling\";\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        if (byId(this.state.activeField) != null) {\r\n            byId(this.state.activeField).focus();\r\n        }\r\n    }\r\n\r\n    getProductDropdownData() {\r\n        const productList = [];\r\n        if (this.props.products != null) {\r\n            for (let i = 0; i < this.props.products.length; i++) {\r\n                const product = this.props.products[i];\r\n                productList.push({ value: product.code, text: product.name });\r\n            }\r\n        }\r\n        return productList;\r\n    }\r\n\r\n    getCustomerDropdownData() {\r\n        const customerList = [];\r\n\r\n        if (this.props.customersData != null) {\r\n            for (let i = 0; i < this.props.customersData.length; i++) {\r\n                const customer = this.props.customersData[i];\r\n                customerList.push({ value: customer.id, text: customer.name });\r\n            }\r\n        }\r\n        return customerList;\r\n    }\r\n\r\n\r\n    render() {\r\n        let totalPrice = this.calculateTotalPrice();\r\n\r\n        let customerList = this.getCustomerDropdownData();\r\n        let productList = this.getProductDropdownData();\r\n\r\n        let formComponent = <div className=\"row\"><div className=\"col-5\">\r\n            <Card title=\"Transaction Detail\" content={<>\r\n                <GridComponent style={{gridRowGap:'5px'}} cols={2} items={[\r\n                    <Label text=\"Customer\" />,\r\n                    <DynamicDropdown value={this.state.customerName} onSelect={this.selectCustomer} dropdownList={customerList}\r\n                        onKeyUp={this.getCustomerList} id=\"input-customer-name-sell\" placeholder=\"customer name\" />,\r\n                    <Label text=\"Product\" />,\r\n                    <DynamicDropdown value={this.state.productName} onSelect={this.selectproduct} dropdownList={productList}\r\n                        onKeyUp={this.getProductStockList} id=\"input-product-name-sell\" placeholder=\"product name\" />,\r\n                    <Label text=\"Quantity\" />,\r\n                    <InputField id=\"input-quantity-sell\"\r\n                        value={this.state.quantity} onKeyUp={(value, id) => this.setState({ activeField: id, quantity: value })}\r\n                        type=\"number\" placeholder=\"quantity\" />\r\n                ]}\r\n                />\r\n                <this.buttonAddToCart />\r\n            </>}\r\n            /></div> <div className=\"col-7\">\r\n                <this.detailStockComponent /></div>\r\n        </div>\r\n\r\n        let buttonsData = [\r\n            { text: \"Back\", status: \"secondary\", onClick: () => this.props.setFeatureCode(null), id: \"btn-back\" },\r\n            { text: \"Back And Reset\", status: \"warning btn-sm\", onClick: () => { this.props.setFeatureCode(null); this.reset() }, id: \"btn-back\" },\r\n            { text: \"Reset\", status: 'danger btn-sm', id: \"btn-reset-trx\", onClick: this.reset }];\r\n\r\n        if (this.props.successTransaction) {\r\n            formComponent = <TransactionReceipt status=\"Success\" transactionData={this.props.transactionData} />\r\n        } else {\r\n            buttonsData.push({ id: \"btn-submit-trx\", status: 'success btn-sm', text: \"Submit Transaction\", onClick: this.submitTransaction });\r\n        }\r\n\r\n        return (\r\n            <div className=\"transaction-container\">\r\n                <this.messageComponent />\r\n\r\n                <h2>Selling {this.state.customer && this.state.customer.name ? <small>{this.state.customer.name}</small> : \"\"}</h2>\r\n                {formComponent}\r\n                <div>\r\n                    <ActionButtons buttonsData={buttonsData} />\r\n                </div>\r\n                {/* ======= product list ======== */}\r\n                <h3>Product List</h3>\r\n                <StockListTable disabled={this.props.successTransaction} handleEdit={this.handleEdit} handleDelete={this.handleDelete} productFlows={this.state.productFlows} />\r\n                <Label className=\"totalprice-info\" text={\"Total Price: IDR \" + totalPrice} />\r\n\r\n            </div >\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps = state => {\r\n    return {\r\n        productFlowStock: state.transactionState.productFlowStock,\r\n        transactionData: state.transactionState.transactionData,\r\n        successTransaction: state.transactionState.successTransaction,\r\n        customersData: state.transactionState.customersData,\r\n        products: state.transactionState.products\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    resetCustomers: () => dispatch(actions.resetCustomers()),\r\n    getStockInfo: (stockId, app) => dispatch(actions.getStockInfo(stockId, app)),\r\n    submitPurchaseTransaction: (request, app) => dispatch(actions.submitPurchaseTransaction(request, app)),\r\n    resetPurchaseTransaction: () => dispatch(actions.resetPurchaseTransaction()),\r\n    resetProductStocks: () => (dispatch(actions.resetProductStocks())),\r\n    getCustomerList: (name, app) => dispatch(actions.getCustomerList(name, app)),\r\n    getProductStockList: (name, app) => dispatch(actions.getProductStocks(name, app))\r\n})\r\nexport default (connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(TransactionSelling));","import React, { Component } from 'react'\r\nimport '../css/Error.css'\r\nimport '../css/Common.css'\r\n\r\nclass ErrorPage extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        document.title = \"Error Page\";\r\n        return (\r\n            <div className=\"section-container\">\r\n                <h2>{this.props.message}</h2>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default ErrorPage;","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport * as actions from '../../../redux/actionCreators'\r\n\r\nimport * as trxCss from './Transaction.css'\r\nimport Label from '../../container/Label';\r\nimport InputField from '../../inputs/InputField';\r\nimport DetailProductPanel from './DetailProductPanel';\r\nimport StockListTable from './StockListTable'\r\nimport Loader from '../../messages/Loader'\r\nimport TransactionReceipt from './TransactionReceipt'\r\nimport * as stringUtil from '../../../utils/StringUtil'\r\nimport ActionButtons from '../../buttons/ActionButtons'\r\nimport * as componentUtil from '../../../utils/ComponentUtil'\r\nimport { byId } from '../../../utils/ComponentUtil'\r\nimport DynamicDropdown from '../../inputs/DynamicDropdown'\r\nimport AddToCartButton from './AddToCartButton';\r\nimport GridComponent from '../../container/GridComponent';\r\nimport Card from '../../card/Card'\r\nimport BaseTransactionPage from './BaseTransactionPage';\r\n\r\nclass TransactionPurchasing\r\n    extends BaseTransactionPage {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            productName: \"\", supplierName: \"\", product: null, supplier: {}, showDetail: false, productFlows: [],\r\n            messageShow: false, messageType: \"\",\r\n            quantity: 0, price: 0, expiryDate: \"2020-01-01\",\r\n            activeField: \"\"\r\n        }\r\n\r\n        this.isExistInTheChart = (productId) => {\r\n            if (this.state.productFlows == null) return false;\r\n            return this.getProductFlow(productId) != null;\r\n        }\r\n\r\n        this.addToCart = () => {\r\n            if (this.state.quantity <= 0) {\r\n                this.props.app.infoDialog(\"Please provide valid quantity!\"); return;\r\n            }\r\n            let quantity = this.state.quantity;\r\n            let price = this.state.price;\r\n            let expDate = this.state.expiryDate;\r\n            let product = this.state.product;\r\n\r\n            if (this.isExistInTheChart(product.id))\r\n                if (!window.confirm(\"The product already exist in the chart, do you want to override it?\"))\r\n                    return;\r\n\r\n            let ID = Math.floor(Math.random() * 1000);\r\n            let newProductFlow = {\r\n                \"id\": ID,\r\n                \"product\": product,\r\n                \"price\": price,\r\n                \"count\": quantity,\r\n                \"expiryDate\": expDate,\r\n                //for stock list table identifier\r\n                \"entityId\": product.id\r\n            };\r\n\r\n            //update list in the state\r\n            this.addProductFlow(newProductFlow);\r\n            this.emptyForm();\r\n        }\r\n\r\n        this.addProductFlow = (productFlow) => {\r\n            let currentFlows = this.state.productFlows;\r\n            //update\r\n            if (this.getProductFlow(productFlow.product.id) != null) {\r\n                for (let index = 0; index < this.state.productFlows.length; index++) {\r\n                    if (this.state.productFlows[index].product.id == productFlow.product.id) {\r\n                        currentFlows[index] = productFlow;\r\n                    }\r\n                }\r\n            } else{\r\n                currentFlows.push(productFlow); //add new\r\n            }\r\n            \r\n            this.setState({ productFlows: currentFlows });\r\n            this.showMessage(\"Success saving to chart\", \"success\");\r\n\r\n        }\r\n\r\n        this.getProductFlow = (productId) => {\r\n            if (this.state.productFlows == null) return null;\r\n            for (let i = 0; i < this.state.productFlows.length; i++) {\r\n                if (this.state.productFlows[i].product.id == productId) return this.state.productFlows[i];\r\n            }\r\n            return null;\r\n        }\r\n\r\n        this.getProduct = (id) => {\r\n            if (this.state.products == null) return null;\r\n            for (let index = 0; index < this.state.products.length; index++) {\r\n                if (this.state.products[index].id == id) { return this.state.products[id]; }\r\n            }\r\n            return null;\r\n        }\r\n\r\n        this.handleEdit = (productId) => {\r\n            alert(\"will Edit: \" + productId);\r\n            let productFlow = this.getProductFlow(productId);\r\n            if (null == productFlow) {\r\n                alert(\"Data not found\");\r\n                return;\r\n            }\r\n            this.setState({ quantity: productFlow.count });\r\n            this.setState({ price: productFlow.price });\r\n            this.setState({ productName: productFlow.product.name });\r\n            this.setState({ expiryDate: productFlow.expiryDate });\r\n            this.setState({ product: productFlow.product })\r\n        }\r\n\r\n        this.handleDelete = (id) => {\r\n            if (!window.confirm(\"Are you sure want to delete this from chart?\")) return;\r\n\r\n            if (!this.isExistInTheChart(id)) {\r\n                alert(\"Record does not exist in the chart!\");\r\n                return;\r\n            }\r\n            let currentFlows = this.state.productFlows;\r\n            for (let index = 0; index < this.state.productFlows.length; index++) {\r\n                if (this.state.productFlows[index].product.id == id) {\r\n                    currentFlows.splice(index, 1);\r\n                }\r\n            }\r\n            this.setState({ productFlows: currentFlows });\r\n        }\r\n\r\n        this.submitTransaction = () => {\r\n            /**\r\n             * check mandatory fields\r\n             */\r\n            if (this.state.supplier.id == null || this.state.productFlows == null || this.state.productFlows.length == 0) {\r\n                this.props.app.infoDialog(\"Mandatory fields must not be empty!\")\r\n                return;\r\n            }\r\n\r\n            const app = this;\r\n            this.props.app.confirmDialog(\"Are you sure want to proceed?\", function (e) {\r\n                let request = { productFlows: app.state.productFlows, supplier: app.state.supplier };\r\n                app.props.submitSupplyTransaction(request, app.props.app);\r\n            }, function (e) { });\r\n        }\r\n\r\n        this.endMessage = () => { this.setState({ messageShow: false }) }\r\n\r\n        this.showMessage = (text, type) => {\r\n            this.setState({ messageShow: true, messageText: text, messageType: type });\r\n        }\r\n\r\n        this.reset = () => {\r\n            componentUtil.clearFields(null);\r\n            this.setState({\r\n                supplier: null,\r\n                productFlows: [], showDetail: false, product: null,\r\n                supplierName: null, productName: null, expiryDate: null, quantity: null, price: null\r\n            });\r\n\r\n            this.props.resetPurchaseTransaction();\r\n        }\r\n\r\n        this.emptyForm = () => {\r\n            //emoty states\r\n            this.setState({\r\n                productName: null, expiryDate: null, quantity: null, price: null\r\n            });\r\n\r\n            this.emptyFormValues();\r\n        }\r\n\r\n        this.setActiveField = (id) => {\r\n            this.setState({ activeField: id });\r\n        }\r\n\r\n        this.calculateTotalPrice = () => {\r\n            let totalPrice = 0;\r\n            if (this.state.productFlows)\r\n                this.state.productFlows.forEach(productFlow => {\r\n                    totalPrice = totalPrice + productFlow.count * productFlow.product.price;\r\n                });\r\n\r\n            return stringUtil.beautifyNominal(totalPrice) + (\",00\");\r\n        }\r\n\r\n        this.getSupplierList = (value, id) => {\r\n            if (value == null || value.trim() == \"\") { return; }\r\n            this.setState({ supplierName: value });\r\n            this.props.getSupplierList(value, this.props.app);\r\n            this.setActiveField(id);\r\n        }\r\n\r\n        this.selectSupplier = (id) => {\r\n            if (this.props.suppliers == null) {\r\n                alert(\"Data not found!\");\r\n                return;\r\n            }\r\n            for (let i = 0; i < this.props.suppliers.length; i++)\r\n                if (this.props.suppliers[i].id == id)\r\n                    this.setState({ supplierName: this.props.suppliers[i].name, supplier: this.props.suppliers[i] });\r\n            this.props.resetSuppliers();\r\n        }\r\n\r\n        this.getProductList = (value, id) => {\r\n            if (value == null || value.trim() == \"\") { return; }\r\n            this.addFormFieldId(id);\r\n            this.setState({ showDetail: true, productName: value })\r\n            this.props.getProductList(value, this.props.app);\r\n            this.setActiveField(id);\r\n        }\r\n\r\n        this.selectProduct = (id) => {\r\n            if (this.props.products == null) {\r\n                alert(\"Data not found!\");\r\n                return;\r\n            }\r\n            for (let i = 0; i < this.props.products.length; i++)\r\n                if (this.props.products[i].id == id)\r\n                    this.setState({ productName: this.props.products[i].name, product: this.props.products[i] });\r\n            this.props.resetProducts();\r\n\r\n        }\r\n\r\n        this.messageComponent = () => {\r\n            if (this.state.messageShow == true) {\r\n                return <Loader withTimer={true} text={this.state.messageText} endMessage={this.endMessage} type={this.state.messageType} />\r\n            }\r\n            return <></>\r\n        }\r\n    }\r\n    componentDidMount() {\r\n        if (this.props.resetPurchaseTransaction) {\r\n            this.props.resetPurchaseTransaction();\r\n        }\r\n        document.title = \"Purchasing\";\r\n        this.formFieldIds = [];\r\n        this.props.resetSuppliers();\r\n\r\n    }\r\n    componentDidUpdate() {\r\n        if (byId(this.state.activeField) != null) {\r\n            byId(this.state.activeField).focus();\r\n        }\r\n    }\r\n\r\n    getSupplierDropdownData() {\r\n        const supplierList = [];\r\n        if (this.props.suppliers != null)\r\n            for (let index = 0; index < this.props.suppliers.length; index++) {\r\n                const supplier = this.props.suppliers[index];\r\n                supplierList.push({ value: supplier.id, text: supplier.name });\r\n            }\r\n        return supplierList;\r\n    }\r\n\r\n    getProductDropdownData() {\r\n        const productList = [];\r\n        if (this.props.products != null)\r\n            for (let index = 0; index < this.props.products.length; index++) {\r\n                const product = this.props.products[index];\r\n                productList.push({ value: product.id, text: product.name });\r\n            }\r\n\r\n        return productList;\r\n    }\r\n    render() {\r\n        let totalPrice = this.calculateTotalPrice();\r\n\r\n        const detailStock = this.state.product ? <DetailProductPanel product={this.state.product} /> : null;\r\n        const supplierList = this.getSupplierDropdownData();\r\n        const productList = this.getProductDropdownData();\r\n\r\n        let formComponent = <div className=\"row\">\r\n            <div className=\"col-5\">\r\n                <Card title=\"Transaction Detail\" content={<>\r\n                    <GridComponent style={{gridRowGap:'5px'}} cols={2}\r\n                        items={[\r\n                            <Label text=\"Supplier\" />,\r\n                            <DynamicDropdown onSelect={this.selectSupplier} dropdownList={supplierList}\r\n                                value={this.state.supplierName}\r\n                                onKeyUp={this.getSupplierList} id=\"input-supplier-name-purc\" placeholder=\"supplier name\" />,\r\n                            <Label text=\"Product\" />,\r\n                            <DynamicDropdown onSelect={this.selectProduct} id=\"input-product-name-purc\" dropdownList={productList}\r\n                                value={this.state.productName}\r\n                                onKeyUp={this.getProductList} placeholder=\"input product name\" />,\r\n                            <Label text=\"Price\" />,\r\n                            <InputField id=\"input-product-price-purc\"\r\n                                value={this.state.price} onKeyUp={(value, id) => {\r\n                                    this.setState({ activeField: id, price: value }); this.addFormFieldId(id);\r\n                                }}\r\n                                type=\"number\" placeholder=\"input product price\" />,\r\n                            <Label text=\"Quantity\" />,\r\n                            <InputField id=\"input-quantity-purc\"\r\n                                value={this.state.quantity} onKeyUp={(value, id) => {\r\n                                    this.setState({ activeField: id, quantity: value });  this.addFormFieldId(id);\r\n                                }}\r\n                                type=\"number\" placeholder=\"quantity\" />,\r\n                            <Label text=\"Expiry Date\" />,\r\n                            <InputField id=\"input-exp-date-purc\"\r\n                                value={this.state.expiryDate} onKeyUp={(value, id) => {\r\n                                    this.setState({ activeField: id, expiryDate: value });   this.addFormFieldId(id);\r\n                                }}\r\n                                type=\"date\" placeholder=\"input product exp date\" />\r\n                        ]}\r\n                    />\r\n                    {this.state.product != null ? <AddToCartButton onClick={this.addToCart} /> : \"\"}\r\n                </>} />\r\n            </div>\r\n            <div className=\"col-7\">{detailStock}</div>\r\n        </div>;\r\n\r\n        let buttonsData = [\r\n            { text: \"Back\", status: \"secondary\", onClick: () => this.props.setFeatureCode(null), id: \"btn-back\" },\r\n            { text: \"Back And Reset\", status: \"warning\", onClick: () => { this.props.setFeatureCode(null); this.reset() }, id: \"btn-back-reset\" },\r\n            { text: \"Reset\", status: 'danger', id: \"btn-reset-trx\", onClick: this.reset }];\r\n\r\n        if (this.props.successTransaction) {\r\n            formComponent =\r\n                <TransactionReceipt status=\"Success\" transactionData={this.props.transactionData} />\r\n        } else {\r\n            buttonsData.push({ id: \"btn-submit-trx\", status: 'success btn-sm', text: \"Submit Transaction\", onClick: this.submitTransaction });\r\n        }\r\n\r\n        return (\r\n            <div className=\"transaction-container\">\r\n                <this.messageComponent />\r\n                <h2>Purchasing {this.state.supplier && this.state.supplier.name ? <small>{this.state.supplier.name}</small> : null}</h2>\r\n\r\n                {formComponent}\r\n                <div>\r\n                    <ActionButtons buttonsData={buttonsData} />\r\n                </div>\r\n                {/* ======= product list ======== */}\r\n                <h3>Product List</h3>\r\n                <StockListTable purchasing={true} disabled={this.props.successTransaction} handleEdit={this.handleEdit} handleDelete={this.handleDelete} productFlows={this.state.productFlows} />\r\n                <Label className=\"totalprice-info\" text={\"Total Price: IDR \" + totalPrice} />\r\n\r\n            </div >\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps = state => {\r\n    return {\r\n        selectedProduct: state.transactionState.selectedProduct,\r\n        transactionData: state.transactionState.transactionData,\r\n        successTransaction: state.transactionState.successTransaction,\r\n        suppliers: state.shopState.suppliersData.entities,\r\n        products: state.transactionState.productsData\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    getProductList: (productName, app) => dispatch(actions.getProductListTrx(productName, app)),\r\n    submitSupplyTransaction: (request, app) => dispatch(actions.submitSupplyTrx(request, app)),\r\n    resetPurchaseTransaction: () => dispatch(actions.resetPurchaseTransaction()),\r\n    resetSuppliers: () => dispatch(actions.resetSuppliers()),\r\n    resetProducts: () => dispatch(actions.resetProducts()),\r\n    getSupplierList: (name, app) => dispatch(actions.getSupplierList({ name: name, page: 0 }, app))\r\n})\r\nexport default (connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(TransactionPurchasing));","import React, { Component } from 'react'\r\n\r\nclass BaseTransactionPage extends Component {\r\n\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.formFieldIds = [];\r\n    } \r\n\r\n    addFormFieldId(id) {\r\n        if (this.formFieldIds.indexOf(id) >= 0) {\r\n\r\n        } else {\r\n            this.formFieldIds.push(id);\r\n        }\r\n    }\r\n\r\n    emptyFormValues(){\r\n        for (let i = 0; i < this.formFieldIds.length; i++) {\r\n            const id = this.formFieldIds[i];\r\n            try {\r\n                document.getElementById(id).value = null;\r\n            } catch (e) { }\r\n        }\r\n    }\r\n\r\n}\r\n\r\nexport default BaseTransactionPage;","import React, { Component } from 'react' \r\nimport '../css/Chart.css'\r\n\r\nclass Chart extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {firstLoad:true, counter:1};\r\n\r\n        this.update = () => {\r\n            let counter = this.state.counter + 1;\r\n            this.setState({counter:counter})\r\n            if(this.state.firstLoad&&counter > 10){\r\n                this.setState({firstLoad:false});\r\n                clearInterval(this.state.intervalId);\r\n            }\r\n        }\r\n    }\r\n\r\n    componentDidMount(){\r\n       // this.setState({firstLoad:false})\r\n       if(this.state.firstLoad){\r\n           let intervalId = setInterval(this.update, 1, null);\r\n           this.setState({intervalId : intervalId});\r\n       }\r\n    }\r\n\r\n    render() {\r\n        \r\n\r\n        let percentage = this.state.firstLoad?0: this.props.value / this.props.maxValue * 100;\r\n        let orientation = this.props.orientation ? this.props.orientation : \"horizontal\";\r\n        const width = this.props.width ? this.props.width : 400;\r\n        if (percentage < 0 || this.props.maxValue <= 0) {\r\n            percentage = 0;\r\n        }\r\n        let chartStyle = {\r\n            width: percentage + '%'\r\n        };\r\n        let mainStyle = {\r\n            width: width + 'px',\r\n            height: '20px'\r\n        };\r\n        let legendStyle = {\r\n            marginLeft: percentage / 100 * width + 'px',\r\n        };\r\n        if (orientation == \"vertical\") {\r\n            mainStyle = {\r\n                height: this.props.width ? this.props.width : '400px',\r\n                width: '20px',\r\n                verticalAlign: 'bottom',\r\n\r\n            };\r\n            chartStyle = {\r\n                height: percentage + '%',\r\n                marginBottom:0\r\n            };\r\n            legendStyle = {\r\n                marginTop: percentage / 100 * width + 'px',\r\n                writingMode: 'vertical-rl',\r\n                textOrientation: 'mixed'\r\n            };\r\n            if (this.props.type == \"success\") {\r\n                chartStyle.marginLeft = \"5px\";\r\n                mainStyle.borderLeft = 'solid 1px gray';\r\n            } else if (this.props.type == \"warning\") {\r\n                chartStyle.marginRight = \"5px\";\r\n            }\r\n        } else {\r\n            /**\r\n             * horizontal====\r\n             */ \r\n            if (this.props.type == \"success\") {\r\n               \r\n                chartStyle.marginTop = \"5px\";\r\n            } else if (this.props.type == \"warning\") {\r\n                chartStyle.marginBottom = \"5px\";\r\n            }\r\n        }\r\n        let barClassName = this.props.type ? this.props.type : \"regular\";\r\n        return (\r\n            <div className=\"chart\" style={mainStyle}>\r\n                <div className={\"char-bar \" + barClassName + \"-chart\"} style={chartStyle}><span style={legendStyle}>{this.props.text}</span></div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Chart;","import React, { Component } from 'react' \r\nimport ComboBox from './ComboBox';\r\n\r\nclass ComboBoxes extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.handleOnChange = () => {\r\n            if (this.props.onChange)\r\n                this.props.onChange(document.getElementById(this.props.id).value);\r\n        }\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (this.props.value) {\r\n            document.getElementById(this.props.id).value = this.props.value;\r\n        }\r\n    }\r\n\r\n    render() {\r\n        let comboBoxes = [];\r\n         \r\n\r\n        if (this.props.values) { comboBoxes = this.props.values; }\r\n\r\n        const gridAutoColumns = \"auto \".repeat(comboBoxes.length);\r\n\r\n        return (<div style={{ width:'max-content', display:'grid', gridTemplateColumns:gridAutoColumns}} >\r\n            {comboBoxes.map(comboBox => {\r\n                let options = [];\r\n                if (comboBox.options) { options = comboBox.options; }\r\n                return (\r\n                    <ComboBox\r\n                        label={comboBox.label}\r\n                        defaultValue={comboBox.defaultValue ? comboBox.defaultValue : \"\"}\r\n                        key={\"key_\" + comboBox.id} id={comboBox.id}\r\n                        onChange={comboBox.handleOnChange}\r\n                        options={options} />\r\n                )\r\n            })}\r\n\r\n        </div>)\r\n    }\r\n}\r\n\r\nexport default ComboBoxes;","import React, { Component } from 'react'\r\nimport Label from '../components/container/Label'\r\nimport * as componentUtil from './ComponentUtil'\r\nimport InstantTable from './../components/container/InstantTable';\r\nimport ComboBoxes from './../components/inputs/ComboBoxes';\r\n\r\nexport const FilterBox = props => {\r\n    return (\r\n        <div className=\"filter-box rounded\" >\r\n            <InstantTable valign=\"bottom\" rows={props.rows} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport const DateSelectionFrom = (props) => {\r\n    return (\r\n        <ComboBoxes values={[{\r\n            label: \"From Month\",\r\n            id: \"select-month-from\",\r\n            defaultValue: props.monthVal,\r\n            options: componentUtil.getDropdownOptionsMonth(),\r\n            handleOnChange: props.handleOnChangeMfrom\r\n        }, {\r\n            label: \"Year\",\r\n            id: \"select-year-from\",\r\n            defaultValue: props.yearVal,\r\n            options: componentUtil.getDropdownOptionsYear(props.years[0], props.years[1]),\r\n            handleOnChange: props.handleOnChangeYfrom\r\n        }]} />)\r\n}\r\n\r\nexport const DateSelectionTo = (props) => {\r\n    return (\r\n        <ComboBoxes values={[{\r\n            label: \"To Month\",\r\n            id: \"select-month-to\",\r\n            defaultValue: props.monthVal,\r\n            options: componentUtil.getDropdownOptionsMonth(),\r\n            handleOnChange: props.handleOnChangeMto\r\n        }, {\r\n            label: \"Year\",\r\n            id: \"select-year-to\",\r\n            defaultValue: props.yearVal,\r\n            options: componentUtil.getDropdownOptionsYear(props.years[0], props.years[1]),\r\n            handleOnChange: props.handleOnChangeYto\r\n        }]} />)\r\n}","import React, { Component } from 'react'\r\nimport GridComponent from './../../container/GridComponent';\r\nimport Label from './../../container/Label';\r\nconst baseRowData = {\r\n    group: 1,\r\n    index: 1,\r\n    series: \"earn_amt\",\r\n    value: 1,\r\n    label: 1,\r\n    color: 'rgb(10,200,10)'\r\n}\r\nconst baseGroup = {\r\n    value: 1,\r\n    label: 'August 2020'\r\n}\r\nclass GraphChart extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    isHorizontal() {\r\n        return this.props.orientation == 'horizontal';\r\n    }\r\n\r\n    getChartComponents() {\r\n\r\n        const components = [];\r\n        const chartData = this.props.chartData;\r\n        const chartGroups = this.props.chartGroups;\r\n        \r\n\r\n        for (let g = 0; g < chartGroups.length; g++) {\r\n            const group = chartGroups[g];\r\n\r\n            const groupedComponents = new Array();\r\n            for (let i = 0; i < chartData.length; i++) {\r\n                const element = chartData[i];\r\n                if (element.group == group.value) {\r\n                    const component = <ChartItem orientation={this.props.orientation} element={element} maxValue={this.props.maxValue} />\r\n                    groupedComponents.push(component);\r\n                }\r\n            }\r\n\r\n            let groupedComponent;\r\n            if (this.isHorizontal()) {\r\n                groupedComponent = \r\n                (<div style={{borderBottom: 'solid 1px #cccccc'}} className=\"row\">\r\n                    <div className=\"col-2\"><Label style={{ fontSize: '0.9em', fontFamily: 'TNR' }} text={group.label} /></div>\r\n                    <div className=\"col-10\">{groupedComponents.map(g => g)}</div>\r\n                </div>)\r\n            } else {\r\n                const width = (20 + 30)*groupedComponents.length;\r\n                const gridTemplateColumns = ((20 + 30)+'px ').repeat(groupedComponents.length);\r\n                groupedComponent = \r\n                (<div style={{borderRight: 'solid 1px #cccccc'}}>\r\n                    <div style={{ display: 'grid', width: width+'px', gridTemplateColumns:  gridTemplateColumns}}>{groupedComponents.map(g => g)}</div>\r\n                    <div style={{ padding:'3px', textAlign:'center' }}><Label style={{ fontSize: '0.9em', fontFamily: 'TNR' }} text={group.label} /></div>\r\n                </div>)\r\n            }\r\n            components.push(groupedComponent);\r\n        }\r\n        return components;\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <div className=\"graph-chart\" style={{ width: '80%' }}>\r\n                <GridComponent cols={this.isHorizontal() ? 1 : this.props.chartGroups.length} \r\n                style={{ width: this.isHorizontal()?'100%':'max-content' }} items={this.getChartComponents()} />\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nfunction ChartItem(props) {\r\n    const element = props.element;\r\n    const value = element.value ? element.value : 0;\r\n    let percentage = (value / props.maxValue) * 100;\r\n    const orientation = props.orientation;\r\n    const isHorizonal = orientation == 'horizontal';\r\n\r\n    let style;\r\n    let bgStyle = { margin: '3px', fontSize: '0.6em' };\r\n    let className;\r\n    if (isHorizonal) {\r\n        style = {\r\n            backgroundColor: element.color ? element.color : '#cccccc',\r\n            width: percentage + '%',\r\n            height: '20px'\r\n        }\r\n        bgStyle.backgroundColor = '#ffffff';\r\n        bgStyle.width = '100%';\r\n        bgStyle.height = '20px';\r\n\r\n    } else {\r\n        style = {\r\n            backgroundColor: '#ffffff',\r\n            height: (100 - percentage) + '%',\r\n            width: '20px'\r\n        }\r\n        bgStyle.backgroundColor = element.color ? element.color : '#cccccc';\r\n        bgStyle.height = '200px';\r\n        bgStyle.width = '20px'; \r\n        bgStyle.margin = 'auto';\r\n       \r\n    }\r\n    return (\r\n        <div className={className}>\r\n            <div style={bgStyle}>\r\n                <div style={style} >{isHorizonal?element.label:null}</div>\r\n            </div>\r\n            {!isHorizonal?<div style={{fontSize:'0.6em',  transform: 'rotate(20deg)'}} >{element.label}</div>:null}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default GraphChart;","export const MONTHS = [\r\n    \"January\",\r\n    \"February\",\r\n    \"March\",\r\n    \"April\",\r\n    \"May\",\r\n    \"June\",\r\n    \"July\",\r\n    \"August\",\r\n    \"September\",\r\n    \"October\",\r\n    \"November\",\r\n    \"December\"\r\n]\r\n\r\n","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport * as actions from '../../../redux/actionCreators'\r\n\r\nimport * as stringUtil from '../../../utils/StringUtil'\r\nimport ActionButtons from '../../buttons/ActionButtons'\r\nimport InstantTable from '../../container/InstantTable'\r\nimport * as componentUtil from '../../../utils/ComponentUtil'\r\nimport { byId } from '../../../utils/ComponentUtil' \r\nimport Chart from '../../Chart'\r\nimport * as creator from '../../../utils/ComponentCreator'\r\nimport InputField from '../../inputs/InputField'\r\nimport GraphChart from './GraphChart';\r\nimport { MONTHS } from './../../../utils/DateUtil';\r\n\r\nclass Cashflow\r\n    extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        const date = new Date();\r\n\r\n        this.state = {\r\n            chartOrientation: \"horizontal\",\r\n            fromMonth: date.getMonth() + 1, fromYear: date.getFullYear(),\r\n            toMonth: date.getMonth() + 1, toYear: date.getFullYear()\r\n        }\r\n        this.getCashflowDetail = () => {\r\n            if (!componentUtil.checkExistance(\"select-month-from\", \"select-month-to\",\r\n                \"select-year-from\", \"select-year-to\")) {\r\n                return;\r\n            }\r\n            let request = {\r\n                fromMonth: this.state.fromMonth,//byId(\"select-month-from\").value,\r\n                fromYear: this.state.fromYear,// byId(\"select-year-from\").value,\r\n                toMonth: this.state.toMonth,//byId(\"select-month-to\").value,\r\n                toYear: this.state.toYear,// byId(\"select-year-to\").value,\r\n            }\r\n            this.props.getCashflowDetail(request, this.props.app);\r\n        }\r\n\r\n        this.onChangeChartOrientation = (value) => {\r\n            if (value == 'h')\r\n                this.setState({ chartOrientation: 'horizontal' })\r\n            if (value == 'v')\r\n                this.setState({ chartOrientation: 'vertical' })\r\n            console.log(\"Selected?\", byId(\"radio-orientation-\" + value).checked);\r\n\r\n        }\r\n\r\n        this.constructFilterBox = () => {\r\n\r\n            let isChartHorizontal = this.state.chartOrientation == \"horizontal\";\r\n            let isChartVertical = this.state.chartOrientation == \"vertical\";\r\n\r\n            let inputRadio = \r\n            (<div className=\"row\">\r\n                <InputField key=\"radio-o-h\" checked={isChartHorizontal} name=\"orientation\" onChange={() => this.onChangeChartOrientation('h')} type=\"radio\"\r\n                    id=\"radio-orientation-h\" text=\"Horizontal orientation\" />\r\n                <InputField key=\"radio-o-v\" checked={isChartVertical} name=\"orientation\" onChange={() => this.onChangeChartOrientation('v')} type=\"radio\"\r\n                    id=\"radio-orientation-v\" text=\"Vertical orientation\" />\r\n            </div>);\r\n\r\n            let filterButtons = <ActionButtons buttonsData={[\r\n                { text: \"Back\", onClick: () => this.props.setFeatureCode(null), id: \"btn-back\" },\r\n                { text: <i className=\"fas fa-search\"></i>, onClick: this.getCashflowDetail, status: \"success\", id: \"btn-get-cashflow-detail\" }]}\r\n            />;\r\n\r\n            return (\r\n                <creator.FilterBox rows={[{\r\n                    values: [<creator.DateSelectionFrom years={this.props.transactionYears}\r\n                        monthVal={this.state.fromMonth} yearVal={this.state.fromYear}\r\n                        handleOnChangeMfrom={(value) => this.setState({ fromMonth: value })}\r\n                        handleOnChangeYfrom={(value) => this.setState({ fromYear: value })}\r\n                    />,\r\n                    <creator.DateSelectionTo years={this.props.transactionYears}\r\n                        monthVal={this.state.toMonth} yearVal={this.state.toYear}\r\n                        handleOnChangeMto={(value) => this.setState({ toMonth: value })}\r\n                        handleOnChangeYto={(value) => this.setState({ toYear: value })} />, filterButtons, inputRadio]\r\n                }]} />)\r\n        }\r\n\r\n        this.constructFilterInfo = () => {\r\n            return (<div>\r\n                {\"From \"}\r\n                {stringUtil.monthYearString(this.state.fromMonth, this.state.fromYear)}\r\n                {\" to \"}\r\n                {stringUtil.monthYearString(this.state.toMonth, this.state.toYear)}\r\n            </div>);\r\n        }\r\n    }\r\n    componentDidMount() {\r\n        document.title = \"Cashflow\";\r\n        this.getCashflowDetail();\r\n    }\r\n    componentDidUpdate() {\r\n    }\r\n\r\n    render() {\r\n\r\n        let filterInfo = this.constructFilterInfo();\r\n\r\n        const cashflowDetail = this.props.cashflowDetail != null ? this.props.cashflowDetail : { supplies: [], purchases: [] };\r\n        const maxValue = this.props.cashflowDetail != null ? this.props.cashflowDetail.maxValue : 0;\r\n\r\n        const filterBox = this.constructFilterBox();\r\n\r\n        const cashflowDataRows = new Array();\r\n        console.log(\"cashflowDetail: \", cashflowDetail);\r\n        let chartIndex = 0;\r\n        const chartGroups = new Array();\r\n        for (let i = 0; i < cashflowDetail.supplies.length; i++, chartIndex += 2) {\r\n            const spending = cashflowDetail.supplies[i];\r\n            const earning = cashflowDetail.purchases[i];\r\n            const period = MONTHS[earning.month-1] +\" \" + earning.year;\r\n            const earningAmount = stringUtil.beautifyNominal(earning.amount);\r\n            const spendingAmount = stringUtil.beautifyNominal(spending.amount);\r\n            const earningCount = stringUtil.beautifyNominal(earning.count);\r\n            const spendingCount = stringUtil.beautifyNominal(spending.count);\r\n\r\n            //earning\r\n            cashflowDataRows.push({\r\n                group: i,\r\n                index: chartIndex,\r\n                series: \"earn_amt\",\r\n                value: earning.amount,\r\n                label: earningAmount,\r\n                color: 'rgb(10,200,10)'\r\n            });\r\n            // cashflowDataRows.push({\r\n            //     index: chartIndex, \r\n            //     series: \"earn_qty\",\r\n            //     value: earning.count,  \r\n            //     label: earningCount,\r\n            // });\r\n\r\n\r\n            //spending\r\n            cashflowDataRows.push({\r\n                group: i,\r\n                index: chartIndex + 1,\r\n                series: \"spend_amt\",\r\n                value: spending.amount,\r\n                label: spendingAmount,\r\n                color: 'rgb(200,10,10)'\r\n            });\r\n            // cashflowDataRows.push({\r\n            //     index: chartIndex+1, \r\n            //     series: \"spend_qty\",\r\n            //     value: spending.count,  \r\n            //     label: spendingCount,\r\n            // }); \r\n            chartGroups.push({ value: i, label: period });\r\n        }\r\n\r\n        let cashflowListComponent = <div className=\"cashflow-list\" style={{ width: '70vw', overflow: 'scroll'}}>\r\n            <GraphChart chartGroups={chartGroups} maxValue={maxValue} chartData={cashflowDataRows} orientation={this.state.chartOrientation} />\r\n\r\n        </div>\r\n        return (\r\n            <div className=\"cashflow-container\">\r\n                <h2>Cashflow Detail</h2>\r\n                {filterBox}\r\n                {filterInfo}\r\n                <div><p></p></div>\r\n                {cashflowListComponent}\r\n            </div>\r\n        )\r\n    }\r\n\r\n\r\n}\r\nconst mapStateToProps = state => {\r\n    return {\r\n        cashflowDetail: state.transactionState.cashflowDetail\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    getCashflowDetail: (request, app) => dispatch(actions.getCashflowDetail(request, app))\r\n})\r\nexport default (connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(Cashflow));","import React, { Component } from 'react'\r\nimport * as stringUtil from '../../../utils/StringUtil'\r\nimport InstantTable from '../../container/InstantTable';\r\nimport Chart from '../../Chart';\r\nimport ActionButton from '../../buttons/ActionButton';\r\n\r\nclass ProductSalesDetail extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.goBack = () => {\r\n            if (this.props.goBack)\r\n                this.props.goBack();\r\n        }\r\n    }\r\n\r\n    render() {\r\n        let chartRows = new Array();\r\n        let maxValue = 0;\r\n\r\n        console.log(\"this.props.productSalesDetails : \", this.props.productSalesDetails);\r\n\r\n        const productName = this.props.productSalesDetails && this.props.productSalesDetails.entity ? this.props.productSalesDetails.entity.name : \"\";\r\n\r\n        let entities = new Array();\r\n        if (this.props.productSalesDetails && this.props.productSalesDetails.entities != null) {\r\n            entities = this.props.productSalesDetails.entities;\r\n            maxValue = this.props.productSalesDetails.maxValue;\r\n        }\r\n\r\n        for (let i = 0; i < entities.length; i++) {\r\n            const salesData = entities[i];\r\n            chartRows.push({\r\n                id: \"row-detail-product-\" + i,\r\n                values: [\r\n                    stringUtil.monthYearString(salesData.month, salesData.year),\r\n                    <Chart \r\n                        text={salesData.sales}\r\n                        type={\"success\"}\r\n                        width={450}\r\n                        value={salesData.sales}\r\n                        maxValue={maxValue} />\r\n                ]\r\n            });\r\n        }\r\n\r\n        return (<div>\r\n            <h2>Sales Detail: {productName} </h2>\r\n            <ActionButton onClick={this.goBack} text=\"Back\" />\r\n            <InstantTable rows={chartRows} />\r\n        </div>)\r\n    }\r\n}\r\n\r\nexport default ProductSalesDetail;","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport * as actions from '../../../redux/actionCreators'\r\n\r\nimport ActionButton from '../../buttons/ActionButton'\r\nimport * as stringUtil from '../../../utils/StringUtil'\r\nimport ActionButtons from '../../buttons/ActionButtons'\r\nimport InstantTable from '../../container/InstantTable'\r\nimport * as componentUtil from '../../../utils/ComponentUtil'\r\nimport { byId } from '../../../utils/ComponentUtil'\r\nimport Chart from '../../Chart'\r\nimport * as creator from '../../../utils/ComponentCreator'\r\nimport InputField from '../../inputs/InputField'\r\nimport Label from '../../container/Label'\r\nimport ProductSalesDetail from './ProductSalesDetail'\r\nimport GraphChart from './GraphChart'\r\n\r\nclass ProductSales\r\n    extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        const date = new Date();\r\n        this.state = {\r\n            showDetail: false, productDetailId: null,\r\n            chartOrientation: \"horizontal\", page: 0, updated: new Date(),\r\n            fromMonth: date.getMonth() + 1, fromYear: date.getFullYear(),\r\n            toMonth: date.getMonth() + 1, toYear: date.getFullYear(),\r\n            productName: null\r\n        }\r\n        this.getProductSales = (loadMore, _page) => {\r\n            this.setState({ page: _page, productDetailId: null });\r\n            if (!componentUtil.checkExistance(\"select-month-from\", \"select-month-to\",\r\n                \"select-year-from\", \"select-year-to\")) {\r\n                return;\r\n            }\r\n            let request = {\r\n                page: _page,\r\n                fromMonth: this.state.fromMonth,//byId(\"select-month-from\").value,\r\n                fromYear: this.state.fromYear,// byId(\"select-year-from\").value,\r\n                toMonth: this.state.toMonth,//byId(\"select-month-to\").value,\r\n                toYear: this.state.toYear,// byId(\"select-year-to\").value,\r\n                productName: this.state.productName,\r\n                //special fro laod more case\r\n                loadMore: loadMore,\r\n                referrer: this\r\n            }\r\n\r\n            this.props.getProductSales(request);\r\n        }\r\n\r\n        this.getProductSalesDetail = (productId) => {\r\n            if (this.state.productDetailId != productId) {\r\n\r\n                let request = {\r\n                    page: 0,\r\n                    fromMonth: this.state.fromMonth,//byId(\"select-month-from\").value,\r\n                    fromYear: this.state.fromYear,// byId(\"select-year-from\").value,\r\n                    toMonth: this.state.toMonth,//byId(\"select-month-to\").value,\r\n                    toYear: this.state.toYear,// byId(\"select-year-to\").value, \r\n                    productId: productId\r\n                }\r\n\r\n                this.props.getProductSalesDetail(request, this.props.app);\r\n            }\r\n            this.setState({ showDetail: true, productDetailId: productId })\r\n        }\r\n\r\n        /**\r\n        * this method is called in trxReducer\r\n        */\r\n        this.refresh = () => {\r\n            console.log(\"++reresh++\");\r\n            this.setState({ updated: new Date() });\r\n        }\r\n\r\n        this.onChangeChartOrientation = (value) => {\r\n            if (value == 'h')\r\n                this.setState({ chartOrientation: 'horizontal' })\r\n            if (value == 'v')\r\n                this.setState({ chartOrientation: 'vertical' })\r\n        }\r\n\r\n        this.loadMore = () => {\r\n            let currentPage = this.state.page;\r\n\r\n            this.getProductSales(true, currentPage + 1);\r\n        }\r\n\r\n        this.resetPage = () => {\r\n            this.setState({ page: 0 });\r\n        }\r\n\r\n        this.setRequestProductName = (value, id) => {\r\n            this.setState({ productName: value, activeField: id })\r\n        }\r\n\r\n        this.constructFilterBox = () => {\r\n\r\n            return (<creator.FilterBox rows={[{\r\n                values: [\r\n                    <creator.DateSelectionFrom years={this.props.transactionYears}\r\n                        monthVal={this.state.fromMonth} yearVal={this.state.fromYear}\r\n                        handleOnChangeMfrom={(value) => this.setState({ fromMonth: value })}\r\n                        handleOnChangeYfrom={(value) => this.setState({ fromYear: value })}\r\n                    />,\r\n                    <creator.DateSelectionTo years={this.props.transactionYears}\r\n                        monthVal={this.state.toMonth} yearVal={this.state.toYear}\r\n                        handleOnChangeMto={(value) => this.setState({ toMonth: value })}\r\n                        handleOnChangeYto={(value) => this.setState({ toYear: value })} />,\r\n                    <InputField value={this.state.productName} onKeyUp={this.setRequestProductName} id=\"input-product-name\" placeholder=\"Product Name\" />,\r\n                    <ActionButtons buttonsData={[\r\n                        { text: \"Back\", onClick: () => this.props.setFeatureCode(null), id: \"btn-back\" },\r\n                        { text: <i className=\"fas fa-search\"></i>, onClick: () => this.getProductSales(null, 0), id: \"btn-get-product-sales\", status: \"success\" }]}\r\n                    />\r\n                ]\r\n            }]} />);\r\n        }\r\n\r\n        this.constructFilterInfo = (productSalesData) => {\r\n            let periodInfo = <div>\r\n                {\"From: \"}\r\n                <span>{stringUtil.monthYearString(productSalesData.filter.month, productSalesData.filter.year)}</span>\r\n                {\" To: \"}\r\n                <span>{stringUtil.monthYearString(productSalesData.filter.monthTo, productSalesData.filter.yearTo)}</span>\r\n            </div>\r\n            return (<div>\r\n                {periodInfo}\r\n            </div>)\r\n        }\r\n\r\n    }\r\n    componentDidMount() {\r\n        document.title = \"ProductSales\";\r\n        // this.getProductSales();\r\n    }\r\n    componentDidUpdate() {\r\n        console.log(\"updated\", this.state.fromMonth, this.state.fromYear, \" to \", this.state.toMonth, this.state.toYear);\r\n        if (byId(this.state.activeField)) {\r\n            byId(this.state.activeField).focus();\r\n        }\r\n    }\r\n\r\n    render() {\r\n\r\n        const productSalesData = this.props.productSalesData != null ? this.props.productSalesData : { entities: [], filter: {} };\r\n        const maxValue = stringUtil.getMaxSales(productSalesData.entities);\r\n        const filterInfo = this.constructFilterInfo(productSalesData);\r\n        const filterBox = this.constructFilterBox();\r\n        const productDetailRows = new Array();\r\n        const chartGroups = new Array();\r\n        /**\r\n         * construct chart\r\n         */\r\n        for (let i = 0; i < productSalesData.entities.length; i++) {\r\n            const entity = productSalesData.entities[i];\r\n            const sales = stringUtil.beautifyNominal(entity.sales);\r\n            chartGroups.push({\r\n                value: i, label: <Label key={'lbl-e-' + entity.product.id} text={(i + 1), entity.product.name}\r\n                    onClick={() => this.getProductSalesDetail(entity.product.id)} />\r\n            });\r\n            productDetailRows.push({\r\n                group: i,\r\n                index: i,\r\n                series: \"product_sales\",\r\n                value: entity.sales,\r\n                label: sales,\r\n                color: 'rgb(160,160,160)'\r\n            })\r\n        }\r\n\r\n        let productSalesListComponent =\r\n            <div className=\"cashflow-list\">\r\n                <GraphChart chartGroups={chartGroups} maxValue={maxValue} chartData={productDetailRows} orientation={\"horizontal\"} />\r\n            </div>\r\n\r\n        /**\r\n         * if show detail\r\n         */\r\n        let productSalesDetailsXX = this.props.productSalesDetails;\r\n        if (this.state.showDetail) {\r\n            productSalesListComponent = <ProductSalesDetail productSalesDetails={productSalesDetailsXX}\r\n                goBack={() => { this.setState({ showDetail: false }) }} />\r\n        }\r\n\r\n        return (\r\n            <div className=\"cashflow-container\">\r\n                <h2>Product Sales</h2>\r\n                {filterBox}\r\n                <div> {filterInfo} </div>\r\n                {productSalesListComponent}\r\n                <ActionButton text=\"Load more\" status=\"warning\" onClick={this.loadMore} />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        productSalesData: state.transactionState.productSalesData,\r\n        productSalesDetails: state.transactionState.productSalesDetails\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    getProductSales: (request) => dispatch(actions.getProductSales(request)),\r\n    getProductSalesDetail: (request, app) => dispatch(actions.getProductSalesDetail(request, app))\r\n})\r\nexport default (connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(ProductSales));","import React, { Component } from 'react'\r\n\r\nimport '../dashboard/Dashboard.css'\r\nimport * as menus from '../../../constant/Menus'\r\nimport DashboardMenu from './DashboardMenu';\r\nimport TransactionSelling from '../transaction/TransactionSelling';\r\nimport ErrorPage from '../../ErrorPage';\r\nimport { withRouter } from 'react-router';\r\nimport TransactionPurchasing from '../transaction/TransactionPurchasing';\r\nimport Cashflow from './Cashflow';\r\nimport * as componentUtil from '../../../utils/ComponentUtil'\r\nimport ActionButton from '../../buttons/ActionButton';\r\nimport { connect } from 'react-redux'\r\nimport * as actions from '../../../redux/actionCreators'\r\nimport Card from '../../card/Card'\r\nimport * as stringUtil from '../../../utils/StringUtil'\r\nimport Label from '../../container/Label';\r\nimport ProductSales from './ProductSales';\r\nimport ContentTitle from '../../container/ContentTitle';\r\nimport InstantTable from '../../container/InstantTable';\r\nimport ComboBoxes from './../../inputs/ComboBoxes';\r\nimport GridComponent from './../../container/GridComponent';\r\n\r\nclass Dashboard extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            featureCode: 'main',\r\n            cashflowYear: componentUtil.getCurrentMMYY()[1],\r\n            cashflowMonth: componentUtil.getCurrentMMYY()[0]\r\n        }\r\n\r\n        this.setFeatureCode = (code) => {\r\n            this.setState({ featureCode: code });\r\n        }\r\n        this.validateLoginStatus = () => {\r\n            if (this.props.loginStatus != true) this.props.history.push(\"/login\");\r\n        }\r\n        this.getCashflowInfo = () => {\r\n            let month = this.state.cashflowMonth;\r\n            let year = this.state.cashflowYear;\r\n            this.props.getCashflowInfo(month, year, \"OUT\", this.props.app);\r\n            this.props.getCashflowInfo(month, year, \"IN\", this.props.app);\r\n\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.validateLoginStatus();\r\n        if (this.props.loginStatus != true)\r\n            return;\r\n        this.props.setMenuCode(menus.DASHBOARD);\r\n        document.title = \"Dashboard\";\r\n        this.getCashflowInfo();\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        this.validateLoginStatus();\r\n    }\r\n\r\n    render() {\r\n        let minYear, maxYear = new Date().getFullYear();\r\n\r\n        minYear = this.props.transactionYears[0];\r\n        maxYear = this.props.transactionYears[1];\r\n\r\n        let cashflowInfoIn = this.props.cashflowInfoIn ? this.props.cashflowInfoIn : { amount: \"loading...\", count: \"loading...\" };\r\n        let cashflowInfoOut = this.props.cashflowInfoOut ? this.props.cashflowInfoOut : { amount: \"loading...\", count: \"loading...\" };\r\n\r\n        console.log(\"this.props.cashflowInfoIn \", this.props.cashflowInfoIn);\r\n\r\n        let mainComponent = <div>\r\n            <div className=\"cashflow-info\">\r\n                <h3>Cashflow Info</h3>\r\n                <GridComponent style={{ backgroundColor: '#cccccc', padding: '5px', borderRadius: '3px', width: 'max-content', gridColumnGap: '10px' }} items={[\r\n                    \r\n                    <ComboBoxes key=\"cb\" values={[\r\n                        {\r\n                            id: \"select-month\",\r\n                            label: \"Month\",\r\n                            defaultValue: this.state.cashflowMonth ? this.state.cashflowMonth : componentUtil.getCurrentMMYY()[0],\r\n                            options: componentUtil.getDropdownOptionsMonth(),\r\n                            handleOnChange: (value) => this.setState({ cashflowMonth: value })\r\n                        },\r\n                        {\r\n                            id: \"select-year\",\r\n                            label: \"Year\",\r\n                            defaultValue: this.state.cashflowYear ? this.state.cashflowYear : componentUtil.getCurrentMMYY()[1],\r\n                            options: componentUtil.getDropdownOptionsYear(minYear, maxYear),\r\n                            handleOnChange: (value) => this.setState({ cashflowYear: value })\r\n                        }\r\n                    ]} />,\r\n                    <ActionButton status=\"secondary\" id=\"btn-get-cashflow-info\" text={<i className=\"fa fa-search\"></i>} onClick={this.getCashflowInfo} />\r\n\r\n                ]} />\r\n                <div className=\"cashflow-info-wrapper\">\r\n                    <GridComponent style={{ width: '50%' }}\r\n                        items={[\r\n                            <CashflowInfoContent type=\"earn\" cashflowInfo={cashflowInfoOut} />,\r\n                            <CashflowInfoContent type=\"spend\" cashflowInfo={cashflowInfoIn} />\r\n                        ]} />\r\n                </div>\r\n            </div>\r\n        </div>;\r\n\r\n        if (this.state.featureCode != null) {\r\n            switch (this.state.featureCode) {\r\n                case 'trxOut':\r\n                    mainComponent = <TransactionSelling app={this.props.app} setFeatureCode={this.setFeatureCode} />\r\n                    break;\r\n                case 'trxIn':\r\n                    mainComponent = <TransactionPurchasing app={this.props.app} setFeatureCode={this.setFeatureCode} />\r\n                    break;\r\n                case 'cashflow':\r\n                    mainComponent = <Cashflow app={this.props.app} transactionYears={this.props.transactionYears} setFeatureCode={this.setFeatureCode} />\r\n                    break;\r\n                case 'productSales':\r\n                    mainComponent = <ProductSales app={this.props.app} transactionYears={this.props.transactionYears} setFeatureCode={this.setFeatureCode} />\r\n                    break;\r\n                default:\r\n                    break;\r\n            }\r\n        }\r\n        if (this.props.loginStatus == true)\r\n            return (\r\n                <div className=\"section-container\">\r\n                    <ContentTitle title=\"Dashboard\" iconClass=\"fas fa-tachometer-alt\" description=\"Have a Nice Shop Keeping!\" />\r\n                    <DashboardMenu currentMenu={this.state.featureCode} goToMenu={this.setFeatureCode} />\r\n                    {mainComponent}\r\n                </div>\r\n            )\r\n        else\r\n            return <ErrorPage message=\"OOPS! Page not found\" />\r\n    }\r\n}\r\n\r\n\r\nfunction CashflowInfoContent(props) {\r\n    const cashflowInfo = props.cashflowInfo;\r\n    const title = props.type == \"earn\" ? \"Total Earning\" : \"Total Spending\";\r\n    const value = <><i className=\"fas fa-comments-dollar\"></i>&nbsp;{stringUtil.beautifyNominal(cashflowInfo.amount) + \",00\"}</>;\r\n    const content = <div>\r\n        <Label style={{ fontFamily: \"TNR\" }} text={value} />\r\n        <Label text=\"Item\" />\r\n        <Label text={<>{stringUtil.beautifyNominal(cashflowInfo.count)}</>} />\r\n    </div>\r\n    return (<Card style={{ marginTop: '3px' }} title={title + \" \" + stringUtil.monthYearString(cashflowInfo.month, cashflowInfo.year)} content={content} />);\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        cashflowInfoIn: state.transactionState.cashflowInfoIn,\r\n        cashflowInfoOut: state.transactionState.cashflowInfoOut,\r\n        transactionYears: state.transactionState.transactionYears\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    getCashflowInfo: (month, year, type, app) => dispatch(actions.getCashflowInfo(month, year, type, app)),\r\n\r\n})\r\nexport default withRouter(connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(Dashboard)); ","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport * as x from '../catalog/Catalog.css'\r\nimport { BrowserRouter as Router, Route, Link, Switch, withRouter } from 'react-router-dom'\r\nimport * as actions from '../../../redux/actionCreators'\r\nimport * as menus from '../../../constant/Menus'\r\nimport ActionButtons from '../../buttons/ActionButtons'\r\nimport ComboBox from '../../inputs/ComboBox'\r\nimport * as componentUtil from '../../../utils/ComponentUtil'\r\nimport * as url from '../../../constant/Url'\r\nimport Card from '../../card/Card'\r\nimport ContentTitle from '../../container/ContentTitle'\r\nimport NavButtons from '../../navigation/NavButtons'\r\nimport GridComponent from '../../container/GridComponent'\r\nimport InputField from '../../inputs/InputField'\r\n\r\nclass SupplierList extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            suppliersData: { entities: [] },\r\n            limit: 10, totalData: 0, suppliers: [],\r\n            supplierPage: 0, firstLoad: true,\r\n            requestOrderBy: null, requestOrderType: null,\r\n            requestSupplierName: \"\",\r\n        };\r\n\r\n        this.getSupplierList = (_page) => {\r\n            this.props.getSupplierList({\r\n                page: _page,\r\n                name: this.state.requestSupplierName,\r\n                orderby: this.state.requestOrderBy,\r\n                ordertype: this.state.requestOrderType\r\n            }, this.props.app);\r\n            this.setState({ supplierPage: _page });\r\n            this.setState({ totalData: this.props.suppliersData.totalData });\r\n        }\r\n\r\n        this.handleOrderChange = (value) => {\r\n            if (value == null || value.length == 0 || value.split(\"-\").length != 2) {\r\n                return;\r\n            } else {\r\n                let rawOrderRequest = value.split(\"-\");\r\n                this.setState({ requestOrderBy: rawOrderRequest[0] });\r\n                this.setState({ requestOrderType: rawOrderRequest[1] });\r\n            }\r\n\r\n        }\r\n\r\n        this.handleInputNameChange = (value) => {\r\n            this.setState({ catalogPage: 0 })\r\n            this.setState({ requestSupplierName: value });\r\n        }\r\n\r\n        this.clearField = () => {\r\n            document.getElementById(\"input-supplier-name\").value = \"\";\r\n            this.setState({ requestSupplierName: \"\" });\r\n\r\n            document.getElementById(\"select-order\").value = \"00\";\r\n            this.setState({ requestOrderBy: null, requestOrderType: null });\r\n\r\n            this.props.app.infoDialog(\"filter has been cleared, please push the search button to take effect\")\r\n        }\r\n\r\n        this.next = () => {\r\n            let supplierPage = this.state.supplierPage;\r\n            let totalPage = Math.floor(this.props.suppliersData.totalData / this.state.limit);\r\n            if (supplierPage >= totalPage - 1) { supplierPage = 0; }\r\n            else { supplierPage++; }\r\n\r\n            this.getSupplierList(supplierPage);\r\n        }\r\n\r\n        this.prev = () => {\r\n            let supplierPage = this.state.supplierPage;\r\n            let totalPage = Math.floor(this.props.suppliersData.totalData / this.state.limit);\r\n            if (supplierPage <= 0) { supplierPage = totalPage - 1; }\r\n            else { supplierPage--; }\r\n\r\n            this.getSupplierList(supplierPage);\r\n        }\r\n\r\n        this.generateNavButtonsData = () => {\r\n            let suppliers = this.props.suppliersData.entities == null ? [] : this.props.suppliersData.entities;\r\n            let buttonData = [];\r\n            if (suppliers.length > 0) {\r\n                buttonData = componentUtil.createNavButtons(this.props.suppliersData.totalData / this.state.limit, this.state.supplierPage);\r\n\r\n            }\r\n\r\n            const navButtonsData = [{\r\n                id: \"btn-prev\",\r\n                buttonClick: this.prev,\r\n                text: \"previous\"\r\n            }];\r\n            for (let i = 0; i < buttonData.length; i++) {\r\n                const b = buttonData[i];\r\n                let active = (b.value == this.state.supplierPage)\r\n                navButtonsData.push({\r\n                    id: b.value,\r\n                    active: active,\r\n                    buttonClick: () => this.getSupplierList(b.value),\r\n                    text: b.text\r\n                });\r\n            }\r\n\r\n            navButtonsData.push({\r\n                id: \"btn-next\",\r\n                buttonClick: this.next,\r\n                text: \"next\"\r\n            });\r\n            return navButtonsData;\r\n        }\r\n\r\n        this.filterBox = () => {\r\n            let actionButtons = [\r\n                { text: <i className=\"fas fa-search\"></i>, status: \"success\", onClick: () => this.getSupplierList(0), id: \"btn-search\" },\r\n                { text: \"Clear Filter\", status: 'warning', onClick: this.clearField, id: \"Clear\" }\r\n            ];\r\n\r\n            return (<div className=\"filter-box\">\r\n                <GridComponent cols={2} style={{ width: 'max-content' }} items={\r\n                    [\r\n                        <InputField placeholder=\"search by supplier name\" onKeyUp={this.handleInputNameChange} type=\"search\"\r\n                            id=\"input-supplier-name\" />,\r\n                        <ComboBox defaultValue={this.state.requestOrderBy + \"-\" + this.state.requestOrderType} onChange={this.handleOrderChange}\r\n                            options={filterSupplierOptions} key=\"k-select-order\" id=\"select-order\" />,\r\n                        <ActionButtons style={{ margin: '5px' }} key=\"btns\" buttonsData={actionButtons} />\r\n                    ]\r\n                } />\r\n                <p></p>\r\n            </div>);\r\n        }\r\n\r\n    }\r\n\r\n    componentWillMount() {\r\n\r\n        document.title = \"Our Suppliers\";\r\n        this.getSupplierList(this.state.supplierPage);\r\n        this.props.setMenuCode(menus.SUPPLIERLIST);\r\n\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        if (this.state.firstLoad && this.props.suppliersData.filter != null) {\r\n            this.setState({\r\n                //limit: this.props.suppliersData.filter.limit,\r\n                totalData: this.props.suppliersData.totalData,\r\n                firstLoad: false\r\n            });\r\n        }\r\n    }\r\n\r\n    render() {\r\n\r\n        let suppliers = this.props.suppliersData.entities == null ? [] : this.props.suppliersData.entities;\r\n\r\n        let supplierCatalog = (<div className=\"section-container\" id=\"catalog-main\" key=\"catalog-main\">\r\n            <ContentTitle title=\"Supplier List Page\" iconClass=\"fas fa-warehouse\" description=\"List of our partners\" />\r\n            <NavButtons buttonsData={this.generateNavButtonsData()} />\r\n            <this.filterBox />\r\n            <div className=\"row catalog-container\">\r\n                {suppliers.map(\r\n                    supplier => {\r\n                       return <SupplierCard supplier={supplier} />\r\n                    }\r\n                )}\r\n            </div>\r\n        </div>);\r\n\r\n        return (supplierCatalog)\r\n    }\r\n}\r\n\r\nfunction SupplierCard(props) {\r\n    const supplier = props.supplier;\r\n    const imageUrl = url.baseImageUrl + supplier.iconUrl;\r\n    const content = <div  >\r\n        <a href={supplier.website}>{supplier.name}</a>\r\n        <br />\r\n        <span style={{ fontSize: '0.7em' }}>{supplier.address}</span>\r\n    </div>\r\n\r\n    return <div className=\"col-md-3\"><Card\r\n        icon={imageUrl}\r\n        style={{ float: 'left', color: 'dimgrey' }}\r\n        key={supplier.id}\r\n        content={content}\r\n    /></div>\r\n}\r\n\r\nconst filterSupplierOptions = [\r\n    { value: \"00\", text: \"-Select Order-\" },\r\n    { value: \"name-asc\", text: \"Name [A-Z]\" },\r\n    { value: \"name-desc\", text: \"Name [Z-A]\" }\r\n];\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        suppliersData: state.shopState.suppliersData\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    getSupplierList: (request, app) => dispatch(actions.getSupplierList(request, app))\r\n\r\n})\r\nexport default withRouter(connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(SupplierList));","import React, { Component } from 'react';\r\nimport './Footer.css'\r\nimport { connect } from 'react-redux'\r\n\r\nclass Footer extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.fontColor = this.props.applicationProfile.fontColor;\r\n        this.backgroundColor = this.props.applicationProfile.color;\r\n    }\r\n\r\n    footerStyle() {\r\n        return {\r\n            color: this.fontColor,\r\n            backgroundColor: this.backgroundColor\r\n        };\r\n    }\r\n\r\n    render() {\r\n        const year = new Date().getFullYear();\r\n        const profile = this.props.applicationProfile ? this.props.applicationProfile : {};\r\n        return (\r\n            <div className=\"App-footer\" style={this.footerStyle()}>\r\n                <span className={profile.footerIconClassValue}></span>&nbsp;&nbsp;{profile.name} {year}\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        applicationProfile: state.userState.applicationProfile,\r\n    }\r\n}\r\n\r\nexport default (connect(\r\n    mapStateToProps\r\n)(Footer));","import React, { Component } from 'react'  \r\nimport './Chat.css'\r\nimport GridComponent from '../../container/GridComponent';\r\nimport Label from '../../container/Label';\r\n\r\nclass ChatList extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n\r\n        let chats = this.props.messages ? this.props.messages : [];\r\n        let chatRows = [];\r\n        for (let i = 0; i < chats.length; i++) {\r\n            const chat = chats[i];\r\n            chatRows.push(\r\n                <ChatItem message={chat} username={this.props.username} />\r\n            )\r\n        }\r\n        return (\r\n            <GridComponent cols={1} items={chatRows} />)\r\n    }\r\n}\r\n\r\nconst ChatItem = props => {\r\n    let className = \"chat-item rounded paper-shadow  \" + (props.message.admin == 1 ? \" admin \" : \"user\");\r\n    let username = \"\";\r\n    if (props.username) {\r\n        username = \" [\" + props.username + \"]\";\r\n    }\r\n    let sender = props.message.admin == 1 ? \"Admin\" : \"You\" + username;\r\n    let senderComponent = <span>\r\n        {sender}<span style={{ marginLeft: '11px', fontSize: '0.7em', float: 'right' }} >{props.message.date}</span>\r\n    </span>\r\n    return (\r\n        <div className={className}>\r\n            <Label style={{ fontSize: '0.8em', color: 'black' }} text={senderComponent} />\r\n            <Label text={props.message.text} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ChatList;","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport * as actions from '../../../redux/actionCreators'\r\nimport { byId } from '../../../utils/ComponentUtil'\r\nimport InputField from '../../inputs/InputField';\r\nimport ActionButton from '../../buttons/ActionButton';\r\nimport SockJsClient from 'react-stomp'; \r\nimport ContentTitle from '../../container/ContentTitle'; \r\nimport GridComponent from '../../container/GridComponent'\r\nimport ChatList from './CharList';\r\n\r\nclass ChatRoom extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { messages: null, username: null, activeId: null }\r\n        this.sendChatMessage = () => {\r\n            if (!byId(\"input-msg\").value) {\r\n                this.props.app.infoDialog(\"Message must not be null\");\r\n                return;\r\n            }\r\n            this.props.sendChatMessage(byId(\"input-msg\").value, this.state.username, this.props.app);\r\n            byId(\"input-msg\").value = \"\";\r\n        }\r\n\r\n        this.handleMessage = (response) => {\r\n            console.log(\"Responses handleMessage: \", response.code);\r\n            console.log(\"LOCAL STORAGE:\", localStorage.getItem(\"requestId\"))\r\n            if (response.code != localStorage.getItem(\"requestId\")) {\r\n                return;\r\n            }\r\n            this.props.storeChatMessageLocally(response.entities);\r\n            // this.setState({ messages: response.entities });\r\n        }\r\n\r\n        this.changeUsername = (value, id) => {\r\n            this.setState({ username: value, activeId: id });\r\n        }\r\n\r\n    }\r\n\r\n    componentWillMount() {\r\n        this.props.setMenuCode('chatroom');\r\n        document.title = \"Chat Room\";\r\n        this.props.getMessages(this.props.app);\r\n        if (this.props.userAlias) {\r\n            this.setState({ username: this.props.userAlias })\r\n        }\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        if (this.state.activeId && byId(this.state.activeId)) {\r\n            byId(this.state.activeId).focus();\r\n        }\r\n    }\r\n\r\n    render() {\r\n        let userAlias = this.props.userAlias ? this.props.userAlias : \"\";\r\n        let cloudHost = \"https://nuswantoroshop.herokuapp.com/\";\r\n        let localHost = \"http://localhost:8080/universal-good-shop/\";\r\n        const usedHost = localHost;\r\n        return (\r\n            <div className=\"section-container\">\r\n                <ContentTitle title=\"What Do You Feel?\" description=\r\n                    {\"Identified as [\" + this.state.username + \"]\"}  iconClass=\"fas fa-comments\"/>\r\n                <InputField\r\n                    value={userAlias}\r\n                    onKeyUp={this.changeUsername}\r\n                    id=\"input-username\"\r\n                    placeholder=\"identify your name\" />\r\n                <div style={{ textAlign: 'left' }} id=\"chat-room\">\r\n\r\n                    <div className=\"chat-container\"  >\r\n                        <ChatList username={this.state.username} messages={this.props.messages} />\r\n                    </div>\r\n\r\n                    <GridComponent style={{ width: '50%', textAlign: 'right' }} items={[\r\n                        <InputField style={{ width: '130%' }} type=\"textarea\" placeholder=\"input message\" id=\"input-msg\" />,\r\n                        <ActionButton style={{ margin: '5px' }} status=\"success\" onClick={this.sendChatMessage} text={<i className=\"fas fa-paper-plane\"></i>} />\r\n\r\n                    ]} />\r\n\r\n                    <SockJsClient url={usedHost+'realtime-app'} topics={['/wsResp/messages']}\r\n                        onMessage={(msg) => { this.handleMessage(msg) }}\r\n                        ref={(client) => { this.clientRef = client }} />\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    //console.log(state);\r\n    return {\r\n        messages: state.shopState.messages,\r\n        userAlias: state.shopState.userAlias\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    sendChatMessage: (message, username, app) => dispatch(actions.sendChatMessage(message, username, app)),\r\n    storeChatMessageLocally: (messages) => dispatch(actions.storeMessageLocally(messages)),\r\n    getMessages: (app) => dispatch(actions.getMessageList(app))\r\n\r\n})\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(ChatRoom)","import React, { Component } from 'react' \r\nimport * as cartCss from './Cart.css' \r\nimport ContentTitle from '../container/ContentTitle';\r\nimport * as stringUtil from '../../utils/StringUtil'\r\nimport InstantTable from '../container/InstantTable';\r\nimport { connect } from 'react-redux'\r\nimport * as url from '../../constant/Url'\r\nimport Label from '../container/Label';\r\n\r\nclass CartDetail extends Component {\r\n    constructor(props) {\r\n        super(props); \r\n    }\r\n\r\n    componentWillMount() {\r\n        document.title = \"My Cart\";\r\n        this.props.setMenuCode('cart');\r\n    }\r\n\r\n    render() {\r\n        let cart = this.props.enableShopping ? this.props.cart : [];  \r\n       \r\n        return (\r\n            <div className=\"section-container\">\r\n                <ContentTitle title=\"My Cart\" iconClass=\"fas fa-shopping-cart\"/>\r\n                <div className=\" cart-bg\">\r\n                    <div className=\"cart-container paper-shadow\" >\r\n                       <CartItemList cart={cart} />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nfunction CartItemList (props ) {\r\n    let grandTotalPrice = 0;\r\n    let cartRows = [\r\n        { values: [\"No\", \"Name\", \"Qty\", \"Unit\", \"@Price\", \"Total Price\"] }\r\n    ]\r\n    let number = 0;\r\n    const cart = props.cart;\r\n\r\n    for (let i = 0; i < cart.length; i++) {\r\n        let cartItem = cart[i];\r\n        if (!cartItem.product) {\r\n            continue;\r\n        }\r\n\r\n        const name = cartItem.product.name;\r\n        const count = (cartItem.count);\r\n        const price = (cartItem.product.price);\r\n        const productImageUrl = cartItem.product.imageUrl;\r\n        const imageUrl = url.baseImageUrl + productImageUrl.split(\"~\")[0];\r\n        let totalPrice = price * count;\r\n\r\n        totalPrice = (totalPrice);\r\n\r\n        grandTotalPrice += totalPrice;\r\n        number++;\r\n        cartRows.push({\r\n            values: [\r\n                number, \r\n               <div style={{textAlign:'center'}}><img src={imageUrl} width=\"50\" height=\"50\"/><Label text={name} /></div> , \r\n                stringUtil.beautifyNominal(count),\r\n                cartItem.product.unit.name,\r\n                stringUtil.beautifyNominal(price),\r\n                stringUtil.beautifyNominal(totalPrice)\r\n            ]\r\n        })\r\n    }\r\n\r\n    cartRows.push({\r\n        values: [\r\n            \"Total Price\", <b>{stringUtil.beautifyNominal(grandTotalPrice)}</b>\r\n        ],\r\n        CS: [5, 1]\r\n    })\r\n    let cartItemList = cart.length > 0 ? <InstantTable style={{ fontFamily: 'Arial Narrow', width: '100%' }}\r\n            rows={cartRows} /> :\r\n            <h3 style={{ margin: 'auto' }}>You don't have any list</h3>;\r\n    return cartItemList;\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return { \r\n        cart: state.shopState.cart\r\n    }\r\n}\r\nexport default connect(\r\n    mapStateToProps, \r\n)(CartDetail);","import React, { Component } from 'react'\r\nimport * as stringUtil from '../../utils/StringUtil'\r\nimport * as componentUtil from '../../utils/ComponentUtil'\r\nimport ActionButton from '../buttons/ActionButton';\r\n\r\nclass InputFile extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            base64Data: null\r\n        }\r\n\r\n        this.onChange = (e) => {\r\n            componentUtil.toBase64(e.target, this, function (result, referer) {\r\n                referer.setState({ base64Data: result });\r\n\r\n            });\r\n        }\r\n\r\n        this.removeImage = () => {\r\n            if (this.props.removeImage) {\r\n                this.props.removeImage();\r\n            }\r\n        }\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        if (this.props.onChange) {\r\n            this.props.onChange(this.state.base64Data);\r\n        }\r\n    }\r\n\r\n    render() {\r\n\r\n        let displayImage = null;\r\n        if (this.state.base64Data) {\r\n            displayImage =\r\n                <DisplayedImage enableRemove={false} value={this.state.base64Data} />\r\n        }\r\n        if (this.props.value && this.props.value.trim() != \"\") {\r\n            displayImage = <DisplayedImage enableRemove={true} value={this.props.value} removeImage={this.removeImage} />\r\n\r\n        }\r\n\r\n        return (\r\n            <div className=\"row\" >\r\n                <div className=\"col-12\">\r\n                    <input className=\"form-control\" accept=\"image/*\" onChange={this.onChange}\r\n                        type=\"file\" key={\"input_file_\" + stringUtil.uniqueId()} />\r\n                </div>\r\n                <div className=\"col-12\">\r\n                    {displayImage}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nfunction DisplayedImage(props) {\r\n    return (<div className=\"input-image-wrapper row\">\r\n        <div className=\"col-6\">\r\n            <img src={props.value} width=\"60\" height=\"60\" />\r\n        </div>\r\n        <div className=\"col-6\">\r\n            {props.enableRemove ? <ActionButton text={<i className=\"fas fa-minus-circle\" ></i>} status=\"danger btn-sm\" onClick={props.removeImage} /> : null}\r\n        </div></div>)\r\n}\r\n\r\nexport default InputFile;\r\n\r\n","import React, { Component } from 'react';\r\nimport * as url from '../../constant/Url'\r\nimport * as stringUtil from '../../utils/StringUtil'\r\nimport InputFile from './InputFile';\r\nimport ActionButton from '../buttons/ActionButton';\r\n\r\nclass InputFileMultiple extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.handleAddMoreFile = () => {\r\n            if (this.props.addMoreImage) {\r\n                this.props.addMoreImage();\r\n            }\r\n        }\r\n\r\n    }\r\n    render() {\r\n\r\n        let inputFields = [];\r\n        if (this.props.inputFilesData) {\r\n            inputFields = this.props.inputFilesData;\r\n        }\r\n\r\n\r\n\r\n        return (\r\n            <div >\r\n\r\n                {inputFields.map(\r\n                    inputFileData => {\r\n                        let value = inputFileData.value;\r\n                        return (\r\n                            <InputFile\r\n                                key={stringUtil.uniqueId() + \"_multiple_file_item\"}\r\n                                onChange={(base64) => {\r\n                                    if (inputFileData.onChange)\r\n                                        inputFileData.onChange(base64)\r\n                                }}\r\n                                value={value && value.includes(\"base64\") ? value : value ?\r\n                                    url.baseImageUrl + value : null}\r\n                                id={inputFileData.inputId}\r\n                                removeImage={() => {\r\n                                    if (inputFileData.removeImage)\r\n                                        inputFileData.removeImage()\r\n                                }\r\n                                }\r\n                            />\r\n                        )\r\n                    }\r\n                )}\r\n                <ActionButton status=\"info bn-sm\" text={<i className=\"fas fa-plus-circle\" ></i>} onClick={this.handleAddMoreFile} />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default InputFileMultiple;","import React, { Component } from 'react'\r\nimport './Entity.css'\r\nimport { byId } from '../../../utils/ComponentUtil'\r\nimport * as stringUtil from '../../../utils/StringUtil'\r\nimport { withRouter } from 'react-router'\r\nimport * as actions from '../../../redux/actionCreators'\r\nimport { connect } from 'react-redux'\r\nimport * as url from '../../../constant/Url'\r\nimport DynamicDropdown from '../../inputs/DynamicDropdown'\r\nimport InputField from '../../inputs/InputField'\r\nimport InputFile from '../../inputs/InputFile'\r\nimport InputFileMultiple from '../../inputs/InputFileMultiple'\r\nimport Label from '../../container/Label'\r\nimport ActionButtons from '../../buttons/ActionButtons'\r\nimport ComboBox from './../../inputs/ComboBox';\r\n\r\nclass EntityForm extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            managedEntity: null,\r\n            activeId: null,\r\n            formValues: {},\r\n            dropdownList: {},\r\n            dropdownValues: {},\r\n            selectedEntities: {},\r\n            base64Data: {},\r\n            base64DataMultiple: {},\r\n            updated: new Date()\r\n        }\r\n\r\n        /**\r\n         * valudate before submit\r\n         */\r\n        this.validateEntity = (entity) => {\r\n            console.info(\"validateEntity\");\r\n            const result = entity;\r\n            for (let key in entity) {\r\n\r\n                const element = this.getElementProperty(key);\r\n                if (element) {\r\n                    if (element.type == \"img\" && element.multiple == false) {\r\n                        /**\r\n                         * handle single Image\r\n                         */\r\n                        if (entity[key] && !entity[key].includes(\"base64\")) {\r\n                            result[key] = null;\r\n                        }\r\n                    } else if (element.type == \"img\" && element.multiple == true) {\r\n                        /**\r\n                         * handle MULTIPLE Image\r\n                         */\r\n                        console.info(\"this.state.base64DataMultiple[key] \", this.state.base64DataMultiple[key]);\r\n\r\n                        if (entity[key]) {\r\n                            let arrayOfValues = entity[key].split(\"~\");\r\n                            let resultValue = new Array();\r\n                            for (let i = 0; i < arrayOfValues.length; i++) {\r\n                                const element = arrayOfValues[i];\r\n                                /**\r\n                                 * if not modified\r\n                                 */\r\n                                if (!this.state.base64DataMultiple[key] ||\r\n                                    !this.state.base64DataMultiple[key][i]) {\r\n                                    resultValue.push(\"{ORIGINAL>>\" + element + \"}\");\r\n                                } else\r\n                                    /**\r\n                                     * if modified\r\n                                     */\r\n                                    if (this.state.base64DataMultiple[key] &&\r\n                                        this.state.base64DataMultiple[key][i]) {\r\n                                        const updatedValue = this.state.base64DataMultiple[key][i];\r\n                                        resultValue.push(\"{ORIGINAL>>\" + element + \"}\" + updatedValue);\r\n                                    }\r\n\r\n                            }\r\n\r\n                            if (this.state.base64DataMultiple[key] && this.state.base64DataMultiple[key].length > arrayOfValues.length) {\r\n                                for (let i = arrayOfValues.length - 1; i < this.state.base64DataMultiple[key].length; i++) {\r\n                                    const element = this.state.base64DataMultiple[key][i];\r\n                                    if (element && element.includes(\"base64\")) {\r\n                                        resultValue.push(element);\r\n                                    }\r\n                                }\r\n                            }\r\n\r\n                            if (resultValue.length > 0)\r\n                                result[key] = resultValue.join(\"~\");\r\n                        }\r\n                    }\r\n                }\r\n                console.log(key, \"=>\", result[key]);\r\n            }\r\n\r\n            return result;\r\n        }\r\n\r\n        this.refresh = () => {\r\n            this.setState({ updated: new Date() })\r\n        }\r\n\r\n        this.handleSubmit = () => {\r\n            const updateMode = this.props.managedEntity != null;\r\n            if (updateMode) {\r\n                console.log(\"WILL UPDATE(props):\", this.props.managedEntity);\r\n                if (this.props.updateEntity) {\r\n                    this.props.updateEntity(this.props.entityProperty.entityName,\r\n                        this.validateEntity(this.props.managedEntity), \"update\");\r\n                }\r\n            }\r\n\r\n            const addNewMod = this.state.managedEntity != null;\r\n            if (addNewMod) {\r\n                console.log(\"WILL SUBMIT NEW(state):\", this.state.managedEntity);\r\n                if (this.props.updateEntity) {\r\n                    this.props.updateEntity(this.props.entityProperty.entityName,\r\n                        this.validateEntity(this.state.managedEntity), \"addNew\");\r\n                }\r\n            }\r\n            this.clear();\r\n        }\r\n\r\n        this.focusActiveId = () => {\r\n            if (byId(this.state.activeId)) {\r\n                byId(this.state.activeId).focus();\r\n            }\r\n        }\r\n\r\n        this.onKeyUp = (value, id, propName) => {\r\n            this.setState({ activeId: id });\r\n            this.updateSelectedEntity(propName, value);\r\n\r\n        }\r\n\r\n        this.clear = () => {\r\n            this.setState({\r\n                managedEntity: null,\r\n                dropdownList: {},\r\n                dropdownValues: {},\r\n                selectedEntities: {},\r\n                base64Data: {},\r\n                base64DataMultiple: {}\r\n            });\r\n            if (this.props.removeManagedEntity) {\r\n                this.props.removeManagedEntity();\r\n            }\r\n        }\r\n\r\n        this.populateDropdown = (entityname, fieldname, fieldvalue) => {\r\n            const request = {\r\n                entityName: entityname,\r\n                fieldName: fieldname.split(\".\")[1],\r\n                fieldValue: fieldvalue\r\n            }\r\n            this.props.getEntitiesWithCallback(request, this, function (data, referer) {\r\n                console.log(\"DATA FOR DROPDOWN: \", data);\r\n            });\r\n\r\n        }\r\n\r\n        this.onKeyUpDynamicDropdown = (value, inputPhysicalId, fieldId, reffEntity, optionItemName) => {\r\n            if (value == null || value.trim() == \"\") { return; }\r\n            const request = {\r\n                entityName: reffEntity.toLowerCase(),\r\n                fieldName: optionItemName,\r\n                fieldValue: value\r\n            }\r\n            this.props.getEntitiesWithCallback(request, this, function (data, referer) {\r\n                console.log(\"LIST FOR \", fieldId, \" DROPDOWN: \", data.entities)\r\n                referer.populateDropdownValues(data.entities, fieldId);\r\n            });\r\n            let currentDropdownValue = this.state.dropdownValues;\r\n            currentDropdownValue[fieldId] = value;\r\n            this.setState({ activeId: inputPhysicalId, dropdownValues: currentDropdownValue });\r\n        }\r\n\r\n        this.populateDropdownValues = (entities, fieldId) => {\r\n            console.log(\"ENTITIES (\", fieldId, \"):\", entities)\r\n            let options = new Array();\r\n            const element = this.getElementProperty(fieldId);\r\n            if (null == element) {\r\n                console.log(\"FORM DATA NOT FOUND\");\r\n                return;\r\n            }\r\n\r\n            for (let i = 0; i < entities.length; i++) {\r\n                const entity = entities[i];\r\n                options.push({\r\n                    value: entity[element.optionValueName],\r\n                    text: entity[element.optionItemName],\r\n                    entity: entity\r\n                })\r\n            }\r\n            let currentDropdownList = this.state.dropdownList;\r\n            currentDropdownList[fieldId] = options;\r\n            //  this.setState({ dropdownList: currentDropdownList })\r\n            return options;\r\n        }\r\n\r\n        this.getSelectedDropdownItem = (value, fieldId) => {\r\n            if (this.state.dropdownList[fieldId] == null) {\r\n                return null;\r\n            }\r\n            const dropdownList = this.state.dropdownList[fieldId];\r\n            for (let i = 0; i < dropdownList.length; i++) {\r\n                const option = dropdownList[i];\r\n                if (option.value == value) {\r\n                    return option;\r\n                }\r\n\r\n            }\r\n            return null;\r\n        }\r\n\r\n        this.getElementProperty = (fieldId) => {\r\n            if (this.props.entityProperty) {\r\n                const entityProperty = this.props.entityProperty;\r\n                for (let i = 0; i < entityProperty.elements.length; i++) {\r\n                    const element = entityProperty.elements[i];\r\n                    if (element.id == fieldId) {\r\n                        return element;\r\n                    }\r\n                }\r\n            }\r\n            return null;\r\n        }\r\n\r\n        this.addMoreImage = (propName) => {\r\n            if (this.props.managedEntity) {\r\n                let currentValue = this.props.managedEntity[propName];\r\n                if (currentValue) {\r\n                    currentValue = currentValue.trim() + \"~DEFAULT.BMP\";\r\n                    this.updateSelectedEntity(propName, currentValue);\r\n                }\r\n            } else {\r\n                let managedEntity = this.state.managedEntity;\r\n                let currentValue;\r\n                if (!managedEntity) {\r\n                    managedEntity = {};\r\n                    currentValue = \"\";\r\n                } else\r\n                    currentValue = managedEntity[propName] + \"~\";\r\n                currentValue = currentValue.trim() + \"DEFAULT.BMP\";\r\n                this.updateSelectedEntity(propName, currentValue);\r\n            }\r\n        }\r\n\r\n        this.updateSelectedEntity = (propName, value) => {\r\n            if (this.props.managedEntity) {\r\n                this.props.managedEntity[propName] = value;\r\n                this.refresh();\r\n            } else {\r\n                let managedEntity = this.state.managedEntity;\r\n                if (!managedEntity) managedEntity = {};\r\n                managedEntity[propName] = value;\r\n                this.setState({ managedEntity: managedEntity });\r\n            }\r\n\r\n        }\r\n        this.handleRemoveImage = (fieldId) => {\r\n\r\n            let base64Data = this.state.base64Data;\r\n            base64Data[fieldId] = null;\r\n\r\n            this.updateSelectedEntity(fieldId, null);\r\n            this.setState({ base64Data: base64Data });\r\n        }\r\n\r\n        this.handleChangeBase64Image = (base64, fieldId) => {\r\n\r\n            let base64Data = this.state.base64Data;\r\n            base64Data[fieldId] = base64;\r\n\r\n            this.updateSelectedEntity(fieldId, base64);\r\n            this.setState({ base64Data: base64Data });\r\n        }\r\n\r\n        this.handleChangeBase64MultipleImage = function (base64, fieldId, i) {\r\n            let base64DataMultiple = this.state.base64DataMultiple;\r\n            const propName = fieldId;\r\n            if (!base64DataMultiple[propName]) {\r\n                base64DataMultiple[propName] = new Array();\r\n            }\r\n            base64DataMultiple[propName][i] = base64;\r\n\r\n            this.setState({ base64DataMultiple: base64DataMultiple });\r\n\r\n        }\r\n\r\n        this.removeElementAtPosition = (array, index) => {\r\n            let result = new Array();\r\n            for (let i = 0; i < array.length; i++) {\r\n                if (i != index) {\r\n                    result.push(array[i])\r\n                }\r\n            }\r\n\r\n            return result;\r\n        }\r\n\r\n        this.handleRemoveMultipleImage = (_fieldId, i) => {\r\n            let base64DataMultiple = this.state.base64DataMultiple;\r\n            const fieldId = _fieldId;\r\n            if (!base64DataMultiple[fieldId]) {\r\n                base64DataMultiple[fieldId] = new Array();\r\n            }\r\n            base64DataMultiple[fieldId][i] = null; //set to NULL\r\n\r\n            this.setState({ base64DataMultiple: base64DataMultiple });\r\n\r\n            if (this.props.managedEntity) {\r\n                let currentValue = this.props.managedEntity[fieldId];\r\n                if (currentValue) {\r\n                    let newArrayValue = this.removeElementAtPosition(currentValue.split(\"~\"), i);\r\n                    this.updateSelectedEntity(fieldId, newArrayValue.join(\"~\"));\r\n                }\r\n            } else {\r\n                let managedEntity = this.state.managedEntity;\r\n                if (!managedEntity) {\r\n                    return;\r\n                }\r\n                let currentValue = managedEntity[fieldId];\r\n                if (currentValue) {\r\n                    let newArrayValue = this.removeElementAtPosition(currentValue.split(\"~\"), i);\r\n                    this.updateSelectedEntity(fieldId, newArrayValue.join(\"~\"));\r\n\r\n                }\r\n            }\r\n        }\r\n\r\n        this.selectFromDynamicDropdown = (value, propName) => {\r\n            console.log(\"Dynamic Dropdown \", propName, \":\", value);\r\n            const stateDropdownList = this.state.dropdownList;\r\n            const stateDropdownValues = this.state.dropdownValues;\r\n            const selectedEntities = this.state.selectedEntities;\r\n\r\n            const selectedOption = this.getSelectedDropdownItem(value, propName);\r\n            if (null == selectedOption) {\r\n                return;\r\n            }\r\n\r\n            stateDropdownValues[propName] = selectedOption.text;\r\n            stateDropdownList[propName] = [];\r\n            selectedEntities[propName] = selectedOption.entity;\r\n\r\n            /**\r\n             * time to modify entity\r\n             */\r\n            const displayPropName = propName;\r\n\r\n            this.updateSelectedEntity(displayPropName, selectedOption.entity);\r\n            this.setState({ activeId: null, dropdownList: stateDropdownList, dropdownValues: stateDropdownValues, selectedEntities: selectedEntities });\r\n            this.refresh();\r\n        }\r\n\r\n        this.selectFromFixedDropdown = (value, fieldId) => {\r\n            console.log(\"FIXED Dropdown \", fieldId, \":\", value);\r\n            const stateDropdownList = this.state.dropdownList;\r\n            const stateDropdownValues = this.state.dropdownValues;\r\n\r\n            stateDropdownValues[fieldId] = value;\r\n            const element = this.getElementProperty(fieldId);\r\n            const optionValueName = element.optionValueName;\r\n            const currentDropdownList = stateDropdownList[fieldId];\r\n\r\n            for (let i = 0; i < currentDropdownList.length; i++) {\r\n                const entity = currentDropdownList[i];\r\n                if (entity[optionValueName] == value) {\r\n                    console.info(\"update fieldId: \", entity);\r\n                    this.updateSelectedEntity(fieldId, entity);\r\n                    this.setState({ activeId: null, dropdownValues: stateDropdownValues });\r\n                    this.refresh();\r\n                    break;\r\n                }\r\n            }\r\n\r\n        }\r\n        this.selectFromPlainListDropdown = (value, fieldId) => {\r\n            console.log(\"Plain Dropdown \", fieldId, \":\", value);\r\n            const stateDropdownList = this.state.dropdownList;\r\n            const dropdownValues = this.state.dropdownValues;\r\n            dropdownValues[fieldId] = value;\r\n            const currentDropdownList = stateDropdownList[fieldId];\r\n\r\n            for (let i = 0; i < currentDropdownList.length; i++) {\r\n                const item = currentDropdownList[i];\r\n                if (item.toString() == value.toString()) {\r\n                    console.info(\"update fieldId: \", item);\r\n                    this.updateSelectedEntity(fieldId, item);\r\n                    this.setState({ activeId: null, dropdownValues: dropdownValues });\r\n                    this.refresh();\r\n                    break;\r\n                }\r\n            }\r\n\r\n        }\r\n\r\n        this.updateFixedListValues = (options, fieldId) => {\r\n\r\n            const currentDropdownList = this.state.dropdownList;\r\n            if (currentDropdownList[fieldId] != null && currentDropdownList[fieldId].length == options.length) return;\r\n            currentDropdownList[fieldId] = options;\r\n            this.setState({ dropdownList: currentDropdownList });\r\n        }\r\n        this.updatePlainListValues = (options, fieldId) => {\r\n\r\n            const currentDropdownList = this.state.dropdownList;\r\n            if (currentDropdownList[fieldId] != null && currentDropdownList[fieldId].length == options.length) return;\r\n            currentDropdownList[fieldId] = options;\r\n            this.setState({ dropdownList: currentDropdownList });\r\n        }\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        this.focusActiveId();\r\n\r\n        console.debug(\"props managedEntity: \", this.props.managedEntity);\r\n        console.debug(\"state managedEntity: \", this.state.managedEntity);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"entity-form-wrapper\">\r\n                <div className=\"entity-form  \">\r\n                    <FormElement\r\n                        entityConfig={this.props.entityConfig}\r\n                        managedEntity={this.props.managedEntity}\r\n                        entityProperty={this.props.entityProperty}\r\n\r\n                        app={this}\r\n\r\n                        updated={this.state.updated}\r\n                        stateManagedEntity={this.state.managedEntity}\r\n                        dropdownValues={this.state.dropdownValues}\r\n                        dropdownList={this.state.dropdownList}\r\n                        base64DataMultiple={this.state.base64DataMultiple}\r\n\r\n                    />\r\n                    <FormActionButtons\r\n                        entityConfig={this.props.entityConfig}\r\n                        managedEntity={this.props.managedEntity}\r\n                        handleSubmit={this.handleSubmit}\r\n                        clear={this.clear} />\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nfunction FormActionButtons(props) {\r\n    if (!props.entityConfig.disabled) {\r\n        return (<ActionButtons buttonsData={[\r\n            {\r\n                text: props.managedEntity ? \"Update\" : \"Add Record\",\r\n                onClick: props.handleSubmit,\r\n                status: \"success\"\r\n            },\r\n            {\r\n                text: \"Clear\",\r\n                status: \"warning\",\r\n                onClick: props.clear\r\n            }\r\n        ]} />)\r\n    }\r\n\r\n    return <></>;\r\n}\r\n\r\nfunction FormElement(_props) {\r\n    const props = _props;\r\n    const app = props.app;\r\n    const entityExist = props.managedEntity != null || props.stateManagedEntity;\r\n    const enityProperty = props.entityProperty;\r\n    const elements = enityProperty.elements;\r\n\r\n    return (<>\r\n        {elements.map(\r\n            element => {\r\n                const elementId = element.id;\r\n                let value = null;\r\n                if (entityExist) {\r\n                    const entity = props.managedEntity ? props.managedEntity : props.stateManagedEntity;\r\n\r\n                    if (element.entityReferenceClass != null && props.activeId != \"input-for-\" + element.name) {\r\n                        const valueAsObject = entity[elementId];\r\n\r\n                        if (valueAsObject != null) {\r\n                            if (element.type == \"dynamiclist\") {\r\n                                const objectPropName = element.optionItemName;\r\n                                value = valueAsObject[objectPropName];\r\n                            } else if (element.type == \"fixedlist\") {\r\n                                const objectPropName = element.optionValueName;\r\n                                value = valueAsObject[objectPropName];\r\n                            }\r\n                        }\r\n                    } else {\r\n                        value = entity[elementId];\r\n                    }\r\n                }\r\n\r\n                let inputComponent = null;\r\n                const inputId = \"input-for-\" + elementId;\r\n\r\n                if (element.type == \"dynamiclist\") {\r\n                    /**\r\n                     * if dynamic dropDown\r\n                     */\r\n\r\n                    if (null == value) {\r\n                        value = props.dropdownValues[elementId]\r\n                    }\r\n\r\n                    inputComponent = <DynamicDropdown\r\n                        onSelect={(value) => app.selectFromDynamicDropdown(value, elementId)}\r\n                        id={inputId}\r\n                        placeholder={element.lableName}\r\n                        value={value}\r\n                        dropdownList={props.dropdownList[elementId]}\r\n                        onKeyUp={(value, id) => { app.onKeyUpDynamicDropdown(value, id, elementId, element.entityReferenceClass, element.optionItemName) }} />\r\n\r\n                } else if (element.type == \"fixedlist\") {\r\n                    /**\r\n                     * if fixed dropDown\r\n                     */\r\n\r\n                    if (null == value) {\r\n                        value = props.dropdownValues[elementId];\r\n                    }\r\n\r\n                    app.updateFixedListValues(element.options, elementId);\r\n                    console.info(\"def value \", elementId, \" : \", value)\r\n                    const comboBoxOptions = getFixedListElementOptions(element);\r\n                    inputComponent = <ComboBox\r\n                        onChange={(value) => {\r\n                            app.selectFromFixedDropdown(value, elementId);\r\n                        }}\r\n                        defaultValue={value}\r\n                        id={inputId}\r\n                        placeholder={element.lableName}\r\n                        options={comboBoxOptions}\r\n                    />\r\n\r\n                } else if (element.type == \"plainlist\") {\r\n                    /**\r\n                     * if fixed dropDown\r\n                     */\r\n\r\n                    if (null == value) {\r\n                        value = props.dropdownValues[elementId];\r\n                    }\r\n\r\n                    app.updatePlainListValues(element.plainListValues, elementId);\r\n                    console.info(\"def value \", elementId, \" : \", value)\r\n                    const comboBoxOptions = getPlainListElementOptions(element);\r\n                    inputComponent = <ComboBox\r\n                        onChange={(value) => {\r\n                            app.selectFromPlainListDropdown(value, elementId);\r\n                        }}\r\n                        defaultValue={value == null ? null : value.toString()}\r\n                        id={inputId}\r\n                        placeholder={element.lableName}\r\n                        options={comboBoxOptions}\r\n                    />\r\n\r\n                } else if (element.type == \"img\" && element.multiple == false) {\r\n                    /**\r\n                     * handle image single\r\n                     */\r\n                    inputComponent = <InputFile\r\n                        onChange={(base64) => app.handleChangeBase64Image(base64, elementId)}\r\n                        value={value && value.includes(\"base64\") ? value : value ? url.baseImageUrl + value : null}\r\n                        id={inputId}\r\n                        removeImage={() => app.handleRemoveImage(elementId)}\r\n\r\n                    />\r\n\r\n                } else if (element.type == \"img\" && element.multiple == true) {\r\n                    /**\r\n                     * handle multiple single\r\n                     */\r\n                    const valueSplit = value ? value.split(\"~\") : [];\r\n\r\n                    const imagesData = new Array();\r\n                    for (let i = 0; i < valueSplit.length; i++) {\r\n                        let valueSplitItem = valueSplit[i];\r\n                        if (props.base64DataMultiple[elementId] &&\r\n                            props.base64DataMultiple[elementId][i]\r\n                            && props.base64DataMultiple[elementId][i].includes(\"base64\")) {\r\n                            valueSplitItem = props.base64DataMultiple[elementId][i];\r\n                        }\r\n                        imagesData.push({\r\n                            value: valueSplitItem,\r\n                            onChange: (base64) => {\r\n                                app.handleChangeBase64MultipleImage(base64, elementId, i);\r\n                            },\r\n                            removeImage: () => app.handleRemoveMultipleImage(elementId, i)\r\n\r\n                        })\r\n                    }\r\n                    inputComponent = <InputFileMultiple\r\n                        addMoreImage={() => app.addMoreImage(elementId)}\r\n                        inputFilesData={imagesData}\r\n                    />\r\n                }\r\n\r\n                else {\r\n                    /**\r\n                     * regular\r\n                     */\r\n                    inputComponent = <InputField\r\n                        disabled={element.idField == true}\r\n                        onKeyUp={(value, id) => { app.onKeyUp(value, id, elementId) }}\r\n                        id={inputId} value={value}\r\n                        type={element.type} placeholder={element.lableName} />;\r\n                }\r\n\r\n                return (\r\n                    <div key={\"FORM-FIELD-\" + stringUtil.uniqueId()}  >\r\n                        <Label text={element.lableName} />\r\n                        {inputComponent}\r\n                    </div>\r\n                )\r\n            }\r\n        )}\r\n    </>);\r\n\r\n}\r\n\r\nconst getPlainListElementOptions = (element) => {\r\n    const options = [];\r\n\r\n    for (let i = 0; i < element.plainListValues.length; i++) {\r\n        const el = element.plainListValues[i];\r\n        options.push({\r\n            value: el,\r\n            text: el\r\n        })\r\n    }\r\n\r\n    return options;\r\n}\r\n\r\nconst getFixedListElementOptions = (element) => {\r\n    const options = [];\r\n\r\n    for (let i = 0; i < element.options.length; i++) {\r\n        const el = element.options[i];\r\n        options.push({\r\n            value: el[element.optionValueName],\r\n            text: el[element.optionItemName]\r\n        })\r\n    }\r\n\r\n    return options;\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {}\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    getEntitiesWithCallback: (request, referer, callback) => dispatch(actions.getEntitiesWithCallback(request, referer, callback)),\r\n\r\n\r\n})\r\nexport default withRouter(connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(EntityForm))","\r\nimport React, { Component } from 'react'\r\nexport const  CenterLoading = (props) => {\r\n    return (\r\n        <div class=\"d-flex justify-content-center\"  style={{padding:'5px'}}>\r\n            <div class=\"spinner-border\" role=\"status\" style={{width: '3rem', height: '3rem'}}>\r\n                <span class=\"sr-only\">Loading...</span>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React, { Component } from 'react'\r\nimport InstantTable from '../../container/InstantTable'\r\nimport { byId } from '../../../utils/ComponentUtil'\r\nimport * as stringUtil from '../../../utils/StringUtil'\r\nimport './Management.css'\r\nimport './Entity.css'\r\nimport * as componentUtil from '../../../utils/ComponentUtil'\r\nimport ActionButtons from '../../buttons/ActionButtons';\r\nimport InputField from '../../inputs/InputField'\r\nimport EntityForm from './EntityForm';\r\nimport * as url from '../../../constant/Url'\r\nimport Label from '../../container/Label'\r\nimport GridComponent from './../../container/GridComponent';\r\nimport { CenterLoading } from '../../messages/SimpleLoader'\r\n\r\nclass EntityList extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            filter: {},\r\n            activeId: null,\r\n            orderBy: null,\r\n            orderType: null\r\n        }\r\n\r\n        this.handleDelete = (id) => {\r\n            if (!window.confirm(\"Are your sure for deleting this entity?\")) { return; }\r\n            console.log(\"Will DELETE: \", id)\r\n        }\r\n        this.handleEdit = (id) => {\r\n            this.getEntityById(id);\r\n        }\r\n\r\n        this.goToPage = (page, orderObject) => {\r\n            if (page > this.props.entitiesData.totalData / 10) {\r\n                page = 0;\r\n            }\r\n            if (page < 0) {\r\n                page = Math.ceil(this.props.entitiesData.totalData / 10 - 1);\r\n            }\r\n\r\n            let config = this.props.entityConfig;\r\n            config.filter = this.state.filter;\r\n            if (orderObject != null) {\r\n                config.orderBy = orderObject.orderBy;\r\n                config.orderType = orderObject.orderType;\r\n                this.setState({ orderBy: orderObject.orderBy, orderType: orderObject.orderType });\r\n            }\r\n\r\n            this.props.getEntityInPage(config, page);\r\n\r\n        }\r\n\r\n        this.getEntityById = (id) => {\r\n            const config = this.props.entityConfig;\r\n            if (config == null) {\r\n                alert(\"Config Not Found!\");\r\n                return;\r\n            }\r\n\r\n            this.props.getEntityById(config.entityName, id);\r\n        }\r\n\r\n        this.createNavButtons = () => {\r\n            let displayedButtons = componentUtil.createNavButtons(this.props.entitiesData.totalData / 10, this.props.currentPage);\r\n            return displayedButtons;\r\n        }\r\n\r\n        this.setOrderBy = (fieldName, orderType) => {\r\n            this.goToPage(this.props.currentPage, { orderBy: fieldName, orderType: orderType });\r\n        }\r\n\r\n        this.createFilterInputsv2 = (entityProperty) => {\r\n            const inputs = new Array();\r\n            const elements = entityProperty.elements;\r\n            if (!elements) {\r\n                return inputs;\r\n            }\r\n            for (let i = 0; i < elements.length; i++) {\r\n                const element = elements[i];\r\n                const id = element.id;\r\n\r\n                let value = \"\";\r\n\r\n                if (this.state.filter[id] != null) {\r\n                    value = this.state.filter[id];\r\n                }\r\n\r\n                let input = <InputField value={value} id={id + \"_filter_id\"}\r\n                    onKeyUp={this.handleFilterChange} key={\"input_field_\" + stringUtil.uniqueId()}\r\n                    placeholder={id} />\r\n\r\n                if (element.type == \"date\") {\r\n                    input = <DateFilter id={id} filter={this.state.filter} app={this} />\r\n                }\r\n\r\n                inputs.push(<div className=\"filter-wrapper\">\r\n                    {input}<SortingButton app={this} id={id} />\r\n                </div>);\r\n            }\r\n            inputs.push(\"\");\r\n            return inputs;\r\n        }\r\n\r\n\r\n        this.handleFilterChange = (value, id) => {\r\n\r\n            let filter = this.state.filter;\r\n            if (value != null && value.trim() == \"\") {\r\n                filter[id.split(\"_filter_id\")[0]] = null;\r\n            } else {\r\n                filter[id.split(\"_filter_id\")[0]] = value;\r\n            }\r\n\r\n            this.setState({ filter: filter, activeId: id });\r\n            this.goToPage(this.props.currentPage);\r\n        }\r\n\r\n        this.focusActiveId = () => {\r\n            if (byId(this.state.activeId)) {\r\n                byId(this.state.activeId).focus();\r\n            }\r\n        }\r\n\r\n        //for data table\r\n        this.getEntityDataTableRowData = () => {\r\n            const entitiesData = this.props.entitiesData;\r\n            const entityConfig = this.props.entityConfig;\r\n            const entityProperty = this.props.entityProperty;\r\n\r\n            if (null == entitiesData || null == entityConfig || null == entitiesData.entities) {\r\n                return (<CenterLoading />)\r\n            }\r\n\r\n            const rows = [\r\n                //header\r\n                {\r\n                    values: [\"No\", ...getHeaderNamesv2(entityProperty)], disabled: true, style: { textAlign: 'center', fontWeight: 'bold' }\r\n                },\r\n                //filter\r\n                {\r\n                    values: [null, ... this.createFilterInputsv2(entityProperty)], disabled: true\r\n                }\r\n            ];\r\n\r\n            const entities = this.props.entitiesData.entities;\r\n            const idField = entityProperty.idField;\r\n            const currentPage = this.props.currentPage;\r\n\r\n            for (let i = 0; i < entities.length; i++) {\r\n                const entity = entities[i];\r\n                const number = (currentPage * 10) + i + 1;\r\n                const rowValues = [number];\r\n\r\n                for (let j = 0; j < entityProperty.elements.length; j++) {\r\n                    const element = entityProperty.elements[j];\r\n                    const elementId = element.id;\r\n                    const isObject = element.entityReferenceClass != null;\r\n\r\n                    let entityValue = entity[elementId];\r\n                    if (element.type && entityValue) {\r\n                        if (element.type == \"number\") {\r\n                            entityValue = stringUtil.beautifyNominal(entityValue);\r\n                            // } else if (element.type == \"link\") {\r\n                            //     entityValue = <a href={entityValue}><u>{entityValue}</u></a>\r\n                        } else if (element.type == \"img\" && element.multiple == false) {\r\n                            entityValue = <img width=\"60\" height=\"60\" alt={url.baseImageUrl + entityValue} src={url.baseImageUrl + entityValue} />\r\n                        } else if (element.type == \"img\" && element.multiple == true) {\r\n                            let imgName = entityValue.split(\"~\")[0];\r\n                            entityValue = <img width=\"60\" height=\"60\" src={url.baseImageUrl + imgName} />\r\n                        } else if (element.type == \"date\") {\r\n                            const dateStr = new Date(entityValue).toDateString();\r\n                            entityValue = <Label text={dateStr} />;\r\n                        } else if (isObject) {\r\n                            entityValue = entityValue[element.optionItemName];\r\n                        }\r\n\r\n                        //validate length..\r\n                        if (entityValue.constructor == String) {\r\n                            const str = entityValue.toString();\r\n                            if (str.length > 50) {\r\n                                entityValue = str.substr(0, 50) + \"....\";\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                    rowValues.push(entityValue);\r\n                }\r\n\r\n                rows.push(\r\n                    {\r\n                        identifier: entity[idField],\r\n                        values: rowValues,\r\n                        handleDelete: this.handleDelete,\r\n                        handleEdit: this.handleEdit,\r\n                        disabled: entityConfig.disabled == true ? true : false\r\n                    }\r\n                )\r\n            }\r\n            return rows;\r\n        }\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        this.focusActiveId();\r\n    }\r\n\r\n    render() {\r\n\r\n        const entitiesData = this.props.entitiesData;\r\n        const entityConfig = this.props.entityConfig;\r\n\r\n        if (null == entitiesData || null == entityConfig || null == entitiesData.entities) {\r\n            return (<CenterLoading />)\r\n        }\r\n        return (\r\n            <div style={{ textAlign: 'center' }}>\r\n                <div className=\"entity-container\">\r\n                    <div style={{ backgroundColor: 'white', margin: '10px' }} > </div>\r\n                    <NavigationButton buttonsData={this.createNavButtons()}\r\n                        goToPage={this.goToPage} currentPage={this.props.currentPage} />\r\n                    <div className=\"entityForm\">\r\n                        <EntityForm\r\n                            app={this.props.app}\r\n                            updateEntity={this.props.updateEntity}\r\n                            removeManagedEntity={this.props.removeManagedEntity}\r\n                            managedEntity={this.props.managedEntity}\r\n                            entityProperty={this.props.entityProperty}\r\n                            entityConfig={entityConfig}\r\n                        />\r\n                    </div>\r\n                    <EntityTable rows={this.getEntityDataTableRowData()} />\r\n                </div>\r\n            </div>\r\n\r\n        )\r\n    }\r\n\r\n}\r\n\r\n \r\n\r\nfunction SortingButton(props) {\r\n    return (<ActionButtons orientation=\"vertical\" buttonsData={[{\r\n        status: 'outline-secondary btn-xs no-border',\r\n        onClick: () => { props.app.setOrderBy(props.id, 'asc') },\r\n        text: <i className={\"fa fa-angle-up\"} aria-hidden=\"true\"></i>\r\n    },\r\n    {\r\n        status: 'outline-secondary btn-xs no-border',\r\n        onClick: () => { props.app.setOrderBy(props.id, 'desc') },\r\n        text: <i className={\"fa fa-angle-down\"} aria-hidden=\"true\"></i>\r\n    }\r\n    ]} />);\r\n}\r\n\r\nfunction DateFilter(props) {\r\n    const valueDay = props.filter[id + \"-day\"];\r\n    const valueMonth = props.filter[id + \"-month\"];\r\n    const valueYear = props.filter[id + \"-year\"];\r\n    const app = props.app;\r\n    const id = props.id;\r\n\r\n    const style = { width: '60px', fontSize: '0.7em' };\r\n\r\n    const inputDay = <InputField style={style} value={valueDay} id={id + \"-day_filter_id\"}\r\n        onKeyUp={app.handleFilterChange} key={\"input_field_d\" + stringUtil.uniqueId()}\r\n        placeholder={\"day\"} />;\r\n    const inputMonth = <InputField style={style} value={valueMonth} id={id + \"-month_filter_id\"}\r\n        onKeyUp={app.handleFilterChange} key={\"input_field_m\" + stringUtil.uniqueId()}\r\n        placeholder={\"month\"} />;\r\n    const inputYear = <InputField style={style} value={valueYear} id={id + \"-year_filter_id\"}\r\n        onKeyUp={app.handleFilterChange} key={\"input_field_y\" + stringUtil.uniqueId()}\r\n        placeholder={\"year\"} />;\r\n    return <GridComponent items={[inputDay, inputMonth, inputYear]} />\r\n}\r\n\r\nconst getHeaderNamesv2 = function (entityProperty) {\r\n    const elements = entityProperty.elements;\r\n    const headers = [];\r\n    for (let i = 0; i < elements.length; i++) {\r\n        const element = elements[i];\r\n        let headerName = element.lableName;\r\n        headers.push(headerName);\r\n    }\r\n    headers.push(\"OPTION\");\r\n    return headers;\r\n}\r\n\r\nfunction EntityTable(props) {\r\n    return <div className=\"entity-list-container\">\r\n        <InstantTable style={{ width: \"100%\", margin: \"5px\", }} rows={props.rows} />\r\n    </div>\r\n}\r\n\r\nfunction NavigationButton(props) {\r\n\r\n    const buttonsData = props.buttonsData;\r\n    const fixButtonData = new Array();\r\n\r\n    fixButtonData.push({\r\n        onClick: () => { props.goToPage(props.currentPage + -1) },\r\n        text: 'previous'\r\n    })\r\n\r\n    for (let i = 0; i < buttonsData.length; i++) {\r\n        buttonsData[i].onClick = () => { props.goToPage(buttonsData[i].value) }\r\n        if (buttonsData[i].value == props.currentPage) {\r\n            buttonsData[i].status = \"info btn-sm\";\r\n        } else {\r\n            buttonsData[i].status = \"outline-info btn-sm\";\r\n        }\r\n        buttonsData[i].text = buttonsData[i].text;\r\n        fixButtonData.push(buttonsData[i]);\r\n    }\r\n\r\n    fixButtonData.push({\r\n        onClick: () => { props.goToPage(props.currentPage + 1) },\r\n        text: 'next'\r\n    });\r\n\r\n    const style = { width: 'min-content', paddingTop: '15px', margin: '10px' };\r\n    return (<ActionButtons style={style} buttonsData={fixButtonData} />);\r\n\r\n}\r\n\r\nexport default EntityList;","import React, { Component } from 'react'\r\nimport './Management.css'\r\nimport { withRouter } from 'react-router';\r\nimport * as actions from '../../../redux/actionCreators'\r\nimport { connect } from 'react-redux'\r\nimport ContentTitle from '../../container/ContentTitle' \r\nimport EntityList from './EntityList';\r\nimport Tab from '../../navigation/Tab';\r\nimport { CenterLoading } from '../../messages/SimpleLoader';\r\n\r\nclass Management extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            entityList: [],\r\n            currentPage: 0,\r\n            entityConfig: null\r\n        }\r\n        this.validateLoginStatus = () => {\r\n            if (this.props.loginStatus != true) this.props.history.push(\"/login\");\r\n        }\r\n\r\n        this.refresh = () => {\r\n            this.getEntityInPage(this.state.entityConfig, this.state.currentPage);\r\n        }\r\n\r\n        this.loadEntityManagement = (config) => {\r\n            this.props.removeManagedEntity();\r\n            this.setState({ currentPage: 0, entityConfig: config });\r\n            this.props.getEntities({\r\n                entityName: config.entityName,\r\n                page: 0,\r\n                limit: 10,\r\n                entityConfig: config\r\n            }, this.props.app);\r\n            this.props.getEntityProperty(config.entityName, this.props.app);\r\n        }\r\n\r\n        this.getEntityInPage = (config, page) => {\r\n            this.setState({ currentPage: page });\r\n\r\n            const request = {\r\n                entityName: config.entityName,\r\n                page: page,\r\n                limit: 10,\r\n                entityConfig: config,\r\n                fieldsFilter: config.filter,\r\n                orderBy: config.orderBy,\r\n                orderType: config.orderType,\r\n            };\r\n\r\n            console.log(\"REQUEST: \", request)\r\n\r\n            this.props.getEntities(request, this.props.app);\r\n        }\r\n\r\n        this.checkIfCurrentMenuName = (name) => {\r\n            if(!this.state.entityConfig || !this.props.entitiesData.entityConfig){\r\n                return false;\r\n            }\r\n            return (this.state.entityConfig.entityName == name) || (this.props.entitiesData.entityConfig.entityName == name);\r\n        }\r\n\r\n        this.getTabMenusData = () => {\r\n\r\n            if(this.props.entityConfigList == null) {\r\n                return [];\r\n            }\r\n\r\n            const configList = this.props.entityConfigList;\r\n            const buttonsData = [];\r\n            for (let i = 0; i < configList.length; i++) {\r\n                const config = configList[i];\r\n                buttonsData.push( {\r\n                    text: config.label,\r\n                    active: this.checkIfCurrentMenuName(config.entityName),\r\n                    onClick: () => { this.loadEntityManagement(config) }\r\n                });\r\n            }\r\n\r\n            if(!this.state.entityConfig &&  (configList).length > 0){\r\n                this.loadEntityManagement(configList[0]);\r\n            }\r\n\r\n            return buttonsData; \r\n            \r\n        }\r\n\r\n        this.updateEntity = (name, entity, flag) => {\r\n            const app = this;\r\n            this.props.app.confirmDialog(\"Are you sure will update \" + name + \"?\",\r\n                function (e) {\r\n                    let newRecord = flag == \"addNew\"; \r\n                    app.props.updateEntity({ entityName: name, entity: entity, isNewRecord: newRecord }, app, function (ref) {\r\n                        ref.callbackHandleUpdate();\r\n                    });\r\n                }, function (e) { }); \r\n\r\n        }\r\n\r\n        this.getEntityById = (name, id) => {\r\n            this.props.getEntityById(name, id, this.props.app);\r\n        }\r\n        this.removeManagedEntity = () => {\r\n            this.props.removeManagedEntity();\r\n        }\r\n\r\n        this.callbackHandleUpdate = () => {\r\n            this.refresh();\r\n            this.removeManagedEntity();\r\n\r\n        }\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        this.validateLoginStatus();\r\n    }\r\n\r\n    componentWillMount() {\r\n        this.validateLoginStatus();\r\n        document.title = \"Management\";\r\n        this.props.setMenuCode(\"management\");\r\n        this.props.getManagementMenus(this.props.app);\r\n        \r\n    }\r\n\r\n    render() {\r\n\r\n        let entityList = this.props.entitiesData ? this.props.entitiesData.entities : [];\r\n        if (null == entityList) { entityList = []; }\r\n\r\n        const buttonsData = this.getTabMenusData();\r\n\r\n        return (\r\n            <div className=\"section-container\">\r\n                <ContentTitle iconClass=\"fas fa-database\" title={\"Master Data \" + (this.props.entityProperty ?\r\n                        this.props.entityProperty.alias : \"\")}\r\n\r\n                    description=\"manage master data\" />\r\n                <div className=\"management-container\">\r\n                    <Tab tabsData={buttonsData} />\r\n                    {this.props.entityProperty? \r\n                    <EntityList currentPage={this.state.currentPage}\r\n                        app={this.props.app}\r\n                        getEntityInPage={this.getEntityInPage}\r\n                        entityConfig={this.props.entitiesData.entityConfig}\r\n                        entitiesData={this.props.entitiesData}\r\n                        managedEntity={this.props.managedEntity}\r\n                        getEntityById={this.getEntityById}\r\n                        removeManagedEntity={this.removeManagedEntity}\r\n                        updateEntity={this.updateEntity}\r\n                        entityProperty={this.props.entityProperty}\r\n                    /> :<CenterLoading />}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    //console.log(state);\r\n    return {\r\n        entitiesData: state.managementState.entitiesData,\r\n        managedEntity: state.managementState.managedEntity,\r\n        entityProperty: state.managementState.entityProperty,\r\n        entityConfigList: state.managementState.managementMenus\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    getEntities: (request, app) => dispatch(actions.getEntityList(request, app)),\r\n    getEntityProperty: (entityName, app) => dispatch(actions.getEntityProperty(entityName, app)),\r\n    getEntityById: (name, id, app) => {\r\n        let action = actions.getEntityById(name, id, app);\r\n        dispatch(action);\r\n    },\r\n    removeManagedEntity: () => dispatch(actions.removeManagedEntity()),\r\n    updateEntity: (request, referer, callback) => dispatch(actions.updateEntity(request, referer, callback)),\r\n    getManagementMenus: (app) => dispatch(actions.getManagementMenus(app))\r\n\r\n})\r\nexport default withRouter(connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(Management))","import React, { Component } from 'react'\r\nimport * as cartCss from './Cart.css'\r\nimport Label from '../container/Label';\r\nimport * as stringUtil from '../../utils/StringUtil'\r\nimport { connect } from 'react-redux'\r\n\r\nclass CartInfo extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            firstLoad: true,\r\n            detail: false\r\n        }\r\n\r\n        this.showCartList = (e) => {\r\n            this.setState({ detail: true })\r\n        }\r\n        this.hideCartList = (e) => {\r\n            this.setState({ detail: false })\r\n        }\r\n        this.handleClick = (e) => {\r\n            if (this.props.onClick) {\r\n                this.props.onClick();\r\n            }\r\n        }\r\n\r\n        this.caculateTotalPrice = () => {\r\n            let totalPrice = 0;\r\n\r\n            let cart = this.props.cart;\r\n            for (let i = 0; i < cart.length; i++) {\r\n                if (cart[i].product == null) continue;\r\n\r\n                totalPrice += (cart[i].product.price * cart[i].count);\r\n            }\r\n            return stringUtil.beautifyNominal(totalPrice) + \",-\";\r\n        }\r\n    }\r\n\r\n    componentDidUpdate(){\r\n        console.debug(\"Cart Info updated\");\r\n    }\r\n\r\n    render() {\r\n         \r\n        if(!this.props.enableShopping){\r\n            return <></>\r\n        }\r\n\r\n        const cart = this.props.cart;   \r\n        const totalPrice = this.caculateTotalPrice(); \r\n        \r\n        let count = 0;\r\n        for (let i = 0; i < cart.length; i++) {\r\n            const cartItem = cart[i];\r\n            count += cartItem.count\r\n        }\r\n\r\n        return (\r\n            <div onClick={this.handleClick} onMouseOver={this.showCartList} onMouseLeave={this.hideCartList} className=\"cart-info\" >\r\n              \r\n               <CartInfoContent detail={this.state.detail} count={count} totalPrice={totalPrice} />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nfunction CartInfoContent(props) {\r\n    let content;\r\n\r\n    if (props.detail) {\r\n        content = <h3 style={{ paddingLeft: '5px' }}>See Detail</h3>\r\n    } else {\r\n        content = <div>\r\n            <Label text={<span><i className=\"fas fa-shopping-cart\"></i>Listed Product</span>} />\r\n            <span style={{ margin: '5px' }} className=\"quantity-label\">{props.count}</span>\r\n            <span style={{ margin: '5px', color: 'yellow', backgroundColor: 'blue' }} className=\"quantity-label\">{props.totalPrice}</span>\r\n        </div>\r\n    }\r\n\r\n    return content;\r\n}\r\nconst mapDispatchToProps = dispatch => ({ \r\n})\r\nconst mapStateToProps = state => {\r\n    return { \r\n        cart: state.shopState.cart\r\n    }\r\n}\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(CartInfo);","import React, { Component } from 'react';\r\nimport './Header.css'\r\nimport CartInfo from '../../cart/CartInfo';\r\nimport { connect } from 'react-redux'\r\n\r\nclass Header extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.handleClick = () => { }\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <div className=\"App-header\" style={{ color: this.props.applicationProfile.color }}>\r\n                {this.props.showOptionButton ? \r\n                <button style={{position:'fixed', left:'0'}} onClick={this.props.showMenu} className=\"btn\"><i className=\"fa fa-align-justify\"></i>  </button> : \r\n                <button style={{position:'fixed', left:'0'}} onClick={this.props.hideMenu} className=\"btn\"><i className=\"fa fa-angle-double-left\"></i>  </button>}\r\n                <h2>{this.props.applicationProfile.name}</h2>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        applicationProfile: state.userState.applicationProfile,\r\n    }\r\n}\r\n\r\nexport default (connect(\r\n    mapStateToProps\r\n)(Header));","import React, { Component } from 'react'\r\n\r\nclass Alert extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.onOk = (e) => {\r\n             \r\n            if (this.props.onOk) {\r\n                this.props.onOk(e);\r\n            }\r\n        }\r\n        this.onNo = (e) => {\r\n            \r\n            if (this.props.onNo) {\r\n                this.props.onNo(e);\r\n            }\r\n        }\r\n        this.onClose = (e) => {\r\n            if (this.props.onClose) {\r\n                this.props.onClose(e);\r\n            }\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const title = this.props.title ? this.props.title : \"Info\";\r\n        const yesOnly = this.props.yesOnly == true;\r\n        return (\r\n            <>\r\n                <Backdrop />\r\n                <div className=\"modal fade show\" style={{ display: 'block' }} id=\"exampleModalCenter\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalCenterTitle\" aria-hidden=\"true\">\r\n                    <div className=\"modal-dialog modal-dialog-centered\" role=\"document\">\r\n                        <div className=\"modal-content\">\r\n                            <Header title={title} onClose={this.onClose} />\r\n                            <Body content={this.props.message} />\r\n                            <Footer yesOnly={yesOnly} onOk={this.onOk} onNo={this.onNo} />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nfunction Backdrop(props) {\r\n    return (\r\n        <div className=\"modal-backdrop\" style={{backgroundColor: 'rgba(100,100,100,0.7)'}} ></div>\r\n    );\r\n}\r\n\r\nfunction Body(props) {\r\n    return (\r\n        <div className=\"modal-body\"> \r\n            {props.content}\r\n        </div>\r\n    );\r\n}\r\n\r\nfunction Footer(props) {\r\n    return (\r\n        <div className=\"modal-footer\">\r\n            <button type=\"button\"\r\n                onClick={props.onOk} className=\"btn btn-primary\">Ok</button>\r\n            {props.yesOnly ? null : <button type=\"button\"\r\n                onClick={props.onNo} className=\"btn btn-secondary\">No</button>}\r\n        </div>\r\n    )\r\n}\r\n\r\nfunction Header(props) {\r\n    return (<div className=\"modal-header\">\r\n        <h5 className=\"modal-title\" id=\"exampleModalCenterTitle\">{props.title}</h5>\r\n        <button onClick={props.onClose} type=\"button\" className=\"close\">\r\n            <span aria-hidden=\"true\">&times;</span>\r\n        </button>\r\n    </div>)\r\n}\r\n\r\nexport default Alert;","\nimport React, { Component } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\n\nimport Menu from './components/navigation/Menu'\nimport Home from './components/pages/index/Home'\nimport About from './components/pages/about/About'\n\nimport { Route, Link, Switch, withRouter } from 'react-router-dom'\nimport * as actions from './redux/actionCreators'\nimport { connect } from 'react-redux'\nimport Catalog from './components/pages/catalog/Catalog'\nimport Login from './components/pages/login/Login'\nimport Dashboard from './components/pages/dashboard/Dashboard';\nimport * as menus from './constant/Menus'\nimport SupplierList from './components/pages/supplier_list/SupplierList';\nimport Loader from './components/messages/Loader';\nimport Footer from './components/layout/footer/Footer';\nimport SockJsClient from 'react-stomp';\nimport ChatRoom from './components/pages/chat_room/ChatRoom';\nimport CartDetail from './components/cart/CartDetail';\nimport Management from './components/pages/management/Management';\nimport Header from './components/layout/header/Header';\nimport * as url from './constant/Url';\nimport Alert from './components/messages/Alert';\nimport CartInfo from './components/cart/CartInfo';\n\nconst blankFunc = function (e) { };\n\nclass App extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      menus: [],\n      detailMode: false,\n      menuCode: '',\n      loading: false,\n      loadingPercentage: 0,\n      requestId: null,\n      enableShopping: false,\n      mainAppUpdated: new Date(),\n      hideSidebar: true\n    };\n\n    this.loadings = 0;\n\n    this.alertCallback = {\n      title: \"Info\",\n      message: \"Info\",\n      yesOnly: false,\n      onOk: () => { },\n      onNo: () => { }\n    }\n\n    this.setDetailMode = (detailMode) => {\n      this.setState({ detailMode: detailMode });\n    }\n\n    this.setMenuCode = (code) => {\n      this.setState({ menuCode: code });\n    }\n\n    this.refresh = () => {\n      this.setState({ mainAppUpdated: new Date() });\n    }\n\n    this.setEnableShopping = (val) => {\n      this.setState({ enableShopping: val })\n    }\n\n    this.logout = () => {\n      const app = this;\n      this.confirmDialog(\"Are you sure to logout?\",\n        function (e) {\n          app.props.performLogout(app);\n        }, blankFunc);\n    }\n\n    this.handleMenuCLick = (menu) => {\n\n      switch (menu.code) {\n\n        case menus.LOGOUT:\n          this.logout();\n          break;\n        default:\n          break;\n      }\n\n    }\n\n    this.requestAppId = () => {\n      this.props.requestAppId(this);\n    }\n\n    this.incrementLoadings = function () {\n      this.loadings++;\n    }\n\n    this.decrementLoadings = function () {\n      this.loadings--;\n      if (this.loadings < 0) {\n        this.loadings = 0;\n      }\n    }\n\n    this.startLoading = (realtime) => {\n      this.incrementLoadings();\n      this.setState({ loading: true, realtime: realtime });\n    }\n\n    this.endLoading = () => {\n      this.decrementLoadings();\n      if (this.loadings == 0) {\n        this.setState({ loading: false, loadingPercentage: 0 });\n      }\n\n    }\n\n    this.handleMessage = (msg) => {\n      let percentage = Math.floor(msg.percentage);\n      if (msg.percentage < 0 || msg.percentage > 100) {\n        this.endLoading();\n      }\n      this.setState({ loadingPercentage: percentage });\n    }\n\n    this.mainContent = () => {\n      return (<>\n        <Switch>\n          <Route exact path=\"/\" render={\n            (renderProps) =>\n              <Home app={this} applicationProfile={this.props.applicationProfile} setMenuCode={this.setMenuCode} />\n          } />\n          <Route exact path=\"/home\" render={\n            (renderProps) =>\n              <Home app={this} applicationProfile={this.props.applicationProfile} setMenuCode={this.setMenuCode} />\n          } />\n          <Route exact path=\"/suppliers\" render={\n            (renderProps) =>\n              <SupplierList app={this} setMenuCode={this.setMenuCode} />\n          } />\n          <Route exact path=\"/chatroom\" render={\n            (renderProps) =>\n              <ChatRoom app={this} setMenuCode={this.setMenuCode} />\n          } />\n          <Route exact path=\"/about\" render={\n            (renderProps) =>\n              <About app={this} applicationProfile={this.props.applicationProfile} setMenuCode={this.setMenuCode} />\n          }></Route>\n          <Route exact path=\"/catalog\" render={\n            (renderProps) =>\n              <Catalog\n                app={this}\n                enableShopping={this.state.enableShopping}\n                setMenuCode={this.setMenuCode}\n                setDetailMode={this.setDetailMode} detailMode={this.state.detailMode} />\n\n          }></Route>\n          <Route exact path=\"/cart\" render={\n            (renderProps) => <CartDetail enableShopping={this.state.enableShopping} app={this} setMenuCode={this.setMenuCode} />\n\n          }></Route>\n          <Route exact path=\"/login\" render={\n            (renderProps) => <Login setMenuCode={this.setMenuCode} app={this} />\n\n          }></Route>\n          {/* ///////////authenticated//////////// */}\n          <Route exact path=\"/dashboard\" render={\n            (renderProps) =>\n              <Dashboard app={this} loginStatus={this.props.loginStatus} setMenuCode={this.setMenuCode} />\n\n          }></Route>\n          <Route exact path=\"/management\" render={\n            (renderProps) =>\n              <Management app={this} loginStatus={this.props.loginStatus} setMenuCode={this.setMenuCode} />\n\n          }></Route>\n        </Switch>\n\n      </>);\n    }\n\n    this.alertDialog = (message, title, yesOnly, onOk, onNo) => {\n\n      this.alertCallback.yesOnly = yesOnly;\n      this.alertCallback.onOk = onOk;\n      this.alertCallback.onNo = onNo;\n      this.alertCallback.message = message;\n      this.alertCallback.title = title;\n      this.setState({ showInfo: true })\n\n    }\n\n    this.infoDialog = (message) => {\n      this.alertDialog(message, \"Info\", true, blankFunc, blankFunc);\n    }\n\n    this.confirmDialog = (message, onOk, onNo) => {\n      this.alertDialog(message, \"Confirmation\", false, onOk, onNo);\n    }\n\n  }\n\n  componentDidUpdate() {\n    if (this.props.requestId != this.state.requestId) {\n      this.setState({ requestId: this.props.requestId });\n      this.props.refreshLogin();\n\n    }\n\n    if (this.props.applicationProfile) {\n      this.updateIcon(this.props.applicationProfile);\n    }\n  }\n\n  updateIcon(profile) {\n    if(profile.iconUrl){\n      let link = document.querySelector('link[rel=\"shortcut icon\"]') ||\n        document.querySelector('link[rel=\"icon\"]');\n      if (!link) {\n        link = document.createElement('link');\n        link.id = 'favicon';\n        link.rel = 'shortcut icon';\n        document.head.appendChild(link);\n      }\n\n      link.href = url.baseImageUrl + '/' + profile.iconUrl;\n    }\n  }\n\n  componentDidMount() {\n    this.requestAppId();\n    this.setState({ loadingPercentage: 0 });\n  }\n\n  setMenus() {\n    const additionalMenus = this.props.menus ? this.props.menus : [];\n    const menus = new Array();\n    for (let i = 0; i < additionalMenus.length; i++) {\n\n      const menu = additionalMenus[i];\n      const isNotAuthenticated = this.props.loginStatus != true && menu.authenticated == true;\n      const isShoppingDisabled = !this.state.enableShopping && menu.code == 'cart';\n\n      if (isNotAuthenticated) { continue; } \n      if (isShoppingDisabled) { continue; }\n\n      menus.push(menu);\n    }\n\n    return menus;\n\n  }\n\n  render() {\n\n    if (!this.state.requestId) {\n      return (<Loader realtime={false} text=\"Please wait...\" type=\"loading\" />)\n    }\n\n    const menus = this.setMenus(); \n    const usedHost = url.contextPath();\n    const applicationProfile = this.props.applicationProfile;\n    const isHideSidebar = this.state.hideSidebar == true;\n    const contentClass = isHideSidebar ? 'col-12' : 'col-10';\n    const toggleButtonIconClass = isHideSidebar ? 'fa fa-align-justify' : 'fa fa-angle-double-left';\n\n    return (\n      <div className=\"App\">\n        <Loading realtime={this.state.realtime} loading={this.state.loading} loadingPercentage={this.state.loadingPercentage} />\n        <AlertComponent showInfo={this.state.showInfo} alertData={this.alertCallback} hideInfo={() => this.setState({ showInfo: false })} />\n        <CartInfo mainAppUpdated={this.state.mainAppUpdated} enableShopping={this.state.enableShopping} />\n\n        <Header showOptionButton={isHideSidebar} hideMenu={() => { this.setState({ hideSidebar: true }) }} showMenu={() => { this.setState({ hideSidebar: false }) }} applicationProfile={applicationProfile} />\n        <div className=\"row\" id=\"main-layout\">\n          {isHideSidebar ? null :\n            <div id=\"main-menu\" className={'col-2'} style={{ backgroundColor: applicationProfile.color }}>\n              <button style={{ float: \"right\", margin: '5px', color: applicationProfile.fontColor }} className=\"btn\" onClick={() => {\n                this.setState({ hideSidebar: true })\n              }} ><i className='fa fa-angle-double-left'></i></button>\n              <Menu alertDialog={this.alertDialog}\n                handleMenuCLick={this.handleMenuCLick}\n                activeCode={this.state.menuCode}\n                menus={menus} />\n            </div>}\n\n          <div id=\"main-content\" className={contentClass}><this.mainContent /></div>\n        </div>\n\n        <SockJsClient url={usedHost + 'realtime-app'} topics={['/wsResp/progress/' + localStorage.getItem(\"requestId\")]}\n          onMessage={(msg) => { this.handleMessage(msg) }}\n          ref={(client) => { this.clientRef = client }} />\n        <Footer applicationProfile={this.props.applicationProfile} />\n\n      </div>\n    )\n  }\n\n}\n\nfunction AlertComponent(props) {\n  if (props.showInfo) {\n    const alertData = props.alertData;\n    return <Alert\n      title={alertData.title}\n      message={alertData.message}\n      onOk={(e) => {\n        if (alertData.onOk) { alertData.onOk(e); }\n        props.hideInfo();\n      }}\n      yesOnly={alertData.yesOnly}\n      onNo={(e) => {\n        if (alertData.onNo) { alertData.onNo(e); }\n        props.hideInfo();\n      }}\n      onClose={(e) => {\n        props.hideInfo();\n      }}\n    />\n  }\n  return null;\n}\n\nfunction Loading(props) {\n  if (props.loading == true) {\n    return (\n      <Loader realtime={props.realtime} progress={props.loadingPercentage} text=\"Please wait...\" type=\"loading\" />\n    );\n  }\n  return null;\n}\n\nconst mapStateToProps = state => {\n  //console.log(state);\n  return {\n    //\n    entities: state.shopState.entities,\n\n    //user\n    loginStatus: state.userState.loginStatus,\n    menus: state.userState.menus,\n    requestId: state.userState.requestId,\n    applicationProfile: state.userState.applicationProfile,\n\n    //\n    cart: state.shopState.cart\n  }\n}\n\nconst mapDispatchToProps = dispatch => ({\n  performLogout: (app) => dispatch(actions.performLogout(app)),\n  requestAppId: (app) => dispatch(actions.requestAppId(app)),\n  refreshLogin: () => dispatch(actions.refreshLoginStatus()),\n  // getProductCatalog: (page) => dispatch(actions.getProductList(page))\n})\n\nexport default withRouter(connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(App))\n","import * as types from './types'\r\n\r\nexport const initState = {\r\n    catalogData: {},\r\n    entities: [],\r\n    entity: {},\r\n    categories: [],\r\n    suppliersData: [],\r\n    requestId: null,\r\n    messages: null,\r\n    userAlias: \"anonymous_\" + new Date().getTime(),\r\n    cart: []\r\n\r\n};\r\n\r\nexport const reducer = (state = initState, action) => {\r\n    switch (action.type) {\r\n        case types.FETCH_PRODUCT_LIST:\r\n            return { ...state, catalogData: action.payload };\r\n        case types.FETCH_PRODUCT_DETAIL:\r\n            return { ...state, entity: action.payload.entities[0] };\r\n        case types.REMOVE_SHOP_ENTITY:\r\n            return { ...state, entity: action.payload  /*null*/ };\r\n        case types.FETCH_SUPPLIER_LIST:\r\n            return { ...state, suppliersData: action.payload };\r\n        case types.RESET_SUPPLIERS:\r\n            return { ...state, suppliersData: {} };\r\n        case types.LOAD_MORE_SUPPLIER:\r\n            let currentProduct = state.entity;\r\n            let loadedSupplier = action.payload.entities;\r\n            for (let index = 0; index < loadedSupplier.length; index++) {\r\n                currentProduct.suppliers.push(loadedSupplier[index]);\r\n            }\r\n            console.info(\"additinal suppliers: \", currentProduct.suppliers);\r\n            action.referrer.refresh();\r\n            return { ...state, entity: currentProduct };\r\n        case types.FETCH_PRODUCT_CATEGORIES_ALL:\r\n            return { ...state, categories: action.payload.entities };\r\n        // case types.REQUEST_ID:\r\n\r\n        //     return { ...state, requestId: action.payload.message };\r\n        case types.SEND_MESSAGE:\r\n            return { ...state, messages: action.payload.entities, userAlias: action.payload.username };\r\n        case types.STORE_MESSAGE:\r\n            return { ...state, messages: action.payload.entities };\r\n        case types.GET_MESSAGE:\r\n            return { ...state, messages: action.payload.entities };\r\n        case types.UPDATE_CART:\r\n            if (action.payload.app) {\r\n                action.payload.app.refresh();\r\n            }\r\n            return { ...state, cart: action.payload.cart };\r\n\r\n       \r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default reducer;","\r\n\r\nexport const menus = [\r\n  {\r\n    code:\"home\",\r\n    name:\"Home\",\r\n    url:\"home\",\r\n    menuClass: \"fa fa-home\",\r\n    active: false,\r\n    authenticated: false\r\n  } ,\r\n  {\r\n    code:\"catalog\",\r\n    name:\"Catalog\",\r\n    url:\"catalog\",\r\n    menuClass: \"fa fa-store-alt\",\r\n    active: false,\r\n     authenticated: false\r\n  } ,\r\n  {\r\n    code:\"about\",\r\n    name:\"About\",\r\n    url:\"about\",\r\n    menuClass: \"fa fa-address-book\",\r\n    active: false,\r\n    authenticated: false\r\n  } ,\r\n  {\r\n    code:\"supplierlist\",\r\n    name:\"Our Supplier\",\r\n    url:\"suppliers\",\r\n    menuClass: \"fas fa-warehouse\",\r\n    active: false,\r\n    authenticated: false\r\n  }, \r\n  {\r\n    code:\"chatroom\",\r\n    name:\"Chat Room\",\r\n    url:\"chatroom\",\r\n    menuClass: \"fas fa-comments\",\r\n    active: false,\r\n    authenticated: false\r\n  } ,\r\n  {\r\n    code:\"cart\",\r\n    name:\"My Cart\",\r\n    url:\"cart\",\r\n    menuClass: \"fa fa-shopping-cart\",\r\n    active: false,\r\n    authenticated: false\r\n  } ,\r\n  {\r\n    code:\"login\",\r\n    name:\"Login\",\r\n    url:\"login\",\r\n    menuClass: \"fas fa-sign-in-alt\",\r\n    active: false,\r\n    authenticated: false\r\n  }, \r\n  {\r\n    code:\"dashboard\",\r\n    name:\"Dashboard\",\r\n    url:\"dashboard\",\r\n    menuClass: \"fas fa-tachometer-alt\",\r\n    active: false,\r\n    authenticated: true\r\n  }, \r\n  {\r\n    code:\"management\",\r\n    name:\"Management\",\r\n    url:\"management\",\r\n    menuClass: \"fa fa-database\",\r\n    active: false,\r\n    authenticated: true\r\n  }, \r\n  {\r\n    code:\"logout\",\r\n    name:\"Logout\",\r\n    url:\"#\",\r\n    menuClass: \"fas fa-sign-out-alt\",\r\n    active: false,\r\n    authenticated: true\r\n  }\r\n];\r\n","import * as types from './types'\r\nimport * as menus from '../utils/HardCodedEntites'\r\nimport * as menuCodes from '../constant/Menus'\r\n\r\nexport const initState = {\r\n    loginKey: null,\r\n    loginStatus: false,\r\n    loginFailed: false,\r\n    menus: menus.menus,\r\n    loggedUser: null,\r\n    loginAttempt: false,\r\n    requestId: null,\r\n    applicationProfile: {},\r\n};\r\n\r\nexport const reducer = (state = initState, action) => {\r\n    /*\r\n        ========setting menu========\r\n    */\r\n    let updatedMenus = new Array();\r\n    if (action.payload) {\r\n\r\n        let loggedIn = action.payload && action.payload.loginStatus == true;\r\n        for (let index = 0; index < menus.menus.length; index++) {\r\n            const menu = menus.menus[index];\r\n            if (loggedIn && menu.code == menuCodes.LOGIN) { continue; }\r\n\r\n            if (menu.authenticated == false) {\r\n                updatedMenus.push(menu);\r\n            } else {\r\n                if (loggedIn) { updatedMenus.push(menu); }\r\n            }\r\n        }\r\n    }\r\n\r\n    switch (action.type) {\r\n        case types.REQUEST_ID:\r\n            result = { ...state, requestId: action.payload.message, applicationProfile: action.payload.applicationProfile };\r\n             \r\n            localStorage.setItem('requestId', result.requestId);\r\n            if (action.payload.loggedIn != true) {\r\n\r\n                result.loginStatus = false;\r\n                result.loggedUser = null;\r\n                localStorage.removeItem(\"loginKey\");\r\n                localStorage.removeItem(\"loggedUser\");\r\n            } else {\r\n\r\n                if (action.payload.sessionData) {\r\n\r\n                    result.loggedUser = action.payload.sessionData.user;\r\n                    result.loginStatus = action.payload.loggedIn;\r\n                    result.loginKey = localStorage.getItem('loginKey');\r\n                    localStorage.setItem(\"loggedUser\", JSON.stringify(result.loggedUser));\r\n                }else {\r\n                    result.loginStatus = false;\r\n                    result.loggedUser = null;\r\n                    localStorage.removeItem(\"loginKey\");\r\n                    localStorage.removeItem(\"loggedUser\");\r\n                }\r\n            } \r\n\r\n            console.debug(\"o o o result.loginStatus:\", result.loginStatus)\r\n            //  action.payload.referer.refresh();\r\n\r\n            return result;\r\n        case types.DO_LOGIN:\r\n            let result = {\r\n                ...state,\r\n                loginAttempt: true,\r\n                loginStatus: action.payload.loginStatus,\r\n                loginKey: action.payload.loginKey,\r\n                loginFailed: action.payload.loginStatus == false,\r\n                menus: updatedMenus,\r\n                loggedUser: action.payload.loggedUser\r\n            };\r\n\r\n            if (result.loginStatus == true) {\r\n                localStorage.setItem(\"loginKey\", result.loginKey);\r\n                // localStorage.setItem(\"loggedUser\", JSON.stringify(result.loggedUser));\r\n            }\r\n\r\n            return result;\r\n        case types.DO_LOGOUT:\r\n            result = {\r\n                ...state,\r\n                loginStatus: action.payload.loginStatus,\r\n                menus: updatedMenus,\r\n                loggedUser: null\r\n            };\r\n            localStorage.removeItem(\"loginKey\");\r\n            localStorage.removeItem(\"loggedUser\");\r\n            return result;\r\n        case types.REFRESH_LOGIN:\r\n            result = {\r\n                ...state,\r\n                loginStatus: action.payload.loginStatus,\r\n                menus: updatedMenus,\r\n                loggedUser: action.payload.loggedUser,\r\n                requestId: action.payload.requestId,\r\n            };\r\n            return result;\r\n        case types.GET_LOGGED_USER:\r\n            result = {\r\n                ...state,\r\n                loggedUser: action.payload.data\r\n            };\r\n            localStorage.setItem(\"loggedUser\", JSON.stringify(action.payload))\r\n            return result;\r\n        default:\r\n            if (action.payload && action.payload.loginStatus != null)\r\n                return { ...state, menus: updatedMenus };\r\n            else {\r\n                return { ...state };\r\n            }\r\n    }\r\n}\r\n\r\nexport default reducer;","import * as types from './types'\r\nimport { nullLiteral } from '@babel/types';\r\n\r\nexport const initState = {\r\n    productFlowStock: null,\r\n    products: null,\r\n    transactionData: null,\r\n    successTransaction: false,\r\n    customersData: null,\r\n    productsData: null,\r\n    cashflowInfoOut: null,\r\n    cashflowInfoIn: null,\r\n    cashflowDetail: null,\r\n    productSalesData: null,\r\n    productSalesDetails: null,\r\n    transactionYears: [new Date().getFullYear(), new Date().getFullYear()]\r\n};\r\n\r\nexport const reducer = (state = initState, action) => {\r\n\r\n    //update trx year\r\n    if (action != null && action.payload != null && action.payload.transactionYears != null) {\r\n        state.transactionYears = action.payload.transactionYears;\r\n    }\r\n\r\n    switch (action.type) {\r\n\r\n        case types.GET_STOCK_INFO:\r\n            let result = { ...state, productFlowStock: action.payload.entities[0] };\r\n            return result;\r\n\r\n        case types.SUBMIT_TRX_PURCHASE:\r\n            return { ...state, transactionData: action.payload.transaction, successTransaction: true };\r\n\r\n        case types.SUBMIT_TRX_SUPPLY:\r\n            return { ...state, transactionData: action.payload.transaction, successTransaction: true };\r\n\r\n        case types.RESET_TRX_PURCHASE:\r\n            return {\r\n                ...state, productFlowStock: null,\r\n                transactionData: null, successTransaction: false,\r\n                customersData: null, productsData: null\r\n            };\r\n\r\n        case types.FETCH_CUSTOMER_LIST:\r\n            return { ...state, customersData: action.payload.entities };\r\n        case types.RESET_CUSTOMERS:\r\n            return { ...state, customersData: null };\r\n        case types.FETCH_PRODUCT_LIST_TRX:\r\n            return { ...state, productsData: action.payload.entities };\r\n        case types.RESET_PRODUCTS:\r\n            return { ...state, productsData: null };\r\n\r\n        case types.GET_CASHFLOW_INFO:\r\n            result = state;\r\n\r\n            if (action.payload.entity.module == \"OUT\")\r\n                result.cashflowInfoOut = action.payload.entity;\r\n            if (action.payload.entity.module == \"IN\")\r\n                result.cashflowInfoIn = action.payload.entity;\r\n\r\n            return result;\r\n\r\n        case types.GET_CASHFLOW_DETAIL:\r\n            return { ...state, cashflowDetail: action.payload };\r\n        case types.GET_PRODUCT_SALES:\r\n            let currentProductSalesData = action.payload;\r\n            if (action.loadMore == true) {\r\n                currentProductSalesData = state.productSalesData;\r\n                let loadedProductList = action.payload.entities;\r\n                for (let i = 0; i < loadedProductList.length; i++) {\r\n                    currentProductSalesData.entities.push(loadedProductList[i]);\r\n                }\r\n            }\r\n            console.log(\"will update currentProductSalesData: \", currentProductSalesData.entities.length);\r\n            result = { ...state, productSalesData: currentProductSalesData };\r\n            action.referrer.refresh();\r\n            return result;\r\n        case types.GET_PRODUCT_STOCKS:\r\n            return { ...state, products: action.payload.entities };\r\n        case types.RESET_PRODUCT_STOCKS:\r\n            return { ...state, products: null };\r\n        case types.GET_PRODUCT_SALES_DETAIL:\r\n            return { ...state, productSalesDetails: action.payload };\r\n        default:\r\n            return { ...state };\r\n    }\r\n}\r\n\r\nexport default reducer;","import * as types from './types'\r\n\r\nexport const initState = {\r\n\r\n    entitiesData: {\r\n        entityConfig: null,\r\n    },\r\n    managedEntity: null,\r\n    entityProperty: null,\r\n    managementMenus: [],\r\n\r\n};\r\n\r\nexport const reducer = (state = initState, action) => {\r\n    switch (action.type) {\r\n        case types.GET_ENTITY:\r\n\r\n            return { ...state, entitiesData: action.payload };\r\n        case types.GET_ENTITY_BY_ID:\r\n\r\n            return { ...state, managedEntity: action.payload.entities[0] };\r\n        case types.UPDATE_ENTITY:\r\n\r\n            return state;\r\n        case types.REMOVE_MANAGED_ENTITY:\r\n\r\n            return { ...state, managedEntity: null };\r\n        case types.GET_ENTITY_PROPERTY:\r\n\r\n            return { ...state, entityProperty: action.payload };\r\n        case types.GET_MANAGEMENT_MENUS:\r\n\r\n            return { ...state, managementMenus: action.payload.generalList };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default reducer;","import * as shopReducer from \"./shopReducer\"\r\nimport * as userReducer from \"./userReducer\"\r\nimport * as transactionReducer from \"./transactionReducer\"\r\nimport * as managementReducer from \"./managementReducer\"\r\n\r\nimport { combineReducers } from \"redux\";\r\n\r\nexport const rootReducer = combineReducers(\r\n    {\r\n        shopState: shopReducer.reducer,\r\n        userState: userReducer.reducer,\r\n        transactionState: transactionReducer.reducer,\r\n        managementState: managementReducer.reducer\r\n    }\r\n);\r\n\r\nexport const initialState = {\r\n    shopState: shopReducer.initState,\r\n    userState: userReducer.initState,\r\n    transactionState: transactionReducer.initState,\r\n    managementState: managementReducer.initState\r\n}\r\n\r\nexport default rootReducer;","\r\nexport const commonAuthorizedHeader = () => {\r\n    return {\r\n        'Content-Type': 'application/json', \r\n        'requestId':  getRequestId(),//'localStorage.getItem(\"requestId\")',\r\n        'loginKey': localStorage.getItem('loginKey')\r\n    }\r\n};\r\n\r\nexport const getRequestId = () => {\r\n    return localStorage.getItem(\"requestId\");// document.getElementById(\"requestId\").value;\r\n}","import * as common from './Common'\r\nimport * as types from '../redux/types'\r\n\r\nconst POST_METHOD = \"post\";\r\n\r\nexport const performLoginMiddleware = store => next => action => {\r\n    if (!action.meta || action.meta.type !== types.DO_LOGIN) {\r\n        return next(action);\r\n    }\r\n    const app = action.meta.app;\r\n    fetch(action.meta.url, {\r\n        method: POST_METHOD, body: JSON.stringify(action.payload), headers: common.commonAuthorizedHeader()\r\n    })\r\n        .then(response => { return Promise.all([response.json(), response]); })\r\n        .then(([responseJson, response]) => {\r\n\r\n            let loginKey = \"\";\r\n            let loginSuccess = false;\r\n\r\n            if (responseJson.code != null && responseJson.code == \"00\") {\r\n                for (var pair of response.headers.entries()) {\r\n                    if (pair[0] == \"loginkey\") {\r\n                        loginKey = pair[1];\r\n                        break;\r\n                    }\r\n                }\r\n                console.log(\"loginKey: \", loginKey);\r\n                loginSuccess = true;\r\n\r\n            }\r\n            let newAction = Object.assign({}, action, {\r\n                payload: {\r\n                    loginStatus: loginSuccess,\r\n                    loginKey: loginKey,\r\n                    loggedUser: responseJson.entity\r\n                }\r\n            });\r\n            delete newAction.meta;\r\n            store.dispatch(newAction);\r\n        })\r\n        .catch(err => { console.log(err) })\r\n        .finally(param => {\r\n            app.endLoading();  \r\n        });\r\n\r\n}\r\n\r\nexport const requestAppIdMiddleware = store => next => action => {\r\n    if (!action.meta || action.meta.type !== types.REQUEST_ID) { return next(action); }\r\n\r\n    let headers = common.commonAuthorizedHeader(); \r\n\r\n    fetch(action.meta.url, {\r\n        method: POST_METHOD, body: JSON.stringify(action.payload),\r\n        headers: headers\r\n    }).then(response => response.json())\r\n        .then(data => {\r\n            console.debug(\"Request App Id Middleware Response:\", data);\r\n            \r\n            if (data.code != \"00\") {\r\n                alert(\"Error requesting app ID\");\r\n                return;\r\n            }\r\n\r\n            let newAction = Object.assign({}, action, { payload: {loginStatus: data.loggedIn, ...data }});\r\n            delete newAction.meta;\r\n            store.dispatch(newAction);\r\n        })\r\n        .catch(err => console.log(err)).finally(param => action.meta.app.endLoading());\r\n}\r\n\r\nexport const getLoggedUserMiddleware = store => next => action => {\r\n    if (!action.meta || action.meta.type !== types.GET_LOGGED_USER) { return next(action); }\r\n\r\n    let headers = common.commonAuthorizedHeader(); \r\n\r\n    fetch(action.meta.url, {\r\n        method: POST_METHOD, body: JSON.stringify(action.payload),\r\n        headers: headers\r\n    }).then(response => response.json())\r\n        .then(data => {\r\n            console.debug(\"getLoggedUserMiddleware Response:\", data);\r\n            \r\n            if (!data) {\r\n                alert(\"Error performing request\");\r\n                return;\r\n            }\r\n\r\n            let newAction = Object.assign({}, action, { payload: { data }});\r\n            delete newAction.meta;\r\n            store.dispatch(newAction);\r\n        })\r\n        .catch(err => console.log(err)).finally(param =>{ \r\n            action.meta.app.endLoading();\r\n            action.meta.app.refresh();\r\n        });\r\n}\r\n\r\nexport const refreshLoginStatusMiddleware = store => next => action => {\r\n    if (!action.meta || action.meta.type !== types.REFRESH_LOGIN) {\r\n        return next(action);\r\n    }\r\n\r\n    let loggedUser = null;\r\n    if (localStorage.getItem(\"loggedUser\")) {\r\n        loggedUser = JSON.parse(localStorage.getItem(\"loggedUser\"));\r\n    }\r\n\r\n    let newAction = Object.assign({}, action, {\r\n        payload: {\r\n            loginStatus: loggedUser ? true : false,\r\n            loginKey: localStorage.getItem(\"loginKey\"),\r\n            loggedUser: loggedUser,\r\n            requestId: common.getRequestId(), //TODO: no hard code\r\n        }\r\n    });\r\n    delete newAction.meta;\r\n    store.dispatch(newAction);\r\n\r\n}\r\n\r\nexport const performLogoutMiddleware = store => next => action => {\r\n    if (!action.meta || action.meta.type !== types.DO_LOGOUT) {\r\n        return next(action);\r\n    }\r\n    const app = action.meta.app;\r\n\r\n    fetch(action.meta.url, {\r\n        method: POST_METHOD, body: JSON.stringify(action.payload),\r\n        headers: { 'Content-Type': 'application/json', 'requestId': localStorage.getItem(\"requestId\"), 'loginKey': localStorage.getItem(\"loginKey\") }\r\n    })\r\n        .then(response => { return Promise.all([response.json(), response]); })\r\n        .then(([responseJson, response]) => {\r\n            let logoutSuccess = false;\r\n            if (responseJson.code == \"00\") {\r\n                logoutSuccess = true;\r\n            }else{\r\n                alert(\"Logout Failed\");\r\n            }\r\n\r\n            let newAction = Object.assign({}, action, {\r\n                payload: {\r\n                    loginStatus: !logoutSuccess\r\n                }\r\n            });\r\n            delete newAction.meta;\r\n            store.dispatch(newAction);\r\n        })\r\n        .catch(err => { console.log(err) })\r\n        .finally(param => app.endLoading());\r\n\r\n}","import * as common from './Common'\r\nimport * as types from '../redux/types'\r\n\r\nconst POST_METHOD = \"post\";\r\n\r\n\r\nexport const getEntitiesWithCallbackMiddleware = store => next => action => {\r\n    if (!action.meta || action.meta.type !== types.GET_ENTITY_WITH_CALLBACK) { return next(action); }\r\n\r\n    fetch(action.meta.url, {\r\n        method: POST_METHOD, body: JSON.stringify(action.payload),\r\n        headers: common.commonAuthorizedHeader()\r\n    })\r\n        .then(response => response.json())\r\n        .then(data => {\r\n            if (data.entities == null || data.entities.length == 0) {\r\n                alert(\"Data not found!\");\r\n                return;\r\n            }\r\n\r\n            action.meta.callback(data, action.meta.referer);\r\n\r\n            let newAction = Object.assign({}, action, {\r\n                payload: data\r\n            });\r\n            delete newAction.meta;\r\n            store.dispatch(newAction);\r\n        })\r\n        .catch(err => console.log(err))\r\n        .finally(param => action.meta.app.endLoading());\r\n}\r\n\r\nexport const updateEntityMiddleware = store => next => action => {\r\n    if (!action.meta || action.meta.type !== types.UPDATE_ENTITY) { return next(action); }\r\n\r\n    fetch(action.meta.url, {\r\n        method: POST_METHOD, body: JSON.stringify(action.payload),\r\n        headers: common.commonAuthorizedHeader()\r\n    })\r\n        .then(response => response.json())\r\n        .then(data => {\r\n            console.debug(\"Response updateEntityMiddleware:\", data);\r\n            if (data.code != \"00\") {\r\n                alert(\"Error Update Entity!\");\r\n                return;\r\n            }\r\n            alert(\"Update Success!\");\r\n            const callback = action.meta.callback;\r\n            const referer = action.meta.referer;\r\n            let newAction = Object.assign({}, action, { payload: data });\r\n            delete newAction.meta;\r\n            store.dispatch(newAction);\r\n            callback(referer);\r\n        })\r\n        .catch(err => console.log(err))\r\n        .finally(param => action.meta.app.endLoading());\r\n}\r\n\r\nexport const getEntityByIdMiddleware = store => next => action => {\r\n    if (!action.meta || action.meta.type !== types.GET_ENTITY_BY_ID) { return next(action); }\r\n\r\n    fetch(action.meta.url, {\r\n        method: POST_METHOD, body: JSON.stringify(action.payload),\r\n        headers: common.commonAuthorizedHeader()\r\n    })\r\n        .then(response => response.json())\r\n        .then(data => {\r\n            console.debug(\"Response:\", data);\r\n            if (data.entities == null || data.entities.length == 0) {\r\n                alert(\"Data not found!\");\r\n                return;\r\n            }\r\n            let newAction = Object.assign({}, action, {\r\n                payload: data\r\n            });\r\n            delete newAction.meta;\r\n            store.dispatch(newAction);\r\n        })\r\n        .catch(err => console.log(err))\r\n        .finally(param => action.meta.app.endLoading());\r\n}\r\n\r\nexport const getEntityListMiddleware = store => next => action => {\r\n    if (!action.meta || action.meta.type !== types.GET_ENTITY) { return next(action); }\r\n\r\n    fetch(action.meta.url, {\r\n        method: POST_METHOD, body: JSON.stringify(action.payload),\r\n        headers: common.commonAuthorizedHeader()\r\n    })\r\n        .then(response => response.json())\r\n        .then(data => {\r\n            console.debug(\"Response:\", data);\r\n            if (data.entities == null ) {\r\n                data.entities = [];\r\n            }\r\n            data.entityConfig = action.meta.entityConfig;\r\n            let newAction = Object.assign({}, action, {\r\n                payload: data\r\n            });\r\n            delete newAction.meta;\r\n            store.dispatch(newAction);\r\n        })\r\n        .catch(err => console.log(err))\r\n        .finally(param => action.meta.app.endLoading());\r\n}\r\n\r\nexport const getEntityPropertyMiddleware = store => next => action => {\r\n    if (!action.meta || action.meta.type !== types.GET_ENTITY_PROPERTY) { return next(action); }\r\n\r\n    fetch(action.meta.url, {\r\n        method: POST_METHOD, body: JSON.stringify(action.payload),\r\n        headers: common.commonAuthorizedHeader()\r\n    })\r\n        .then(response => response.json())\r\n        .then(data => {\r\n            if(data == null){\r\n                alert(\"Error requesting EntityProperty\");\r\n                return;\r\n            }\r\n            console.debug(\"Response:\", data);  \r\n            let newAction = Object.assign({}, action, {\r\n                payload: data\r\n            });\r\n            delete newAction.meta;\r\n            store.dispatch(newAction);\r\n        })\r\n        .catch(err => console.log(err))\r\n        .finally(param => action.meta.app.endLoading());\r\n}\r\n\r\nexport const getManagementMenusMiddleware = store => next => action => {\r\n    if (!action.meta || action.meta.type !== types.GET_MANAGEMENT_MENUS) { return next(action); }\r\n\r\n    fetch(action.meta.url, {\r\n        method: POST_METHOD, body: JSON.stringify(action.payload),\r\n        headers: common.commonAuthorizedHeader()\r\n    })\r\n        .then(response => response.json())\r\n        .then(data => {\r\n            if(data == null){\r\n                alert(\"Error requesting getManagementMenus\");\r\n                return;\r\n            }\r\n            console.debug(\"Response:\", data);  \r\n            let newAction = Object.assign({}, action, {\r\n                payload: data\r\n            });\r\n            delete newAction.meta;\r\n            store.dispatch(newAction);\r\n        })\r\n        .catch(err => console.log(err))\r\n        .finally(param => action.meta.app.endLoading());\r\n}\r\n\r\nexport const removeManagedEntityMiddleware = store => next => action => {\r\n    if (!action.meta || action.meta.type !== types.REMOVE_MANAGED_ENTITY) { return next(action); }\r\n    let newAction = Object.assign({}, action, { payload: action.payload });\r\n    delete newAction.meta;\r\n    store.dispatch(newAction);\r\n}\r\n \r\n","import * as common from './Common'\r\nimport * as types from '../redux/types'\r\n\r\nconst POST_METHOD = \"post\"; \r\n\r\nexport const getMessagesMiddleware = store => next => action => {\r\n    if (!action.meta || action.meta.type !== types.GET_MESSAGE) { return next(action); }\r\n    fetch(action.meta.url, {\r\n        method: POST_METHOD, body: JSON.stringify(action.payload),\r\n        headers: { 'Content-Type': 'application/json', 'requestId': localStorage.getItem(\"requestId\") }\r\n    }).then(response => response.json())\r\n        .then(data => {\r\n            console.debug(\"sendChatMessageMiddleware Response:\", data);\r\n            let newAction = Object.assign({}, action, { payload: data });\r\n            delete newAction.meta;\r\n            store.dispatch(newAction);\r\n        })\r\n        .catch(err => console.log(err)).finally(param => action.meta.app.endLoading());\r\n}\r\n\r\nexport const sendChatMessageMiddleware = store => next => action => {\r\n    if (!action.meta || action.meta.type !== types.SEND_MESSAGE) { return next(action); }\r\n    fetch(action.meta.url, {\r\n        method: POST_METHOD, body: JSON.stringify(action.payload),\r\n        headers: { 'Content-Type': 'application/json', 'requestId': localStorage.getItem(\"requestId\") }\r\n    }).then(response => response.json())\r\n        .then(data => {\r\n            console.debug(\"sendChatMessageMiddleware Response:\", data);\r\n            data.username = action.payload.username;\r\n            let newAction = Object.assign({}, action, { payload: data });\r\n            delete newAction.meta;\r\n            store.dispatch(newAction);\r\n        })\r\n        .catch(err => console.log(err)).finally(param => action.meta.app.endLoading());\r\n}\r\n\r\nexport const storeChatMessageLocallyMiddleware = store => next => action => {\r\n    if (!action.meta || action.meta.type !== types.STORE_MESSAGE) { return next(action); }\r\n    let newAction = Object.assign({}, action, { payload: action.payload });\r\n    delete newAction.meta;\r\n    store.dispatch(newAction);\r\n} \r\n\r\n","import * as common from './Common'\r\nimport * as types from '../redux/types'\r\n\r\nconst POST_METHOD = \"post\";\r\n\r\nexport const getProductListMiddleware = store => next => action => {\r\n    if (!action.meta || action.meta.type !== types.FETCH_PRODUCT_LIST) {\r\n        return next(action);\r\n    }\r\n\r\n    fetch(action.meta.url, {\r\n        method: POST_METHOD, body: JSON.stringify(action.payload), headers: common.commonAuthorizedHeader()\r\n    })\r\n        .then(response => response.json())\r\n        .then(data => {\r\n            console.debug(\"Response:\", data);\r\n            if (data.entities == null || data.entities.length == 0) {\r\n                alert(\"Data not found!\");\r\n                return;\r\n            }\r\n            let newAction = Object.assign({}, action, {\r\n                payload: data\r\n            });\r\n            delete newAction.meta;\r\n            store.dispatch(newAction);\r\n        })\r\n        .catch(err => console.log(err)).finally(param => action.meta.app.endLoading());\r\n}\r\n\r\nexport const getProductDetailMiddleWare = store => next => action => {\r\n    if (!action.meta || action.meta.type !== types.FETCH_PRODUCT_DETAIL) {\r\n        return next(action);\r\n    }\r\n    const app = action.meta.app;\r\n    fetch(action.meta.url, {\r\n        method: POST_METHOD, body: JSON.stringify(action.payload), headers: common.commonAuthorizedHeader()\r\n    })\r\n        .then(response => response.json())\r\n        .then(data => {\r\n            console.debug(\"Response:\", data);\r\n            if (data.entities == null || data.entities.length == 0) {\r\n                alert(\"Data not found!\");\r\n                return;\r\n            }\r\n            let newAction = Object.assign({}, action, {\r\n                payload: data\r\n            });\r\n            delete newAction.meta;\r\n            store.dispatch(newAction);\r\n        })\r\n        .catch(err => console.log(err))\r\n        .finally(param => app.endLoading());\r\n}\r\n\r\nexport const loadMoreSupplierMiddleware = store => next => action => {\r\n    if (!action.meta || action.meta.type !== types.LOAD_MORE_SUPPLIER) {\r\n        return next(action);\r\n    }\r\n    fetch(action.meta.url, {\r\n        method: POST_METHOD, body: JSON.stringify(action.payload), headers: common.commonAuthorizedHeader()\r\n    })\r\n        .then(response => response.json())\r\n        .then(data => {\r\n            console.debug(\"Response:\", data);\r\n            if (data.entities == null || data.entities.length == 0) {\r\n                alert(\"Data not found!\");\r\n                return;\r\n            }\r\n            let newAction = Object.assign({}, action, {\r\n                payload: data, referrer: action.meta.referrer\r\n            });\r\n            delete newAction.meta;\r\n            store.dispatch(newAction);\r\n        })\r\n        .catch(err => console.log(err))\r\n        .finally(parap => action.meta.referrer.props.app.endLoading());\r\n\r\n}\r\n\r\nexport const removeEntityMiddleware = store => next => action => {\r\n    if (!action.meta || action.meta.type !== types.REMOVE_SHOP_ENTITY) { return next(action); }\r\n    let newAction = Object.assign({}, action, { payload: null });\r\n    delete newAction.meta;\r\n    store.dispatch(newAction);\r\n\r\n}\r\n\r\n\r\nexport const getSupplierListMiddleware = store => next => action => {\r\n    if (!action.meta || action.meta.type !== types.FETCH_SUPPLIER_LIST) { return next(action); }\r\n\r\n    fetch(action.meta.url, {\r\n        method: POST_METHOD, body: JSON.stringify(action.payload),\r\n        headers: common.commonAuthorizedHeader()\r\n    })\r\n        .then(response => response.json())\r\n        .then(data => {\r\n            console.debug(\"Response:\", data);\r\n            if (data.entities == null || data.entities.length == 0) {\r\n                alert(\"Data not found!\");\r\n                return;\r\n            }\r\n            let newAction = Object.assign({}, action, {\r\n                payload: data\r\n            });\r\n            delete newAction.meta;\r\n            store.dispatch(newAction);\r\n        })\r\n        .catch(err => console.log(err))\r\n        .finally(param => action.meta.app.endLoading());\r\n}\r\n \r\n\r\nexport const getAllProductCategoriesMiddleware = store => next => action => {\r\n    if (!action.meta || action.meta.type !== types.FETCH_PRODUCT_CATEGORIES_ALL) {\r\n        return next(action);\r\n    }\r\n    fetch(action.meta.url, {\r\n        method: POST_METHOD, body: JSON.stringify(action.payload), headers: common.commonAuthorizedHeader()\r\n    })\r\n        .then(response => response.json())\r\n        .then(data => {\r\n            console.debug(\"Response:\", data);\r\n            if (data.entities == null || data.entities.length == 0) {\r\n                alert(\"Data not found!\");\r\n                return;\r\n            }\r\n            let newAction = Object.assign({}, action, {\r\n                payload: data\r\n            });\r\n            delete newAction.meta;\r\n            store.dispatch(newAction);\r\n        })\r\n        .catch(err => console.log(err));\r\n\r\n}\r\n\r\nexport const updateCartMiddleware = store => next => action => {\r\n    if (!action.meta || action.meta.type !== types.UPDATE_CART) { return next(action); }\r\n    let newAction = Object.assign({}, action, { payload: action.payload });\r\n    delete newAction.meta;\r\n    store.dispatch(newAction);\r\n}\r\n\r\n","import { createStore, applyMiddleware } from 'redux'\r\nimport { initialState, rootReducer } from './reducers'\r\nimport * as actionCreator from './actionCreators';\r\nimport * as types from './types';\r\nimport * as userMiddleware from '../middlewares/UserMiddleware'\r\nimport * as managementMiddleware from '../middlewares/ManagementMiddleware'\r\nimport * as realtimeChatMiddleware from '../middlewares/RealtimeChatMiddleware'\r\nimport * as catalogMiddleware from '../middlewares/CatalogMiddleware'\r\nimport * as common from '../middlewares/Common';\r\n\r\nconst commonAuthorizedHeader = () => {\r\n   return common.commonAuthorizedHeader(); \r\n};\r\nconst POST_METHOD = \"POST\";\r\n\r\nexport const configureStore = () => {\r\n    const store = createStore(\r\n        rootReducer,\r\n        initialState,\r\n        applyMiddleware(\r\n            catalogMiddleware.getProductListMiddleware,\r\n            catalogMiddleware.getProductDetailMiddleWare,\r\n            catalogMiddleware.removeEntityMiddleware,\r\n            catalogMiddleware.loadMoreSupplierMiddleware,\r\n            catalogMiddleware.getAllProductCategoriesMiddleware,\r\n            catalogMiddleware.getSupplierListMiddleware,\r\n            catalogMiddleware.updateCartMiddleware,\r\n\r\n            //user related\r\n            userMiddleware.performLoginMiddleware,\r\n            userMiddleware.performLogoutMiddleware,\r\n            userMiddleware.refreshLoginStatusMiddleware,\r\n            userMiddleware.requestAppIdMiddleware, \r\n            userMiddleware.getLoggedUserMiddleware, \r\n\r\n            //transaction\r\n            getStockInfoMiddleware,\r\n            submitPurchaseTransactionMiddleware,\r\n            submitSupplyTransactionMiddleware,\r\n            resetPurchaseTransactionMiddleware,\r\n            getCustomerListMiddleware,\r\n            getProductListTrxMiddleware,\r\n            getCashflowInfoMiddleware,\r\n            getCashflowDetailMiddleware,\r\n            getProductSalesMiddleware,\r\n            resetProductsMiddleware,\r\n            resetSuppliersMiddleware,\r\n            resetCustomersMiddleware,\r\n            getProductStocksMiddleware,\r\n            resetProductStocksMiddleware,\r\n            getProductSalesDetailMiddleware,  \r\n\r\n            /*enntity management*/\r\n            managementMiddleware.getEntityListMiddleware,\r\n            managementMiddleware.getEntityByIdMiddleware,\r\n            managementMiddleware.updateEntityMiddleware,\r\n            managementMiddleware.removeManagedEntityMiddleware, \r\n            managementMiddleware.getEntitiesWithCallbackMiddleware,\r\n            managementMiddleware.getEntityPropertyMiddleware,\r\n            managementMiddleware.getManagementMenusMiddleware,\r\n\r\n            /*realtime chat*/\r\n            realtimeChatMiddleware.sendChatMessageMiddleware,\r\n            realtimeChatMiddleware.storeChatMessageLocallyMiddleware,\r\n            realtimeChatMiddleware.getMessagesMiddleware,\r\n\r\n        )\r\n    );\r\n\r\n    return store;\r\n}\r\n  \r\n \r\nconst getProductStocksMiddleware = store => next => action => {\r\n    if (!action.meta || action.meta.type !== types.GET_PRODUCT_STOCKS) { return next(action); }\r\n    fetch(action.meta.url, {\r\n        method: POST_METHOD, body: JSON.stringify(action.payload),\r\n        headers: commonAuthorizedHeader(),\r\n    }).then(response => response.json())\r\n        .then(data => {\r\n            console.debug(\"getProductStocksMiddleware Response:\", data, \"load more:\", action.meta.loadMore);\r\n            if (data.code != \"00\") {\r\n                alert(\"Data not found\");\r\n                return;\r\n            }\r\n\r\n            let newAction = Object.assign({}, action, { payload: data });\r\n            delete newAction.meta;\r\n            store.dispatch(newAction);\r\n        })\r\n        .catch(err => console.log(err)).finally(param => action.meta.app.endLoading());\r\n}\r\n\r\nconst getProductSalesDetailMiddleware = store => next => action => {\r\n    if (!action.meta || action.meta.type !== types.GET_PRODUCT_SALES_DETAIL) { return next(action); }\r\n    fetch(action.meta.url, {\r\n        method: POST_METHOD, body: JSON.stringify(action.payload),\r\n        headers: { 'Content-Type': 'application/json', 'requestId': localStorage.getItem(\"requestId\"), 'loginKey': localStorage.getItem(\"loginKey\") }\r\n    }).then(response => response.json())\r\n        .then(data => {\r\n            console.debug(\"getProductSalesDetailMiddleware Response:\", data);\r\n            if (data.code != \"00\") {\r\n                alert(\"Server error\");\r\n                return;\r\n            }\r\n\r\n            let newAction = Object.assign({}, action, { payload: data });\r\n            delete newAction.meta;\r\n            store.dispatch(newAction);\r\n        })\r\n        .catch(err => console.log(err)).finally(param => action.meta.app.endLoading());\r\n}\r\n\r\nconst getProductSalesMiddleware = store => next => action => {\r\n    if (!action.meta || action.meta.type !== types.GET_PRODUCT_SALES) { return next(action); }\r\n    fetch(action.meta.url, {\r\n        method: POST_METHOD, body: JSON.stringify(action.payload),\r\n        headers: { 'Content-Type': 'application/json', 'requestId': localStorage.getItem(\"requestId\"), 'loginKey': localStorage.getItem(\"loginKey\") }\r\n    }).then(response => response.json())\r\n        .then(data => {\r\n            console.debug(\"getProductSalesMiddleware Response:\", data, \"load more:\", action.meta.loadMore);\r\n            if (data.code != \"00\") {\r\n                alert(\"Server error\");\r\n                return;\r\n            }\r\n\r\n            let newAction = Object.assign({}, action, { payload: data, loadMore: action.meta.loadMore, referrer: action.meta.referrer });\r\n            delete newAction.meta;\r\n            store.dispatch(newAction);\r\n        })\r\n        .catch(err => console.log(err)).finally(param => action.meta.referrer.props.app.endLoading());\r\n}\r\n\r\nconst getCashflowDetailMiddleware = store => next => action => {\r\n    if (!action.meta || action.meta.type !== types.GET_CASHFLOW_DETAIL) { return next(action); }\r\n    fetch(action.meta.url, {\r\n        method: POST_METHOD, body: JSON.stringify(action.payload),\r\n        headers: { 'Content-Type': 'application/json', 'requestId': localStorage.getItem(\"requestId\"), 'loginKey': localStorage.getItem(\"loginKey\") }\r\n    }).then(response => response.json())\r\n        .then(data => {\r\n            console.debug(\"getCashflowDetailMiddleware Response:\", data);\r\n            if (data.code != \"00\") {\r\n                alert(\"Server error\");\r\n                return;\r\n            }\r\n\r\n            let newAction = Object.assign({}, action, { payload: data });\r\n            delete newAction.meta;\r\n            store.dispatch(newAction);\r\n        })\r\n        .catch(err => console.log(err)).finally(param => action.meta.app.endLoading());\r\n}\r\n\r\nconst getCashflowInfoMiddleware = store => next => action => {\r\n    if (!action.meta || action.meta.type !== types.GET_CASHFLOW_INFO) { return next(action); }\r\n    fetch(action.meta.url, {\r\n        method: POST_METHOD, body: JSON.stringify(action.payload),\r\n        headers: { 'Content-Type': 'application/json', 'requestId': localStorage.getItem(\"requestId\"), 'loginKey': localStorage.getItem(\"loginKey\") }\r\n    }).then(response => response.json())\r\n        .then(data => {\r\n            console.debug(\"getCashflowInfoMiddleware Response:\", data);\r\n            if (data.code != \"00\") {\r\n                alert(\"Server error\");\r\n                return;\r\n            }\r\n\r\n            if (data.entity == null) {\r\n                alert(\"Data for cashflow: \" + action.payload.filter.module + \" in \" + action.payload.filter.month + \"/\" + action.payload.filter.year + \" period not found!\");\r\n                return;\r\n            }\r\n\r\n            if (data.entity.amount == null) {\r\n                data.entity.amount = 0;\r\n                data.entity.count = 0;\r\n                console.log(\"DATA:\", data);\r\n            }\r\n            let newAction = Object.assign({}, action, { payload: data });\r\n            delete newAction.meta;\r\n            store.dispatch(newAction);\r\n        })\r\n        .catch(err => console.log(err)).finally(param => action.meta.app.endLoading());\r\n}\r\n\r\nconst getProductListTrxMiddleware = store => next => action => {\r\n    if (!action.meta || action.meta.type !== types.FETCH_PRODUCT_LIST_TRX) { return next(action); }\r\n\r\n    if (action.payload.filter.fieldsFilter.name == null || action.payload.filter.fieldsFilter.name.trim() == \"\") {\r\n        let newAction = Object.assign({}, action, {\r\n            payload: { entities: [] }\r\n        });\r\n        delete newAction.meta;\r\n        store.dispatch(newAction);\r\n    } else\r\n        fetch(action.meta.url, {\r\n            method: POST_METHOD, body: JSON.stringify(action.payload), headers: commonAuthorizedHeader()\r\n        })\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                console.debug(\"getProductListTrxMiddleware Response:\", data);\r\n                if (data.entities == null || data.entities.length == 0) {\r\n                    alert(\"Data not found!\");\r\n                    return;\r\n                }\r\n                let newAction = Object.assign({}, action, { payload: data });\r\n                delete newAction.meta;\r\n                store.dispatch(newAction);\r\n            })\r\n            .catch(err => console.log(err)).finally(param => action.meta.app.endLoading());\r\n}\r\n\r\nconst getCustomerListMiddleware = store => next => action => {\r\n    if (!action.meta || action.meta.type !== types.FETCH_CUSTOMER_LIST) { return next(action); }\r\n\r\n    if (action.payload.filter.fieldsFilter.name == null || action.payload.filter.fieldsFilter.name.trim() == \"\") {\r\n        let newAction = Object.assign({}, action, {\r\n            payload: { entities: [] }\r\n        });\r\n        delete newAction.meta;\r\n        store.dispatch(newAction);\r\n    } else\r\n        fetch(action.meta.url, {\r\n            method: POST_METHOD,\r\n            body: JSON.stringify(action.payload),\r\n            headers: commonAuthorizedHeader()\r\n        })\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                console.debug(\"Response:\", data);\r\n                if (data.entities == null || data.entities.length == 0) {\r\n                    alert(\"Data not found!\");\r\n                    return;\r\n                }\r\n                let newAction = Object.assign({}, action, { payload: data });\r\n                delete newAction.meta;\r\n                store.dispatch(newAction);\r\n            })\r\n            .catch(err => console.log(err)).finally(param => action.meta.app.endLoading());\r\n}\r\n\r\nconst resetProductStocksMiddleware = store => next => action => {\r\n    if (!action.meta || action.meta.type !== types.RESET_PRODUCT_STOCKS) { return next(action); }\r\n    let newAction = Object.assign({}, action, { payload: null });\r\n    delete newAction.meta;\r\n    store.dispatch(newAction);\r\n}\r\n\r\nconst resetCustomersMiddleware = store => next => action => {\r\n    if (!action.meta || action.meta.type !== types.RESET_CUSTOMERS) { return next(action); }\r\n    let newAction = Object.assign({}, action, { payload: null });\r\n    delete newAction.meta;\r\n    store.dispatch(newAction);\r\n}\r\n\r\nconst resetProductsMiddleware = store => next => action => {\r\n    if (!action.meta || action.meta.type !== types.RESET_PRODUCTS) { return next(action); }\r\n    let newAction = Object.assign({}, action, { payload: null });\r\n    delete newAction.meta;\r\n    store.dispatch(newAction);\r\n}\r\n\r\nconst resetSuppliersMiddleware = store => next => action => {\r\n    if (!action.meta || action.meta.type !== types.RESET_SUPPLIERS) { return next(action); }\r\n    let newAction = Object.assign({}, action, { payload: null });\r\n    delete newAction.meta;\r\n    store.dispatch(newAction);\r\n}\r\n\r\nconst resetPurchaseTransactionMiddleware = store => next => action => {\r\n    if (!action.meta || action.meta.type !== types.RESET_TRX_PURCHASE) { return next(action); }\r\n    let newAction = Object.assign({}, action, { payload: null });\r\n    delete newAction.meta;\r\n    store.dispatch(newAction);\r\n\r\n}\r\n\r\nconst submitSupplyTransactionMiddleware = store => next => action => {\r\n    if (!action.meta || action.meta.type !== types.SUBMIT_TRX_SUPPLY) {\r\n        return next(action);\r\n    }\r\n\r\n    fetch(action.meta.url, {\r\n        method: POST_METHOD, body: JSON.stringify(action.payload),\r\n        headers: { 'Content-Type': 'application/json', 'requestId': localStorage.getItem(\"requestId\"), 'loginKey': localStorage.getItem(\"loginKey\") }\r\n    })\r\n        .then(response => response.json())\r\n        .then(data => {\r\n            console.debug(\"Response:\", data);\r\n            if (data.code != \"00\") {\r\n                alert(\"Transaction Failed!\");\r\n                return;\r\n            }\r\n            alert(\"Transaction Success!\")\r\n            data.transaction.productFlows = action.payload.productFlows;\r\n            let newAction = Object.assign({}, action, { payload: data });\r\n            delete newAction.meta;\r\n            store.dispatch(newAction);\r\n        })\r\n        .catch(err => console.log(err)).finally(param => action.meta.app.endLoading());\r\n}\r\n\r\nconst submitPurchaseTransactionMiddleware = store => next => action => {\r\n    if (!action.meta || action.meta.type !== types.SUBMIT_TRX_PURCHASE) {\r\n        return next(action);\r\n    }\r\n\r\n    fetch(action.meta.url, {\r\n        method: POST_METHOD, body: JSON.stringify(action.payload),\r\n        headers: { 'Content-Type': 'application/json', 'requestId': localStorage.getItem(\"requestId\"), 'loginKey': localStorage.getItem(\"loginKey\") }\r\n    })\r\n        .then(response => response.json())\r\n        .then(data => {\r\n            console.debug(\"Response:\", data);\r\n            if (data.code != \"00\") {\r\n                alert(\"Transaction Failed!\");\r\n                return;\r\n            }\r\n            alert(\"Transaction Success!\")\r\n            data.transaction.productFlows = action.payload.productFlows;\r\n            let newAction = Object.assign({}, action, { payload: data });\r\n            delete newAction.meta;\r\n            store.dispatch(newAction);\r\n        })\r\n        .catch(err => console.log(err)).finally(param => action.meta.app.endLoading());\r\n}\r\n\r\nconst getStockInfoMiddleware = store => next => action => {\r\n    if (!action.meta || action.meta.type !== types.GET_STOCK_INFO) {\r\n        return next(action);\r\n    }\r\n\r\n    fetch(action.meta.url, {\r\n        method: POST_METHOD, body: JSON.stringify(action.payload),\r\n        headers: { 'Content-Type': 'application/json', 'requestId': localStorage.getItem(\"requestId\"), 'loginKey': localStorage.getItem(\"loginKey\") }\r\n    })\r\n        .then(response => response.json())\r\n        .then(data => {\r\n            console.debug(\"Response:\", data);\r\n            if (data.entities == null || data.entities.length == 0) {\r\n                alert(\"Data not found!\");\r\n                return;\r\n            }\r\n            let newAction = Object.assign({}, action, {\r\n                payload: data\r\n            });\r\n            delete newAction.meta;\r\n            store.dispatch(newAction);\r\n        })\r\n        .catch(err => console.log(err)).finally(param => action.meta.app.endLoading());\r\n}\r\n \r\n\r\nexport default configureStore;","import React from 'react'\r\nimport App from './App'\r\nimport { Provider } from 'react-redux'\r\nimport configureStore from './redux/configureStore'\r\nimport { HashRouter } from 'react-router-dom';\r\n\r\nconst Root = (props) => {\r\n\r\n    const store = configureStore();\r\n\r\n    return (\r\n        <Provider store={store}>\r\n            <HashRouter>\r\n                <App />\r\n            </HashRouter>\r\n        </Provider>\r\n\r\n    );\r\n}\r\n\r\n\r\nexport default Root;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Root from './Root';\nimport * as serviceWorker from './serviceWorker';\n\n\nReactDOM.render(<Root />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}