{"version":3,"sources":["logo.svg","constant/Url.js","components/navigation/Menu.js","constant/Menus.js","components/container/ContentTitle.js","components/pages/index/Home.js","utils/StringUtil.js","components/buttons/ActionButtons.js","components/container/CrudRow.js","components/container/InstantTable.js","components/pages/about/About.js","redux/actionCreators.js","redux/types.js","components/container/Label.js","components/card/Card.js","components/pages/catalog/CatalogItem.js","components/DetailRow.js","components/buttons/ActionButton.js","components/container/ImageCarousel.js","components/pages/catalog/ProductDetail.js","utils/ComponentUtil.js","components/inputs/InputField.js","components/navigation/NavButtons.js","components/inputs/ComboBox.js","components/container/GridComponent.js","components/pages/catalog/Catalog.js","components/messages/Message.js","components/pages/login/Login.js","components/navigation/Tab.js","components/pages/dashboard/DashboardMenu.js","components/pages/transaction/StockListTable.js","components/messages/Loader.js","components/pages/transaction/TransactionReceipt.js","components/inputs/DropdownItem.js","components/inputs/DynamicDropdown.js","components/pages/transaction/AddToCartButton.js","components/pages/transaction/DetailProductPanel.js","components/pages/transaction/TransactionSelling.js","components/ErrorPage.js","components/pages/transaction/TransactionPurchasing.js","components/pages/transaction/BaseTransactionPage.js","components/Chart.js","components/inputs/ComboBoxes.js","utils/ComponentCreator.js","components/pages/dashboard/GraphChart.js","utils/DateUtil.js","components/pages/dashboard/Cashflow.js","components/pages/dashboard/ProductSalesDetail.js","components/pages/dashboard/ProductSales.js","components/pages/dashboard/Dashboard.js","components/pages/supplier_list/SupplierList.js","components/layout/footer/Footer.js","components/pages/chat_room/CharList.js","components/pages/chat_room/ChatRoom.js","components/cart/CartDetail.js","components/inputs/InputFile.js","components/inputs/InputFileMultiple.js","components/pages/management/EntityForm.js","components/messages/SimpleLoader.js","components/pages/management/EntityList.js","components/pages/management/Management.js","components/cart/CartInfo.js","components/layout/header/Header.js","components/messages/Alert.js","App.js","redux/shopReducer.js","utils/HardCodedEntites.js","redux/userReducer.js","redux/transactionReducer.js","redux/managementReducer.js","redux/reducers.js","middlewares/Common.js","middlewares/UserMiddleware.js","middlewares/ManagementMiddleware.js","middlewares/RealtimeChatMiddleware.js","middlewares/CatalogMiddleware.js","redux/configureStore.js","Root.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","devMode","document","getElementById","value","rootValue","contextPath","concat","baseImageUrl","baseResUrl","Menu","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","fontColor","applicationProfile","backgroundColor","color","_this2","renderedMenus","menus","react_default","a","createElement","className","style","UserLink","loggedUser","map","menu","i","Menu_MenuItem","key","cart","activeCode","handleMenuCLick","Component","Fragment","id","Avatar","user","displayName","margin","textAlign","backgroundImage","url","profileImage","backgroundSize","width","height","borderRadius","padding","MenuItem","menuClass","fillStyle","isActive","code","isCart","liStyle","menuName","name","class","count","length","cartCount","onClick","Link","to","connect","state","userState","shopState","LOGOUT","ContentTitle","title","description","iconClass","children","Home","console","debug","profile","setMenuCode","container_ContentTitle","welcomingMessage","src","backgroundUrl","index","uniqueId","string","Date","getUTCMilliseconds","beautifyNominal","val","nominal","result","zero","isNonNullArrayWithIndex","array","months","monthYearString","m","y","ActionButtons","orientation","role","buttonsData","buttonData","status","objectSpread","stringUtil","text","CrudRow","handleEdit","disabled","identifier","handleDelete","values","Array","newValues","CS","RS","colspan","rowspan","push","trStyle","borderTop","actionButton","buttons_ActionButtons","valign","CrudRow_Cells","Cells","element","valueComponent","constructor","React","isValidElement","JSON","stringify","rowSpan","colSpan","InstantTable","rows","tableStyle","row","components_container_CrudRow","About","fontFamily","container_InstantTable","shortDescription","usedHost","apiBaseUrl","apiEntityBaseUrl","apiAccount","apiAdmin","apiTransaction","getSupplierList","request","app","startLoading","requested","type","payload","entity","filter","limit","page","fieldsFilter","orderBy","orderby","orderType","ordertype","meta","categoryId","Label","Card","titleComponent","icon","marginRight","content","CardContent","product","container_Label","fontWeight","price","unit","category","CatalogItem","productImageUrl","imageUrl","split","getProductDetail","card_Card","DetailRow","desc","ActionButton","carouselStyle","bgUrl","ImageCarousel","prev","imageUrls","currentIndex","setState","next","buttons_ActionButton","ProductDetail","supplierShown","supplierPage","updated","refresh","log","goBack","setDetailMode","showSupplierList","mode","loadMoreSupplier","productId","assertThisInitialized","supplierListPanel","suppliers","supplier","components_DetailRow","website","iconUrl","ProductImage","components_container_ImageCarousel","dispatch","referrer","actions","byId","clearFields","inputs","getElementsByTagName","_len","arguments","ignore","_key","withIgnore","loop","checkExistance","undefined","createNavButtons","totalButton","currentPage","Math","ceil","min","max","getCurrentMMYY","getMonth","getFullYear","getDropdownOptionsMonth","options","getDropdownOptionsYear","from","InputField","handleKeyup","onKeyUp","onChange","placeholder","inputField","checked","fontSize","NavButtons","buttonClick","active","ComboBox","handleOnChange","e","label","defaultValue","option","GridComponent","items","repeat","cols","gridAutoColumns","display","verticalAlign","gridTemplateColumns","item","Catalog","catalogData","entities","totalData","products","catalogPage","firstLoad","requestOrderBy","requestOrderType","requestProductName","requestWithStock","requestCategoryId","selectedProduct","buttonCount","enableShopping","activeId","focusToActiveField","componentUtil","focus","getProductInCart","cartItem","clearCart","confirmDialog","updateCart","addToCart","currentCart","existingIndex","currentCartItem","getProductCatalog","_page","withStock","handleOrderChange","rawOrderRequest","handleInputNameChange","clearField","infoDialog","removeEntity","detailMode","handleCategoryChange","floor","totalPage","handleChangeWithStockOption","handleChangeEnableShoppingOption","setEnableShopping","generateNavButtonsData","navButtonsData","_loop","b","getAllProductCategories","categories","actionButtons","productCategories","container_GridComponent","inputs_InputField","inputs_ComboBox","filterProductOption","_this3","rendered","navigation_NavButtons","filterBox","ProductCard","pages_catalog_ProductDetail","shoppingInfo","qty","cartButtonsData","catalog_CatalogItem","withRouter","exacts","contains","withSupplier","Message","Login","username","password","showMessageLoginFailed","handleUsername","handlePassword","doLogin","performLogin","endMessage","getLoggedUser","validateLoginStatus","loginStatus","info","history","message","loginFailed","messages_Message","loginAttempt","Tab","tabsData","tabData","href","preventDefault","DashboardMenu","goToMenu","menuCode_","currentMenu","components_navigation_Tab","whiteSpace","StockListTable","headers","stockListRow","productFlows","productFlow","purchasing","totalPrice","priceString","totalPriceString","expiryDate","flowReferenceId","entityId","headerValue","LoaderContent","realtime","progress","transitionDuration","aria-hidden","Loader","timer","intervalId","update","clearInterval","withTimer","setInterval","msgStyle","zIndex","Spinner","TransactionReceipt","transactionReceiptComponent","stakeHolder","transactionData","transaction","customer","String","transactionDate","DropdownItem","hover","onHover","unHover","onMouseLeave","onMouseOver","DropDownComponent","dropdownComponent","dropdownList","data","hoverIndex","onSelect","position","inputs_DropdownItem","DynamicDropdown","onBlur","dataValue","onFocus","AddToCartButton","DetailProductPanel","getRowData","stockView","defaultVal","spinner","productImageName","TransactionSelling","productName","customerName","productFlowStock","showDetail","messageShow","messageType","stockId","quantity","activeField","setActiveField","getStockInfo","isExistInTheChart","getProductFlow","window","confirm","newProductFlow","random","addProductFlow","emptyForm","currentFlows","showMessage","alert","splice","submitTransaction","submitPurchaseTransaction","messageText","reset","resetPurchaseTransaction","calculateTotalPrice","forEach","getCustomerList","selectCustomer","customersData","resetCustomers","getProductStockList","selectproduct","productCode","resetProductStocks","detailStockComponent","transaction_DetailProductPanel","buttonAddToCart","transaction_AddToCartButton","messageComponent","components_messages_Loader","productList","customerList","getCustomerDropdownData","getProductDropdownData","formComponent","gridRowGap","inputs_DynamicDropdown","setFeatureCode","successTransaction","transaction_TransactionReceipt","transaction_StockListTable","transactionState","code[EXACTS]","ErrorPage","TransactionPurchasing","supplierName","expDate","getProduct","submitSupplyTransaction","emptyFormValues","trim","selectSupplier","resetSuppliers","getProductList","addFormFieldId","selectProduct","resetProducts","formFieldIds","supplierList","detailStock","getSupplierDropdownData","BaseTransactionPage","indexOf","suppliersData","productsData","Chart","counter","percentage","maxValue","chartStyle","mainStyle","legendStyle","marginLeft","marginBottom","marginTop","writingMode","textOrientation","borderLeft","barClassName","ComboBoxes","comboBoxes","comboBox","FilterBox","DateSelectionFrom","inputs_ComboBoxes","monthVal","handleOnChangeMfrom","yearVal","years","handleOnChangeYfrom","DateSelectionTo","handleOnChangeMto","handleOnChangeYto","ChartItem","isHorizonal","bgStyle","transform","GraphChart","components","chartData","chartGroups","g","group","groupedComponents","component","groupedComponent","isHorizontal","borderBottom","borderRight","getChartComponents","MONTHS","Cashflow","date","chartOrientation","fromMonth","fromYear","toMonth","toYear","getCashflowDetail","onChangeChartOrientation","constructFilterBox","isChartHorizontal","isChartVertical","inputRadio","filterButtons","ComponentCreator_FilterBox","ComponentCreator_DateSelectionFrom","transactionYears","ComponentCreator_DateSelectionTo","constructFilterInfo","filterInfo","cashflowDetail","supplies","purchases","cashflowDataRows","chartIndex","spending","earning","period","month","year","earningAmount","amount","spendingAmount","series","cashflowListComponent","overflow","dashboard_GraphChart","monthTo","yearTo","ProductSalesDetail","chartRows","productSalesDetails","salesData","components_Chart","sales","ProductSales","productDetailId","getProductSales","loadMore","getProductSalesDetail","resetPage","setRequestProductName","productSalesData","periodInfo","list","productDetailRows","productSalesListComponent","productSalesDetailsXX","dashboard_ProductSalesDetail","Dashboard","featureCode","cashflowYear","cashflowMonth","getCashflowInfo","minYear","maxYear","cashflowInfoIn","cashflowInfoOut","mainComponent","gridColumnGap","CashflowInfoContent","cashflowInfo","transaction_TransactionSelling","transaction_TransactionPurchasing","dashboard_Cashflow","dashboard_ProductSales","dashboard_DashboardMenu","components_ErrorPage","SupplierList","requestSupplierName","filterSupplierOptions","SupplierCard","address","float","Footer","footerStyle","footerIconClassValue","ChatList","chats","messages","chatRows","chat","CharList_ChatItem","ChatItem","admin","sender","senderComponent","ChatRoom","sendChatMessage","handleMessage","response","localStorage","getItem","storeChatMessageLocally","changeUsername","getMessages","userAlias","CharList","client_default","topics","onMessage","msg","ref","client","clientRef","CartDetail","CartItemList","grandTotalPrice","cartRows","number","DisplayedImage","enableRemove","removeImage","InputFile","base64Data","file","referer","callback","reader","FileReader","readAsDataURL","files","onload","onerror","error","target","displayImage","accept","InputFileMultiple","handleAddMoreFile","addMoreImage","inputFields","inputFilesData","inputFileData","inputs_InputFile","base64","includes","inputId","EntityForm","managedEntity","formValues","dropdownValues","selectedEntities","base64DataMultiple","validateEntity","getElementProperty","multiple","arrayOfValues","resultValue","updatedValue","join","handleSubmit","updateEntity","entityProperty","entityName","clear","focusActiveId","propName","updateSelectedEntity","removeManagedEntity","populateDropdown","entityname","fieldname","fieldvalue","fieldName","fieldValue","getEntitiesWithCallback","onKeyUpDynamicDropdown","inputPhysicalId","fieldId","reffEntity","optionItemName","toLowerCase","populateDropdownValues","currentDropdownValue","optionValueName","getSelectedDropdownItem","elements","currentValue","handleRemoveImage","handleChangeBase64Image","handleChangeBase64MultipleImage","removeElementAtPosition","handleRemoveMultipleImage","_fieldId","newArrayValue","selectFromDynamicDropdown","stateDropdownList","stateDropdownValues","selectedOption","displayPropName","selectFromFixedDropdown","currentDropdownList","selectFromPlainListDropdown","toString","updateFixedListValues","updatePlainListValues","FormElement","entityConfig","stateManagedEntity","FormActionButtons","_props","entityExist","elementId","entityReferenceClass","valueAsObject","inputComponent","lableName","comboBoxOptions","getFixedListElementOptions","plainListValues","getPlainListElementOptions","valueSplit","imagesData","valueSplitItem","inputs_InputFileMultiple","idField","el","CenterLoading","EntityList","getEntityById","goToPage","orderObject","entitiesData","config","getEntityInPage","setOrderBy","createFilterInputsv2","input","handleFilterChange","DateFilter","SortingButton","getEntityDataTableRowData","SimpleLoader_CenterLoading","toConsumableArray","getHeaderNamesv2","rowValues","j","isObject","entityValue","alt","imgName","dateStr","toDateString","str","substr","NavigationButton","management_EntityForm","EntityTable","valueDay","valueMonth","valueYear","inputDay","inputMonth","inputYear","headerName","fixButtonData","paddingTop","Management","entityList","loadEntityManagement","getEntities","getEntityProperty","checkIfCurrentMenuName","getTabMenusData","entityConfigList","configList","flag","newRecord","isNewRecord","callbackHandleUpdate","getManagementMenus","alias","management_EntityList","managementState","managementMenus","CartInfo","detail","showCartList","hideCartList","handleClick","caculateTotalPrice","CartInfoContent","paddingLeft","Header","showOptionButton","left","showMenu","hideMenu","Backdrop","Body","onOk","yesOnly","onNo","onClose","Alert","tabindex","aria-labelledby","Alert_Header","Alert_Footer","blankFunc","App","menuCode","loading","loadingPercentage","requestId","mainAppUpdated","hideSidebar","loadings","alertCallback","logout","performLogout","requestAppId","incrementLoadings","decrementLoadings","endLoading","mainContent","Switch","Route","path","render","renderProps","supplier_list_SupplierList","exact","pages_index_Home","chat_room_ChatRoom","about_About","pages_catalog_Catalog","cart_CartDetail","pages_login_Login","pages_dashboard_Dashboard","pages_management_Management","alertDialog","showInfo","refreshLogin","updateIcon","link","querySelector","rel","head","appendChild","additionalMenus","isNotAuthenticated","authenticated","isShoppingDisabled","setMenus","isHideSidebar","contentClass","Loading","AlertComponent","alertData","hideInfo","cart_CartInfo","layout_header_Header","components_navigation_Menu","layout_footer_Footer","messages_Alert","initState","getTime","reducer","action","currentProduct","loadedSupplier","loginKey","updatedMenus","loggedIn","setItem","removeItem","sessionData","currentProductSalesData","loadedProductList","generalList","rootReducer","combineReducers","shopReducer","userReducer","transactionReducer","managementReducer","initialState","commonAuthorizedHeader","Content-Type","getRequestId","performLoginMiddleware","store","fetch","method","body","common","then","Promise","all","json","_ref","_ref2","slicedToArray","responseJson","loginSuccess","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","entries","Symbol","iterator","done","pair","err","return","newAction","assign","catch","finally","param","requestAppIdMiddleware","getLoggedUserMiddleware","refreshLoginStatusMiddleware","parse","performLogoutMiddleware","_ref3","_ref4","logoutSuccess","getEntitiesWithCallbackMiddleware","updateEntityMiddleware","getEntityByIdMiddleware","getEntityListMiddleware","getEntityPropertyMiddleware","getManagementMenusMiddleware","removeManagedEntityMiddleware","getMessagesMiddleware","sendChatMessageMiddleware","storeChatMessageLocallyMiddleware","getProductListMiddleware","getProductDetailMiddleWare","loadMoreSupplierMiddleware","parap","removeEntityMiddleware","getSupplierListMiddleware","getAllProductCategoriesMiddleware","updateCartMiddleware","getProductStocksMiddleware","getProductSalesDetailMiddleware","getProductSalesMiddleware","getCashflowDetailMiddleware","getCashflowInfoMiddleware","getProductListTrxMiddleware","getCustomerListMiddleware","resetProductStocksMiddleware","resetCustomersMiddleware","resetProductsMiddleware","resetSuppliersMiddleware","resetPurchaseTransactionMiddleware","submitSupplyTransactionMiddleware","submitPurchaseTransactionMiddleware","getStockInfoMiddleware","configureStore","createStore","applyMiddleware","catalogMiddleware","userMiddleware","managementMiddleware","realtimeChatMiddleware","Root","es","HashRouter","src_App_0","Boolean","location","hostname","match","ReactDOM","src_Root","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.9a9d0d89.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","\r\nconst devMode = document.getElementById(\"rootPath\").value == \"${contextPath}\";\r\nconst rootValue = devMode ?\r\n     \"/universal-good-shop/\" : document.getElementById(\"rootPath\").value+\"/\";\r\n\r\nexport const contextPath = function(){\r\n    return devMode? \"http://localhost:8080\".concat(rootValue):rootValue;\r\n}\r\n \r\nexport const baseImageUrl = contextPath()+\"WebAsset/Shop1/Images/\";\r\nexport const baseResUrl = contextPath()+\"res/img/\";\r\n","import React, { Component } from 'react'\r\nimport './Menu.css'\r\nimport * as url from '../../constant/Url'\r\nimport { Link } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\n\r\nclass Menu extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.fontColor = this.props.applicationProfile.fontColor;\r\n        this.backgroundColor = this.props.applicationProfile.color;\r\n\r\n    }\r\n\r\n    componentDidUpdate() { }\r\n\r\n    render() {\r\n        let renderedMenus = [];\r\n        if (this.props.menus != null) {\r\n            renderedMenus = this.props.menus;\r\n        }\r\n\r\n        return (\r\n\r\n            <div className=\"side-menu\" >\r\n                <ul className=\"menu-ul \" style={{ backgroundColor: this.backgroundColor }}>\r\n                    <UserLink loggedUser={this.props.loggedUser} fontColor={this.fontColor} />\r\n                    {renderedMenus.map(\r\n                        (menu, i) => {\r\n                            return <MenuItem\r\n                                key={\"menu_\" + i}\r\n\r\n                                fontColor={this.fontColor}\r\n                                backgroundColor={this.backgroundColor}\r\n                                menu={menu}\r\n                                cart={this.props.cart}\r\n                                activeCode={this.props.activeCode}\r\n                                handleMenuCLick={this.props.handleMenuCLick} />\r\n                        }\r\n                    )\r\n                    } </ul>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nfunction UserLink(props) {\r\n    if (props.loggedUser == null) {\r\n        return <></>\r\n    }\r\n    return (<li id=\"user-link\">\r\n        <Avatar user={props.loggedUser} />\r\n        <div style={{ color: props.fontColor }} className=\"fill\" >Welcome, {props.loggedUser.displayName} </div>\r\n    </li>);\r\n}\r\n\r\nfunction Avatar(props) {\r\n    const style = {\r\n        margin: 'auto',\r\n        textAlign: 'center',\r\n        backgroundImage: 'url(' + url.baseImageUrl + \"/\" + props.user.profileImage + ')',\r\n        backgroundSize: '50px 50px',\r\n        width: '50px', height: '50px', borderRadius: '25px'\r\n    };\r\n    return <div style={{ padding: '5px' }}><div style={style}></div></div>\r\n}\r\n\r\nfunction MenuItem(props) {\r\n    let menuClass = \"fa fa-store-alt\";\r\n    const menu = props.menu;\r\n    const fillStyle = {\r\n        color: props.fontColor\r\n    }\r\n    const isActive = props.activeCode == menu.code;\r\n    const isCart = menu.code == 'cart';\r\n    const liStyle = isActive ? { backgroundColor: props.fontColor } : {};\r\n    if (isActive) {\r\n        fillStyle.color = props.backgroundColor;\r\n    }\r\n    if (menu.menuClass) {\r\n        menuClass = menu.menuClass;\r\n    }\r\n\r\n    const menuName = isCart ? <span>{menu.name}&nbsp;<span class=\"badge badge-warning\">{cartCount(props.cart)} </span></span> : <span>{menu.name}</span>;\r\n\r\n    if (menu.url == \"#\") {\r\n        return (<li style={liStyle} onClick={() => props.handleMenuCLick(menu)} className={isActive ? \"active\" : \"\"} key={menu.name}\r\n            id={menu.name}> <Link key={menu.name + \"LINK\"} className=\"App-link\"\r\n                to=\"#\" ><div style={fillStyle} className=\"fill\" ><i className={menuClass}></i>&nbsp;{menuName} </div></Link></li >)\r\n    }\r\n\r\n    return (<li style={liStyle} className={isActive ? \"menu-active\" : \"\"} key={menu.name}\r\n        id={menu.name}> <Link key={menu.name + \"LINK\"} className=\"App-link\"\r\n            to={menu.url} ><div style={fillStyle} className=\"fill\" ><i className={menuClass}></i>&nbsp;{menuName} </div></Link></li >\r\n    )\r\n}\r\n\r\nfunction cartCount(cart) {\r\n    let count = 0;\r\n    for (let i = 0; i < cart.length; i++) {\r\n        count += cart[i].count\r\n    }\r\n    return count;\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        applicationProfile: state.userState.applicationProfile,\r\n        cart: state.shopState.cart,\r\n        loggedUser: state.userState.loggedUser,\r\n    }\r\n}\r\nexport default (connect(\r\n    mapStateToProps\r\n)(Menu));","export const HOME = \"home\";\r\nexport const CATALOG = \"catalog\";\r\nexport const ABOUT = \"about\";\r\nexport const ACCOUNT = \"account\";\r\nexport const LOGIN = \"login\";\r\nexport const LOGOUT = \"logout\";\r\nexport const DASHBOARD = \"dashboard\";\r\nexport const SUPPLIERLIST = \"supplierlist\";","import React, { Component } from 'react'\r\nimport './Content.css'\r\nimport { connect } from 'react-redux'\r\n\r\nclass ContentTitle extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n    }\r\n\r\n    render() {\r\n\r\n        let title = this.props.title ? this.props.title : \"\";\r\n        let description = this.props.description ? this.props.description : \"\";\r\n        let iconClass = this.props.iconClass ? this.props.iconClass : \"fas fa-home\";\r\n\r\n        return (\r\n            <div style={{color: this.props.applicationProfile.color}}>\r\n                <h2><i className={iconClass}></i>&nbsp;{title}</h2>\r\n                <p>{description}</p>\r\n                {this.props.children}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    //console.log(state);\r\n    return {\r\n        applicationProfile: state.userState.applicationProfile,\r\n    }\r\n}\r\n\r\nexport default (connect(\r\n    mapStateToProps\r\n)(ContentTitle));","import React, { Component } from 'react'\r\nimport * as homeCss from './Home.css'\r\nimport * as menus from '../../../constant/Menus'\r\nimport ContentTitle from '../../container/ContentTitle';\r\nimport * as url from '../../../constant/Url'\r\n\r\nclass Home extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n        console.debug(\"HOME DID MOUNT\");\r\n        const profile = this.props.applicationProfile ? this.props.applicationProfile : {};\r\n        document.title = profile.name;\r\n        this.props.setMenuCode(menus.HOME);\r\n    }\r\n\r\n    render() {\r\n        const profile = this.props.applicationProfile ? this.props.applicationProfile : {};\r\n        return (\r\n            <div className=\"section-container\">\r\n                <ContentTitle title={profile.name} description={profile.welcomingMessage} />\r\n                <div style={{ textAlign: 'center' }} className=\"article-content\">\r\n                    <img width=\"800\" src={url.baseImageUrl + \"/\" + profile.backgroundUrl} />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Home;","let index = 1;\r\nexport const uniqueId = function () {\r\n\tlet string = \"\";\r\n\tstring = new Date().getUTCMilliseconds();\r\n\tindex++;\r\n\treturn index + \"-\" + string;\r\n}\r\n\r\nexport function beautifyNominal(val) {\r\n\tif (val == \"\" || val == null) return \"0\";\r\n\tlet nominal = \"\" + val;\r\n\tlet result = \"\";\r\n\tif (nominal.length > 3) {\r\n\t\tlet zero = 0;\r\n\t\tfor (let i = nominal.length - 1; i > 0; i--) {\r\n\t\t\tzero++;\r\n\t\t\tresult = nominal[i] + result;\r\n\t\t\tif (zero == 3) {\r\n\t\t\t\tresult = \".\" + result;\r\n\t\t\t\tzero = 0;\r\n\t\t\t}\r\n\r\n\t\t}\r\n\t\tresult = nominal[0] + result;\r\n\t} else {\r\n\t\tresult = val;\r\n\t}\r\n\treturn result;\r\n}\r\n\r\nexport const getMaxSales = (list) => {\r\n\tlet result = 0;\r\n\tfor (let i = 0; i < list.length; i++) {\r\n\t\tconst element = list[i];\r\n\t\tif (element.sales > result)\r\n\t\t\tresult = element.sales;\r\n\t}\r\n\treturn result;\r\n}\r\n\r\nexport const isNonNullArray = function (array) {\r\n\treturn array != null && array.length > 0;\r\n}\r\n\r\nexport const isNonNullArrayWithIndex = function (array, i) {\r\n\treturn array != null && array.length > 0 && array[i] != null;\r\n}\r\n\r\nconst months = [\r\n\t\"January\", \"Ferbuary\", \"March\", \"April\", \"May\", \"June\",\r\n\t\"July\", \"August\", \"September\", \"October\", \"November\", \"December\"\r\n]\r\n\r\nexport const monthYearString = function (m, y) {\r\n\tif (m == null || y == null) {\r\n\t\treturn \"-\";\r\n\t}\r\n\treturn months[m - 1] + \" \" + y;\r\n}","import React, { Component } from 'react' \r\nimport * as stringUtil from '../../utils/StringUtil'\r\nimport './Buttons.css'\r\n\r\nclass ActionButtons extends Component {\r\n    constructor(props) { super(props) }\r\n\r\n    render() {\r\n        let className = \"btn-group\";\r\n        if(this.props.orientation == \"vertical\"){\r\n            className+=\"-vertical\";\r\n        }\r\n        if(this.props.className){\r\n            className += \" \"+this.props.className;\r\n        }\r\n        return (\r\n            <div style={this.props.style ? this.props.style : {}} className={ className} role=\"group\"  >\r\n                {this.props.buttonsData.map(buttonData => {\r\n                    let className = \"btn btn-outline-secondary btn-sm\";\r\n                    if (buttonData.status != null) {\r\n                        className =\r\n                            \"btn btn\".concat(\"-\").concat(buttonData.status).concat(\" \").concat(buttonData.className);\r\n                    }\r\n                    return (\r\n                        <button style={{...buttonData.style}} className={className} key={\"btnKey-\" + stringUtil.uniqueId()} onClick={buttonData.onClick}>{buttonData.text}</button>\r\n                    )\r\n                })}\r\n            </div>);\r\n    }\r\n}\r\n\r\nexport default ActionButtons;","import React, { Component } from 'react'\r\nimport * as stringUtil from '../../utils/StringUtil'\r\nimport ActionButtons from '../buttons/ActionButtons';\r\nimport './CrudRow.css'\r\n\r\nclass CrudRow extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.handleEdit = () => {\r\n            if (this.props.handleEdit && !this.props.disabled) {\r\n                this.props.handleEdit(this.props.identifier);\r\n            }\r\n        }\r\n        this.handleDelete = () => {\r\n            if (this.props.handleDelete) {\r\n                this.props.handleDelete(this.props.identifier);\r\n            }\r\n        }\r\n    }\r\n\r\n    render() {\r\n        let values = this.props.values;\r\n        const defaultRowColSpan = 1;\r\n        if (null == values) {\r\n            values = new Array();\r\n        } else {\r\n            let newValues = new Array();\r\n            for (let i = 0; i < values.length; i++) {\r\n                const value = values[i];\r\n                if (this.props.CS || this.props.RS) {\r\n                    let colspan = stringUtil.isNonNullArrayWithIndex(this.props.CS, i) ?\r\n                        this.props.CS[i] : defaultRowColSpan;\r\n                    let rowspan = stringUtil.isNonNullArrayWithIndex(this.props.RS, i) ?\r\n                        this.props.RS[i] : defaultRowColSpan;\r\n                    newValues.push({ value: value, colspan: colspan, rowspan: rowspan });\r\n                } else {\r\n                    newValues.push({ value: value });\r\n                }\r\n            }\r\n            values = newValues;\r\n        }\r\n\r\n        let trStyle = this.props.style ? this.props.style : {\r\n            borderTop: 'solid 1px gray',\r\n        };\r\n        let actionButton = <td style={trStyle}>\r\n            <ActionButtons buttonsData={[\r\n                {\r\n                    id: \"k-btn-edit-\" + this.props.identifier,\r\n                    status: 'warning btn-sm',\r\n                    onClick: this.handleEdit,\r\n                    text: <i className=\"fas fa-edit\"></i>\r\n                },\r\n                {\r\n                    id: \"k-btn-dlt-\" + this.props.identifier,\r\n                    status: 'danger btn-sm',\r\n                    onClick: this.handleDelete,\r\n                    text: <i className=\"fas fa-trash\"></i>\r\n                }\r\n            ]} />\r\n        </td>;\r\n        const disabled = this.props.disabled;\r\n        if (disabled == true) {\r\n            actionButton = null;\r\n            trStyle = this.props.style ? this.props.style : {};\r\n        }\r\n\r\n        return (\r\n            <tr className={disabled ? \"\" : \"crud-row\"} style={trStyle} key={stringUtil.uniqueId()}\r\n                valign={this.props.valign} onClick= {this.handleEdit}> \r\n                <Cells values={values} trStyle={trStyle} />\r\n                {actionButton}</tr>\r\n        )\r\n    }\r\n}\r\n\r\nconst Cells = (props) => {\r\n\r\n    return <>{props.values.map(element => {\r\n\r\n        const isJSON = element.value != null && element.value.constructor == Object && !React.isValidElement(element.value);\r\n        const valueComponent = isJSON ? JSON.stringify(element.value) : element.value;\r\n        return (\r\n            <td key={\"td-key-\" + stringUtil.uniqueId()} id={\"td-\" + stringUtil.uniqueId()}\r\n                style={props.trStyle}\r\n                rowSpan={element.rowspan}\r\n                colSpan={element.colspan}>\r\n                {valueComponent}\r\n            </td>\r\n        )\r\n    })}</>\r\n}\r\n\r\nexport default CrudRow;","import React, { Component } from 'react'  \r\nimport * as stringUtil from '../../utils/StringUtil' \r\nimport CrudRow from './CrudRow';\r\n\r\nclass InstantTable extends Component {\r\n    constructor(props) { super(props) }\r\n\r\n    render() {\r\n        let rows = [];\r\n        if (this.props.rows) { rows = this.props.rows; }\r\n        \r\n        let className = \"table\";\r\n        let tableStyle = this.props.style ? this.props.style : {};\r\n        \r\n        if (this.props.className) {\r\n            className += \" \" + this.props.className;\r\n        }\r\n        return (\r\n            <table style={tableStyle} className={className}><tbody>\r\n                {rows.map(row => {\r\n                    let disabled = row.disabled == false? false:true; \r\n                    \r\n                    return (\r\n                        <CrudRow\r\n                            style={row.style}\r\n                            valign={this.props.valign ? this.props.valign : \"top\"}\r\n                            RS={row.RS}\r\n                            identifier={row.identifier ? row.identifier : \"0000\"}\r\n                            handleEdit={row.handleEdit}\r\n                            handleDelete={row.handleDelete}\r\n                            CS={row.CS}\r\n                            values={row.values ? row.values : []}\r\n                            key={stringUtil.uniqueId()}\r\n                            disabled={disabled}\r\n                        />\r\n                    )\r\n                })}\r\n            </tbody></table>\r\n\r\n        )\r\n    }\r\n}\r\n\r\nexport default InstantTable;","import React, { Component } from 'react' \r\nimport * as menus from '../../../constant/Menus' \r\nimport * as url from '../../../constant/Url' \r\nimport ContentTitle from '../../container/ContentTitle'\r\nimport InstantTable from '../../container/InstantTable'\r\n\r\nclass About extends Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n        document.title = \"About Us\";\r\n        this.props.setMenuCode(menus.ABOUT);\r\n    }\r\n\r\n    render() {\r\n        const profile = this.props.applicationProfile;\r\n\r\n        return (\r\n            <div className=\"section-container about-section  \" >\r\n                <ContentTitle title=\"About Us\" iconClass=\"fas fa-address-book\"/>\r\n                <div className=\" abount-content\" style={{\r\n                    padding: '5px',\r\n                    width: '90%',\r\n                    fontFamily: 'Consolas', margin: '5px'\r\n                }}>\r\n                    <InstantTable\r\n                        rows={[\r\n                            { values: [\"Name\", profile.name] },\r\n                            { values: [\"Version\", \"1.0.0\"] },\r\n                            { values: [\"Description\", profile.shortDescription] },\r\n\r\n\r\n                        ]} />\r\n                    <h2>Powered By</h2>\r\n                    <img style={{ width: '80%' }} src={url.baseResUrl + \"POWERED_BY.png\"} />\r\n                </div></div>\r\n \r\n        )\r\n    }\r\n}\r\n\r\nexport default About;","import * as types from './types'\r\nimport * as url from '../constant/Url'\r\n\r\nconst usedHost = url.contextPath();\r\nconst apiBaseUrl = usedHost + \"api/public/\"\r\nconst apiEntityBaseUrl = usedHost + \"api/entity/\"\r\nconst apiAccount = usedHost + \"api/account/\"\r\nconst apiAdmin = usedHost + \"api/admin/\"\r\nconst apiTransaction = usedHost + \"api/transaction/\";\r\n\r\nexport const resetProductStocks = () => {\r\n    return { type: types.RESET_PRODUCT_STOCKS, payload: {}, meta: { type: types.RESET_PRODUCT_STOCKS } };\r\n}\r\n\r\nexport const updateCart = (cart, app) => {\r\n    return { type: types.UPDATE_CART, payload: { cart: cart, app: app }, meta: { type: types.UPDATE_CART } };\r\n}\r\n\r\nexport const resetProducts = () => {\r\n    return { type: types.RESET_PRODUCTS, payload: {}, meta: { type: types.RESET_PRODUCTS } };\r\n}\r\nexport const resetSuppliers = () => {\r\n    return { type: types.RESET_SUPPLIERS, payload: {}, meta: { type: types.RESET_SUPPLIERS } };\r\n}\r\nexport const resetCustomers = () => {\r\n    return { type: types.RESET_CUSTOMERS, payload: {}, meta: { type: types.RESET_CUSTOMERS } };\r\n}\r\n\r\nexport const removeManagedEntity = () => {\r\n    return {\r\n        type: types.REMOVE_MANAGED_ENTITY,\r\n        payload: {},\r\n        meta: { type: types.REMOVE_MANAGED_ENTITY }\r\n    };\r\n}\r\n\r\nexport const updateEntity = (request, referer, callback) => {\r\n    referer.props.app.startLoading();\r\n    let requested = {\r\n        type: types.UPDATE_ENTITY,\r\n        payload: {\r\n            \"entity\": request.entityName\r\n        },\r\n        meta: {\r\n            type: types.UPDATE_ENTITY,\r\n            url: request.isNewRecord ? apiEntityBaseUrl.concat(\"add\") : apiEntityBaseUrl.concat(\"update\"),\r\n            app: referer.props.app,\r\n            callback: callback,\r\n            referer: referer\r\n        }\r\n    };\r\n    requested.payload[request.entityName] = request.entity;\r\n    return requested;\r\n}\r\n\r\nexport const getEntitiesWithCallback = (request, referer, callback) => {\r\n    referer.props.app.startLoading();\r\n    let requested = {\r\n        type: types.GET_ENTITY_WITH_CALLBACK,\r\n        payload: {\r\n            \"entity\": request.entityName,\r\n            \"filter\": {\r\n                \"limit\": 10,\r\n                'fieldsFilter': {}\r\n            }\r\n        },\r\n        meta: {\r\n            type: types.GET_ENTITY_WITH_CALLBACK,\r\n            url: apiEntityBaseUrl.concat(\"get\"),\r\n            app: referer.props.app,\r\n            referer: referer,\r\n            callback: callback\r\n        }\r\n    };\r\n    requested.payload.filter.fieldsFilter[request.fieldName] = request.fieldValue;\r\n    return requested;\r\n}\r\n\r\nexport const getEntityById = (name, id, app) => {\r\n    app.startLoading();\r\n    let requested = {\r\n        type: types.GET_ENTITY_BY_ID,\r\n        payload: {\r\n            \"entity\": name,\r\n            \"filter\": {\r\n                \"limit\": 1,\r\n                \"page\": 0,\r\n                \"exacts\": true,\r\n                \"contains\": false,\r\n                \"fieldsFilter\": { \"id\": id }\r\n            }\r\n        },\r\n        meta: {\r\n            type: types.GET_ENTITY_BY_ID,\r\n            url: apiEntityBaseUrl.concat(\"get\"),\r\n            app: app\r\n        }\r\n    };\r\n    return requested;\r\n}\r\n\r\nexport const getEntityList = (request, app) => {\r\n    app.startLoading();\r\n    let requested = {\r\n        type: types.GET_ENTITY,\r\n        payload: {\r\n            entity: request.entityName,\r\n            filter: {\r\n                limit: request.limit,\r\n                page: request.page,\r\n                fieldsFilter: request.fieldsFilter,\r\n                orderBy: request.orderBy,\r\n                orderType: request.orderType,\r\n            },\r\n\r\n        },\r\n        meta: {\r\n            type: types.GET_ENTITY,\r\n            url: apiEntityBaseUrl.concat(\"get\"),\r\n            app: app,\r\n            entityConfig: request.entityConfig\r\n        }\r\n    };\r\n    return requested;\r\n}\r\n\r\n\r\nexport const getEntityProperty = (entityName, app) => {\r\n    app.startLoading();\r\n    let requested = {\r\n        type: types.GET_ENTITY_PROPERTY,\r\n        payload: {\r\n            entity: entityName\r\n        },\r\n        meta: {\r\n            type: types.GET_ENTITY_PROPERTY,\r\n            url: apiEntityBaseUrl.concat(\"config\"),\r\n            app: app, \r\n        }\r\n    };\r\n    return requested;\r\n}\r\n\r\n\r\nexport const getManagementMenus = ( app) => {\r\n    app.startLoading();\r\n    let requested = {\r\n        type: types.GET_MANAGEMENT_MENUS,\r\n        payload: {  },\r\n        meta: {\r\n            type: types.GET_MANAGEMENT_MENUS,\r\n            url: apiEntityBaseUrl.concat(\"managementpages\"),\r\n            app: app, \r\n        }\r\n    };\r\n    return requested;\r\n}\r\n\r\nexport const getProductStocks = (name, app) => {\r\n    app.startLoading(true);\r\n    return {\r\n        type: types.GET_PRODUCT_STOCKS,\r\n        payload: {\r\n            entity: 'product',\r\n            filter: {\r\n                limit: 20,\r\n                fieldsFilter: { name: name }\r\n            }\r\n        },\r\n        meta: {\r\n            app: app, type: types.GET_PRODUCT_STOCKS,\r\n            url: apiEntityBaseUrl.concat(\"get\")\r\n        }\r\n    };\r\n}\r\n\r\nexport const requestAppId = (app) => {\r\n    app.startLoading();\r\n    return {\r\n        type: types.REQUEST_ID,\r\n        payload: {},\r\n        meta: {\r\n            app: app, type: types.REQUEST_ID,\r\n            url: apiBaseUrl.concat(\"requestid\")\r\n        }\r\n    };\r\n}\r\n\r\nexport const getMessageList = (app) => {\r\n    app.startLoading();\r\n    return {\r\n        type: types.GET_MESSAGE,\r\n        payload: {},\r\n        meta: {\r\n            type: types.GET_MESSAGE, app: app,\r\n            url: apiAdmin.concat(\"getmessages\")\r\n        }\r\n    };\r\n}\r\n\r\nexport const storeMessageLocally = (messages) => {\r\n\r\n    return {\r\n        type: types.STORE_MESSAGE,\r\n        payload: {\r\n            entities: messages\r\n        },\r\n        meta: {\r\n            type: types.STORE_MESSAGE,\r\n        }\r\n    };\r\n}\r\n\r\nexport const sendChatMessage = (message, username, app) => {\r\n    app.startLoading();\r\n    return {\r\n        type: types.SEND_MESSAGE,\r\n        payload: {\r\n            value: message,\r\n            username: username\r\n        },\r\n        meta: {\r\n            app: app,\r\n            type: types.SEND_MESSAGE,\r\n            url: apiAdmin.concat(\"sendmessage\")\r\n        }\r\n    };\r\n}\r\n\r\nexport const getProductSalesDetail = (request, app) => {\r\n    app.startLoading(true);\r\n    return {\r\n        type: types.GET_PRODUCT_SALES_DETAIL,\r\n        payload: {\r\n            filter:\r\n                { page: request.page, limit: 10, month: request.fromMonth, year: request.fromYear, monthTo: request.toMonth, yearTo: request.toYear }\r\n        },\r\n        meta: {\r\n            app: app,\r\n            type: types.GET_PRODUCT_SALES_DETAIL,\r\n            loadMore: request.loadMore == true, url: apiTransaction.concat(\"productsalesdetail/\" + request.productId)\r\n        }\r\n    };\r\n}\r\n\r\nexport const getProductSales = (request) => {\r\n    request.referrer.props.app.startLoading(true);\r\n    return {\r\n        type: types.GET_PRODUCT_SALES,\r\n        payload: {\r\n            product: { name: request.productName },\r\n            filter:\r\n                { page: request.page, limit: 10, month: request.fromMonth, year: request.fromYear, monthTo: request.toMonth, yearTo: request.toYear }\r\n        },\r\n        meta: {\r\n            referrer: request.referrer, type: types.GET_PRODUCT_SALES, loadMore: request.loadMore == true, url: apiTransaction.concat(\"productsales\")\r\n        }\r\n    };\r\n}\r\nexport const getCashflowDetail = (request, app) => {\r\n    app.startLoading(true);\r\n    return {\r\n        type: types.GET_CASHFLOW_DETAIL,\r\n        payload: { filter: { month: request.fromMonth, year: request.fromYear, monthTo: request.toMonth, yearTo: request.toYear } },\r\n        meta: {\r\n            app: app, type: types.GET_CASHFLOW_DETAIL, url: apiTransaction.concat(\"cashflowdetail\")\r\n        }\r\n    };\r\n}\r\nexport const getCashflowInfo = (month, year, type, app) => {\r\n    app.startLoading();\r\n    return {\r\n        type: types.GET_CASHFLOW_INFO,\r\n        payload: { filter: { year: year, month: month, module: type } },\r\n        meta: {\r\n            app: app, type: types.GET_CASHFLOW_INFO, url: apiTransaction.concat(\"cashflowinfo\")\r\n        }\r\n    };\r\n}\r\n\r\nexport const getProductListTrx = (name, app) => {\r\n    app.startLoading();\r\n    return {\r\n        type: types.FETCH_PRODUCT_LIST_TRX,\r\n        payload: {\r\n            entity: \"product\", filter: { page: 0, limit: 10, fieldsFilter: { name: name } }\r\n        },\r\n        meta: {\r\n            type: types.FETCH_PRODUCT_LIST, url: apiEntityBaseUrl.concat(\"get\"), app: app\r\n        }\r\n    }\r\n}\r\n\r\nexport const getCustomerList = (name, app) => {\r\n    app.startLoading();\r\n    return {\r\n        type: types.FETCH_CUSTOMER_LIST,\r\n        payload: {\r\n            entity: \"customer\", filter: { page: 0, limit: 10, fieldsFilter: { name: name } }\r\n        },\r\n        meta: {\r\n            type: types.FETCH_CUSTOMER_LIST, url: apiEntityBaseUrl.concat(\"get\"), app: app\r\n        }\r\n    }\r\n}\r\n\r\nexport const resetPurchaseTransaction = () => ({\r\n    type: types.RESET_TRX_PURCHASE,\r\n    payload: {},\r\n    meta: { type: types.RESET_TRX_PURCHASE }\r\n})\r\nexport const submitPurchaseTransaction = (request, app) => {\r\n    app.startLoading(true);\r\n    console.log(\"Submit Supply Purchase...\")\r\n    let requested = {\r\n        type: types.SUBMIT_TRX_PURCHASE,\r\n        payload: {\r\n            customer: request.customer,\r\n            productFlows: request.productFlows\r\n        },\r\n        meta: {\r\n            app: app, type: types.SUBMIT_TRX_PURCHASE, url: apiTransaction.concat(\"selling\")\r\n        }\r\n    };\r\n    return requested;\r\n}\r\nexport const submitSupplyTrx = (request, app) => {\r\n    console.log(\"Submit Supply Trx...\")\r\n    app.startLoading(true);\r\n    let requested = {\r\n        type: types.SUBMIT_TRX_SUPPLY,\r\n        payload: {\r\n            supplier: request.supplier,\r\n            productFlows: request.productFlows\r\n        },\r\n        meta: {\r\n            app: app, type: types.SUBMIT_TRX_SUPPLY, url: apiTransaction.concat(\"purchasing\")\r\n        }\r\n    };\r\n    return requested;\r\n}\r\n\r\nexport const getStockInfo = (productCode, app) => {\r\n    app.startLoading();\r\n    return {\r\n        type: types.GET_STOCK_INFO,\r\n        payload: {\r\n            entity: \"product\",\r\n            filter: {\r\n                limit: 1,\r\n                fieldsFilter:\r\n                    { \"code[EXACTS]\": productCode, withStock: true }\r\n            }\r\n        },\r\n        meta: {\r\n            app: app, type: types.GET_STOCK_INFO, url: apiBaseUrl.concat(\"get\")\r\n        }\r\n    }\r\n}\r\n\r\nexport const performLogout = (app) => {\r\n    app.startLoading();\r\n    let loginRequest = {\r\n        type: types.DO_LOGOUT,\r\n        payload: {},\r\n        meta: { app: app, type: types.DO_LOGOUT, url: apiAccount.concat(\"logout\") }\r\n    };\r\n    return loginRequest;\r\n}\r\n\r\nexport const performLogin = (username, password, app) => {\r\n    app.startLoading();\r\n    let loginRequest = {\r\n        type: types.DO_LOGIN,\r\n        payload: {\r\n            user: { username: username, password: password }\r\n        },\r\n        meta: { type: types.DO_LOGIN, url: apiAccount.concat(\"login\"), app: app }\r\n    };\r\n    return loginRequest;\r\n}\r\n\r\nexport const getLoggedUser = (app) => {\r\n    app.startLoading();\r\n    let request = {\r\n        type: types.GET_LOGGED_USER,\r\n        payload: { },\r\n        meta: { type: types.GET_LOGGED_USER, url: apiAccount.concat(\"user\"), app: app }\r\n    };\r\n    return request;\r\n}\r\n\r\nexport const refreshLoginStatus = () => {\r\n\r\n    let loginRequest = {\r\n        type: types.REFRESH_LOGIN,\r\n        payload: {},\r\n        meta: { type: types.REFRESH_LOGIN }\r\n    };\r\n    return loginRequest;\r\n}\r\n\r\nexport const getAllProductCategories = () => ({\r\n    type: types.FETCH_PRODUCT_CATEGORIES_ALL,\r\n    payload: {\r\n        entity: \"category\",\r\n        filter: {\r\n            limit: 0,\r\n            page: 0,\r\n            orderBy: null,\r\n            orderType: null,\r\n            fieldsFilter: {}\r\n        }\r\n    },\r\n    meta: {\r\n        type: types.FETCH_PRODUCT_CATEGORIES_ALL,\r\n        url: apiEntityBaseUrl.concat(\"get\")\r\n    }\r\n})\r\n\r\nexport const getSupplierList = (request, app) => {\r\n    app.startLoading();\r\n    let requested = {\r\n        type: types.FETCH_SUPPLIER_LIST,\r\n        payload: {\r\n            entity: \"supplier\",\r\n            filter: {\r\n                limit: 10,\r\n                page: request.page,\r\n                fieldsFilter: {\r\n                    name: request.name\r\n                },\r\n                orderBy: request.orderby,\r\n                orderType: request.ordertype\r\n            }\r\n        },\r\n        meta: {\r\n            type: types.FETCH_SUPPLIER_LIST,\r\n            url: apiBaseUrl.concat(\"get\"),\r\n            app: app\r\n        }\r\n    };\r\n\r\n    if (request.categoryId != null) {\r\n        requested.payload.filter.fieldsFilter[\"category,id[EXACTS]\"] = request.categoryId;\r\n    }\r\n\r\n    return requested;\r\n}\r\n\r\nexport const getProductList = (request, app) => {\r\n    // app.startLoading(request.withStock == true);\r\n    app.startLoading(true);\r\n    let requested = {\r\n        type: types.FETCH_PRODUCT_LIST,\r\n        payload: {\r\n            entity: \"product\",\r\n            filter: {\r\n                limit: 10,\r\n                page: request.page,\r\n                fieldsFilter: {\r\n                    name: request.name,\r\n                    withStock: request.withStock\r\n                },\r\n                orderBy: request.orderby,\r\n                orderType: request.ordertype\r\n            }\r\n        },\r\n        meta: {\r\n            type: types.FETCH_PRODUCT_LIST,\r\n            url: apiBaseUrl.concat(\"get\"),\r\n            app: app\r\n        }\r\n    };\r\n\r\n    if (request.categoryId != null) {\r\n        requested.payload.filter.fieldsFilter[\"category,id[EXACTS]\"] = request.categoryId;\r\n    }\r\n\r\n    return requested;\r\n}\r\n\r\n\r\nexport const getProductDetail = (code, app) => {\r\n    app.startLoading(true);\r\n    return {\r\n        type: types.FETCH_PRODUCT_DETAIL,\r\n        payload: {\r\n\r\n            entity: \"product\",\r\n            filter: {\r\n                limit: 1,\r\n                exacts: true,\r\n                contains: false,\r\n                fieldsFilter: {\r\n                    code: code,\r\n                    withStock: true,\r\n                    withSupplier: true\r\n                }\r\n            }\r\n        },\r\n        meta: {\r\n            type: types.FETCH_PRODUCT_DETAIL,\r\n            url: apiBaseUrl.concat(\"get\"),\r\n            app: app\r\n        }\r\n    }\r\n}\r\n\r\nexport const removeEntity = () => ({\r\n    type: types.REMOVE_SHOP_ENTITY,\r\n    payload: {},\r\n    meta: { type: types.REMOVE_SHOP_ENTITY }\r\n})\r\n\r\nexport const loadMoreSupplier = (page, productId, referrer) => {\r\n    referrer.props.app.startLoading();\r\n    return {\r\n        type: types.LOAD_MORE_SUPPLIER,\r\n        payload: { filter: { page: page, fieldsFilter: { \"productId\": productId } } },\r\n        meta: {\r\n            type: types.LOAD_MORE_SUPPLIER,\r\n            url: apiBaseUrl.concat(\"moresupplier\"),\r\n            referrer: referrer\r\n        }\r\n    }\r\n}\r\n\r\n","export const FETCH_PRODUCT_LIST = \"fetch_product_list\";\r\nexport const FETCH_PRODUCT_DETAIL= \"fetch_product_detail\";\r\nexport const REMOVE_SHOP_ENTITY= \"remove_shop_entity\";\r\nexport const FETCH_SUPPLIER_LIST = \"fetch_supplier_list\";\r\nexport const LOAD_MORE_SUPPLIER = \"load_more_supplier\";\r\nexport const FETCH_PRODUCT_CATEGORIES_ALL = \"all_product_categories\";\r\nexport const DO_LOGIN = \"do_login\";\r\nexport const DO_LOGOUT = \"do_logout\";\r\nexport const GET_STOCK_INFO = \"get_stock_info\";\r\nexport const SUBMIT_TRX_PURCHASE = \"submit_purchase\";\r\nexport const SUBMIT_TRX_SUPPLY = \"submit_supply\";\r\nexport const RESET_TRX_PURCHASE = \"reset_purchase\";\r\nexport const FETCH_CUSTOMER_LIST = \"fetch_cust_list\";\r\nexport const FETCH_PRODUCT_LIST_TRX = \"fetch_product_list\";\r\nexport const GET_CASHFLOW_INFO = \"get_cashflow\";\r\nexport const GET_CASHFLOW_DETAIL = \"get_cashflow_detail\";\r\nexport const GET_PRODUCT_SALES = \"get_product_sales\";\r\nexport const RESET_SUPPLIERS = \"reset_suppliers\";\r\nexport const RESET_PRODUCTS = \"reset_products\";\r\nexport const RESET_PRODUCT_STOCKS = \"RESET_PRODUCT_STOCKS\";\r\nexport const RESET_CUSTOMERS = \"RESET_CUSTOMERS\";\r\nexport const GET_PRODUCT_STOCKS = \"get_product_stocks\";\r\nexport const GET_PRODUCT_SALES_DETAIL = \"get_product_Sales_detail\";\r\nexport const REQUEST_ID = \"req_ID\";\r\nexport const SEND_MESSAGE = \"send_message\";\r\nexport const STORE_MESSAGE = \"store_message\";\r\nexport const GET_MESSAGE = \"GET_MESSAGE\";\r\nexport const UPDATE_CART = \"update_cart\";\r\nexport const GET_ENTITY = \"get_entity\";\r\nexport const GET_ENTITY_PROPERTY = \"get_entity_config\";\r\nexport const GET_MANAGEMENT_MENUS = \"GET_MANAGEMENT_MENUS\";\r\nexport const GET_ENTITY_BY_ID = \"get_entity_by_id\";\r\nexport const UPDATE_ENTITY = \"update_entity\";\r\nexport const GET_ENTITY_WITH_CALLBACK = \"GET_ENTITY_WITH_CALLBACK\";\r\nexport const REMOVE_MANAGED_ENTITY = \"rm_mng_entity\";\r\nexport const REFRESH_LOGIN = \"refresh_login\";\r\nexport const GET_LOGGED_USER = \"get_logged_user\";","import React, {Component} from 'react' \r\n\r\nclass Label extends Component{\r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.onClick = () =>{\r\n            if(this.props.onClick){\r\n                this.props.onClick();\r\n            }\r\n        }\r\n    }\r\n\r\n    render(){\r\n        let style = this.props.style?this.props.style:{};\r\n        let className = \"input-field \";\r\n       \r\n        if(this.props.className){  className+=\" \"+this.props.className; }\r\n        if(this.props.onClick){ className+=\" clickable\";  }\r\n        \r\n        return(\r\n            <div onClick={this.onClick} style={style} className={className}>\r\n                <label>{this.props.text}</label>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default Label;","import React, { Component } from 'react'\r\n\r\nclass Card extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.onClick = () => {\r\n            if (this.props.onClick) {\r\n                this.props.onClick();\r\n            }\r\n        }\r\n    }\r\n\r\n    render() { \r\n\r\n        let className;\r\n        if (this.props.className) {\r\n            className = \"card \" + this.props.className;\r\n        } else {\r\n            className = \"card\";\r\n        }\r\n\r\n        let titleComponent;\r\n        if (this.props.icon) {\r\n            titleComponent = <img src={this.props.icon} height=\"200\" className=\"card-img-top\" />\r\n        } else {\r\n            titleComponent = <div className=\"card-header\">\r\n                {this.props.title}\r\n            </div>\r\n        }\r\n\r\n        return (\r\n            <div onClick={this.onClick} style={{ ...this.props.style, marginRight: '5px' }} className={className}>\r\n                {titleComponent}\r\n                <div className=\"card-body\">\r\n                    {this.props.icon? <div className=\"card-title\">{this.props.title}</div>:null}\r\n                    {this.props.content}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Card;","import React, { Component } from 'react'\r\n\r\nimport * as url from '../../../constant/Url'\r\nimport * as stringUtil from '../../../utils/StringUtil'\r\nimport Label from '../../container/Label'\r\nimport Card from '../../card/Card'\r\n\r\nclass CatalogItem extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        const product = this.props.product;\r\n\r\n        //check if null\r\n        if (!product || !product.category || !product.unit) {\r\n            return <h3>Please wait..</h3>\r\n        }\r\n\r\n        const productImageUrl = product.imageUrl;\r\n        const imageUrl = url.baseImageUrl + productImageUrl.split(\"~\")[0];\r\n        const content = <CardContent product={product} />\r\n        const title = <Label className=\" clickable \" text={product.name} onClick={() => this.props.getProductDetail(product.code)} />;\r\n\r\n        return (\r\n            <Card style={{width:'250px', margin:'auto'}} className=\"grid-item\" title={title} icon={imageUrl} content={content} />\r\n        )\r\n    }\r\n}\r\n\r\nfunction CardContent(props) {\r\n    const product = props.product;\r\n    return (<div>\r\n        <Label style={{ fontFamily: \"Arial Narrow\", fontWeight: 'bolder' }}\r\n            text={<span><i className=\"fas fa-tags\"></i>&nbsp;{stringUtil.beautifyNominal(product.price) + \",00\"}</span>} />\r\n        <div>\r\n            <i className=\"fas fa-cubes\"></i>&nbsp;{stringUtil.beautifyNominal(product.count)}&nbsp;{product.unit.name}\r\n        </div>\r\n        <Label text={product.category.name} />\r\n    </div>);\r\n}\r\n\r\nexport default CatalogItem;","import React, {Component} from 'react'\r\nimport * as url from '../constant/Url'\r\nimport '../css/DetailRow.css'\r\n/**\r\n * used when showing list with icon and name and desc (exp: supplier list)\r\n */\r\nclass DetailRow extends Component{\r\n\r\n    constructor(props){\r\n        super(props);\r\n    }\r\n    render(){\r\n        return (\r\n            <tr className=\"detail-item\">\r\n                <td><img src={url.baseImageUrl+this.props.icon} width=\"50\" height=\"50\"/></td>\r\n                <td>{this.props.id} . {this.props.name} <br/><span className=\"link\">{this.props.desc}</span></td>\r\n            </tr>\r\n        )\r\n    }\r\n}\r\n\r\nexport default DetailRow;","import React, { Component } from 'react' \r\n\r\nclass ActionButton extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.onClick = () => {\r\n            if(this.props.onClick){\r\n                this.props.onClick();\r\n            }\r\n        }\r\n    }\r\n\r\n    render() {\r\n        let className = \"btn btn-secondary\";\r\n        if(this.props.status!= null ){\r\n            className= \"btn \".concat(\"btn-\").concat(this.props.status);\r\n        }\r\n        return (\r\n            <div >\r\n                <button style={{...this.props.style, margin:'1px'}} className={className} id={this.props.id} onClick={this.onClick}>{this.props.text}</button>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default ActionButton;","import React, { Component } from 'react' \r\nimport './ImageCarousel.css' \r\nimport InstantTable from './InstantTable';\r\nimport Label from './Label';\r\nimport ActionButton from '../buttons/ActionButton';\r\n\r\nclass ImageCarousel extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { index: 0 }\r\n\r\n        this.prev = () => {\r\n            if (this.props.imageUrls == null) return;\r\n            let currentIndex = this.state.index;\r\n            if (currentIndex <= 0)\r\n                currentIndex = this.props.imageUrls.length - 1;\r\n            else\r\n                currentIndex--;\r\n            this.setState({ index: currentIndex })\r\n        }\r\n\r\n        this.next = () => {\r\n            if (this.props.imageUrls == null) return;\r\n            let currentIndex = this.state.index;\r\n            if (currentIndex >= this.props.imageUrls.length - 1)\r\n                currentIndex = 0;\r\n            else\r\n                currentIndex++;\r\n            this.setState({ index: currentIndex })\r\n\r\n        }\r\n    }\r\n\r\n    render() {\r\n        let image = \"\";\r\n        let bgUrl = null;\r\n        if (this.props.imageUrls) {\r\n           \r\n            for (let i = 0; i < this.props.imageUrls.length; i++) {\r\n                const imageUrl = this.props.imageUrls[i];\r\n                console.debug(i, \"this.state.index: \",this.state.index, \"Image carousel URL\", imageUrl);\r\n                if (i == this.state.index) {\r\n                    image = <img src={imageUrl} className=\"carousel-item\" />\r\n                    bgUrl = imageUrl;\r\n                }\r\n            }\r\n        }\r\n        return (\r\n            <div className=\"carousel rounded\" style={carouselStyle(bgUrl)}> \r\n                 \r\n                <InstantTable style={{backgroundColor:'rgba(150,150,150,0.5'}} className=\"carousel-navigation\" rows={[{\r\n                    values: [\r\n                        <ActionButton text={<i className=\"fas fa-chevron-left\"></i>} id=\"btn-prev-img\" onClick={this.prev} />,\r\n                        <Label text={this.state.index + 1 + \"/\" + (this.props.imageUrls ? this.props.imageUrls.length : 1)} />,\r\n                        <ActionButton text={<i className=\"fas fa-chevron-right\"></i>} id=\"btn-next-img\" onClick={this.next} />\r\n                    ]\r\n                }]} />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nfunction carouselStyle(bgUrl){\r\n    return {\r\n        backgroundImage: 'url('+bgUrl+')',\r\n        backgroundSize: '400px 300px'\r\n    };\r\n}\r\n\r\nexport default ImageCarousel;","import React, { Component } from 'react'\r\nimport './ProductDetail.css'\r\nimport DetailRow from '../../DetailRow'\r\nimport * as url from '../../../constant/Url'\r\nimport * as actions from '../../../redux/actionCreators'\r\nimport { connect } from 'react-redux'\r\nimport ActionButtons from '../../buttons/ActionButtons'\r\nimport ActionButton from '../../buttons/ActionButton'\r\nimport InstantTable from '../../container/InstantTable'\r\nimport ImageCarousel from '../../container/ImageCarousel'\r\nimport { beautifyNominal } from '../../../utils/StringUtil'\r\nimport ContentTitle from '../../container/ContentTitle'\r\n\r\n\r\nclass ProductDetail extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            supplierShown: false,\r\n            supplierPage: 1,\r\n            product: null,\r\n            updated: new Date()\r\n        }\r\n\r\n        /**\r\n         * this method is called in shopReducer\r\n         */\r\n        this.refresh = () => {\r\n            console.log(\"++reresh++\");\r\n            this.setState({ updated: new Date() });\r\n        }\r\n\r\n        this.goBack = () => {\r\n            this.props.setDetailMode(false);\r\n        }\r\n\r\n        this.showSupplierList = (mode) => {\r\n            this.setState({ supplierShown: mode });\r\n            this.setState({ product: this.props.product });\r\n        }\r\n\r\n        this.loadMoreSupplier = (page, productId) => {\r\n\r\n            page++;\r\n            this.setState({ supplierPage: page });\r\n            this.props.loadMoreSupplier(this.state.supplierPage, productId, this);\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setState({ supplierShown: false });\r\n        document.title = \"Product Detail\";\r\n\r\n    }\r\n\r\n    componentDidUpdate() {\r\n    }\r\n\r\n    render() {\r\n\r\n        let product = this.props.product;\r\n\r\n        if (product == null) {\r\n            return (\r\n                <ContentTitle title=\"Please wait..\" iconClass=\"fas fa-info-circle\" />\r\n            )\r\n        }\r\n\r\n        /////////////////////////\r\n\r\n        let supplierListPanel = <p></p>\r\n        let supplierShown = this.state.supplierShown ? true : false;\r\n        if (supplierShown && product.suppliers) {\r\n            supplierListPanel = <div className=\"detail-supplier-container\">\r\n                <h3>Supplier List</h3>\r\n                <table className=\"supplier-container\">\r\n                    <tbody>\r\n                        {product.suppliers.map(\r\n                            supplier => {\r\n                                return (\r\n                                    <DetailRow desc={supplier.website} id={\"supp-\" + supplier.id} key={\"supp-\" + supplier.id} icon={supplier.iconUrl} name={supplier.name} />\r\n                                )\r\n                            }\r\n                        )}\r\n                    </tbody>\r\n                </table>\r\n                {this.state.supplierPage}\r\n                <ActionButton\r\n                    id=\"btn-show-more\"\r\n                    onClick={() => this.loadMoreSupplier(this.state.supplierPage, product.id)}\r\n                    text=\"Show More\" />\r\n            </div>\r\n        }\r\n        return (\r\n            <div className=\"section-container\" >\r\n\r\n                <ContentTitle title={product.name} iconClass=\"fas fa-info-circle\" description={product.description} />\r\n                <div className=\"product-desc\">\r\n                    <InstantTable disabled={true}\r\n                        rows={[\r\n                            { values: [<ProductImage product={product} />], CS: [2] },\r\n                            { values: [\"Price\", beautifyNominal(product.price)] },\r\n                            { values: [\"Item(s)\", beautifyNominal(product.count) + \" \" + (product.unit ? product.unit.name : \"\")] },\r\n                            { values: [\"Category\", product.category.name] }\r\n                        ]} />\r\n\r\n                    <ActionButtons buttonsData={[{\r\n                        id: \"btn-back\", onClick: this.goBack, text: \"Back\"\r\n                    },\r\n                    {\r\n                        id: \"btn-show-supplier\", status: \"success\",\r\n                        onClick: () => this.showSupplierList(supplierShown && product.suppliers ? false : true),\r\n                        text: (supplierShown && product.suppliers ? \"Hide suppliers\" : \"Show suppliers\")\r\n                    }]} />\r\n                </div>\r\n                {supplierListPanel}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nfunction ProductImage(props) {\r\n    const product = props.product;\r\n\r\n    if (product && product.imageUrl) {\r\n\r\n        let imageUrls = new Array();\r\n        for (let index = 0; index < product.imageUrl.split(\"~\").length; index++) {\r\n            imageUrls.push(url.baseImageUrl + product.imageUrl.split(\"~\")[index]);\r\n        }\r\n        return <ImageCarousel imageUrls={imageUrls} />\r\n    }\r\n    return null;\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    console.log(\"Catalog State to props: \", state);\r\n    return {\r\n        suppliers: state.shopState.suppliers\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    loadMoreSupplier: (page, productId, referrer) => dispatch(actions.loadMoreSupplier(page, productId, referrer))\r\n\r\n})\r\nexport default (connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(ProductDetail));","export const byId = (id) => { return document.getElementById(id) }\r\n\r\nexport const clearFields = (...ignore) => {\r\n    let inputs = document.getElementsByTagName(\"input\");\r\n    let withIgnore = ignore != null;\r\n    loop: for (let i = 0; i < inputs.length; i++) {\r\n        if (withIgnore)\r\n            for (let y = 0; y < ignore.length; y++)\r\n                if (inputs[i].id == ignore[y]) continue loop;\r\n\r\n        if (inputs[i].type == \"text\") inputs[i].value = \"\";\r\n        if (inputs[i].type == \"number\") inputs[i].value = 0;\r\n    }\r\n}\r\n\r\nexport function toBase64(file, referer, callback){\r\n\tconst reader = new FileReader();\r\n    reader.readAsDataURL(file.files[0]);\r\n    reader.onload = () => callback(reader.result, referer);\r\n    reader.onerror = error => {\r\n    \talert(\"Error Loading File\");\r\n    }\r\n}\r\n\r\nexport const checkExistance = function (...ids) {\r\n    for (let i = 0; i < ids.length; i++) {\r\n        if (byId(ids[i]) == null) {\r\n            console.log(\"component with id:\", ids[i], \"does not exist\");\r\n            return false;\r\n        }\r\n    }\r\n    return true;\r\n}\r\n\r\nexport const createNavButtons = (totalButton, currentPage) => {\r\n    totalButton = Math.ceil(totalButton);\r\n    if (!currentPage) { currentPage = 0 }\r\n    let buttonData = new Array(); \r\n    let min = currentPage - 3 < 0 ? 0 : currentPage - 3;\r\n    let max = currentPage + 3 > totalButton  ? totalButton  : currentPage + 3;\r\n\r\n    if (min != 0) {\r\n        buttonData.push({\r\n            text: 1,\r\n            value: 0\r\n        });\r\n    }\r\n\r\n    for (let index = min; index < max; index++) {\r\n        buttonData.push({\r\n            text: index + 1,\r\n            value: index\r\n        });\r\n    }\r\n\r\n    if (max != totalButton  ) {\r\n        buttonData.push({\r\n            text: totalButton,\r\n            value: totalButton -1 \r\n        });\r\n    }\r\n\r\n\r\n    return buttonData;\r\n}\r\n\r\nexport const getCurrentMMYY = () => {\r\n    return [new Date().getMonth() + 1, new Date().getFullYear()];\r\n}\r\n\r\nexport const getDropdownOptionsMonth = () => {\r\n    let options = [];\r\n    for (let i = 1; i <= 12; i++) {\r\n        options.push({ value: i, text: i });\r\n    }\r\n    return options;\r\n}\r\nexport const getDropdownOptionsYear = (from, to) => {\r\n    let options = [];\r\n    for (let i = from; i <= to; i++) {\r\n        options.push({ value: i, text: i });\r\n    }\r\n    return options;\r\n}","import React, { Component } from 'react' \r\nimport { byId } from '../../utils/ComponentUtil'\r\n\r\n/**\r\n * JUST FOR INPUT !!!\r\n */\r\nclass InputField extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.handleKeyup = () => {\r\n            if (this.props.onKeyUp && this.props.id)\r\n                this.props.onKeyUp(byId(this.props.id).value, this.props.id);\r\n        }\r\n\r\n        this.onChange = () => {\r\n            if (this.props.type == \"date\") {\r\n                this.handleKeyup();\r\n            }\r\n            if (this.props.id && this.props.type == \"checkbox\") {\r\n                this.props.onChange(this.props.id);\r\n            }\r\n            if (this.props.onChange && this.props.id) {\r\n                this.props.onChange();\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    componentDidMount() { \r\n        if (this.props.value && this.props.id) { \r\n            byId(this.props.id).value = this.props.value;\r\n        }\r\n    }\r\n\r\n    render() {\r\n        let type = this.props.type ? this.props.type : \"text\";\r\n        let placeholder = this.props.placeholder ? this.props.placeholder : \"\";\r\n        let name = this.props.name ? this.props.name : \"\";\r\n        let style = this.props.style ? this.props.style : {};\r\n\r\n        let inputField = <input style={style}\r\n            className= {type == 'checkbox'?'':\"form-control\"}\r\n            name={name}\r\n            key={\"KEY-input-\" + this.props.id}\r\n            id={this.props.id}\r\n            type={type}\r\n            onKeyUp={this.handleKeyup}\r\n            placeholder={placeholder}\r\n            checked={this.props.checked}\r\n            onChange={this.onChange}\r\n\r\n        />;\r\n\r\n        if (this.props.disabled == true) {\r\n            inputField = <input style={style}\r\n                className=\"form-control\"\r\n                onChange={this.onChange}\r\n                name={name} key={\"KEY-input-\" + this.props.id}\r\n                checked={this.props.checked}\r\n                id={this.props.id}\r\n                type={type} onKeyUp={this.handleKeyup}\r\n                placeholder={placeholder}\r\n\r\n                disabled />\r\n        }\r\n\r\n        if (type == \"textarea\") {\r\n            inputField = <textarea style={style}\r\n                className=\"form-control\"\r\n                name={name}\r\n                key={\"KEY-input-\" + this.props.id}\r\n                id={this.props.id}\r\n                type={type}\r\n                onKeyUp={this.handleKeyup}\r\n                placeholder={placeholder}\r\n                onChange={this.onChange}\r\n                checked={this.props.checked} />\r\n        }\r\n\r\n        return (\r\n            <div className=\"input-field\">\r\n                {inputField}\r\n                {this.props.type == \"radio\" || this.props.type == \"checkbox\" ?\r\n                 <span style={{ fontSize: '0.9em', margin:'4px' }}>{this.props.text} </span> : \"\"}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default InputField;","import React, { Component } from 'react'\r\nimport * as stringUtil from '../../utils/StringUtil' \r\nimport ActionButtons from './../buttons/ActionButtons';\r\n\r\nclass NavButtons extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n\r\n        let buttonsData = [];\r\n        if (this.props.buttonsData) {\r\n            buttonsData = this.props.buttonsData;\r\n        }\r\n        for (let i = 0; i < buttonsData.length; i++) {\r\n            const buttonData = buttonsData[i];\r\n            buttonsData[i].onClick = buttonData.buttonClick;\r\n            buttonsData[i].key = stringUtil.uniqueId() + \"_nav\";\r\n\r\n            if(buttonData.active){\r\n                buttonsData[i].style = {backgroundColor:'lightsteelblue'}\r\n            }\r\n        } \r\n        return (\r\n            <ActionButtons buttonsData={buttonsData} />\r\n        )\r\n    }\r\n}\r\n\r\nexport default NavButtons;","import React, { Component } from 'react'\r\nimport { byId } from '../../utils/ComponentUtil'\r\nimport * as stringUtil from '../../utils/StringUtil'\r\n\r\nclass ComboBox extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.handleOnChange = (e) => {\r\n            if (this.props.onChange) {\r\n                this.props.onChange(byId(this.props.id).value );\r\n                console.log(\"Select box \",this.props.id, \" CHANGED VALUE: \", byId(this.props.id).value);\r\n            }\r\n            else {\r\n                console.log(\"Not supported\");\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (this.props.value) {\r\n            byId(this.props.id).value = this.props.value;\r\n        }\r\n    }\r\n\r\n    render() {\r\n         \r\n        let options = [];\r\n        if (this.props.options) {\r\n            options = this.props.options;\r\n        }\r\n        // console.log(\"this.props.defaultValue: \", this.props.defaultValue)\r\n        return (\r\n            <div className=\"input-field \">\r\n               {this.props.label ? <label className=\"select-label\">{this.props.label}</label> : null }\r\n                <select value={this.props.defaultValue ? this.props.defaultValue : \"\"} \r\n                    className={\"form-control\"} id={this.props.id}\r\n                    onChange={this.handleOnChange} >\r\n                    {options.map(\r\n                        option => {\r\n                            return <option key={\"opt_\" + stringUtil.uniqueId()} value={option.value} >{option.text}</option>\r\n                        }\r\n                    )}\r\n                </select>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ComboBox;","import React, { Component } from 'react'\r\n\r\nclass GridComponent extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n    }\r\n    render() {\r\n        let items = [];\r\n        if (this.props.items) {\r\n            items = this.props.items;\r\n        }\r\n\r\n        const repeat = this.props.cols ? this.props.cols : items.length;\r\n        const gridAutoColumns = \"auto \".repeat(repeat);\r\n\r\n        return (\r\n            <div style={{ ...this.props.style, display: 'grid', verticalAlign: 'middle', gridTemplateColumns: gridAutoColumns }} >\r\n                {items.map((item, i)=> {\r\n                    return <div key={\"div-\"+i}>{item}</div>;\r\n                })}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default GridComponent;","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport CatalogItem from './CatalogItem'\r\nimport '../catalog/Catalog.css'\r\nimport { BrowserRouter as Router, Route, Link, Switch, withRouter } from 'react-router-dom'\r\nimport * as actions from '../../../redux/actionCreators'\r\nimport ProductDetail from './ProductDetail'\r\nimport * as menus from '../../../constant/Menus'\r\nimport ActionButtons from '../../buttons/ActionButtons'\r\nimport InputField from '../../inputs/InputField'\r\nimport * as componentUtil from '../../../utils/ComponentUtil'\r\nimport ContentTitle from '../../container/ContentTitle'\r\nimport * as stringUtil from '../../../utils/StringUtil'\r\nimport NavButtons from '../../navigation/NavButtons'\r\nimport ComboBox from '../../inputs/ComboBox'\r\nimport GridComponent from '../../container/GridComponent'\r\n\r\nclass Catalog extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            catalogData: {\r\n                entities: []\r\n            },\r\n            limit: 10,\r\n            totalData: 0,\r\n            products: [],\r\n            catalogPage: 0,\r\n            firstLoad: true,\r\n            requestOrderBy: null,\r\n            requestOrderType: null,\r\n            requestProductName: \"\",\r\n            requestWithStock: null,\r\n            requestCategoryId: null,\r\n            selectedProduct: null,\r\n            buttonCount: 0,\r\n            enableShopping: false,\r\n            activeId: null\r\n\r\n        };\r\n\r\n        this.focusToActiveField = () => {\r\n            if (componentUtil.byId(this.state.activeId)) {\r\n                componentUtil.byId(this.state.activeId).focus();\r\n            }\r\n        }\r\n\r\n        this.getProductInCart = (id) => {\r\n            for (let i = 0; i < this.props.cart.length; i++) {\r\n                let cartItem = this.props.cart[i];\r\n                if (cartItem.product.id == id) {\r\n                    cartItem.index = i;\r\n                    return cartItem;\r\n                }\r\n            }\r\n            return { index: -1, count: 0 };\r\n        }\r\n\r\n        this.clearCart = () => {\r\n            const props = this.props;\r\n            this.props.app.confirmDialog(\"Are you sure clear shopping list?\", function (e) {\r\n                props.updateCart([], props.app);\r\n            }, null);\r\n\r\n        }\r\n\r\n        this.addToCart = (product, count) => {\r\n            let currentCart = this.props.cart;\r\n            let existingIndex = this.getProductInCart(product.id).index;\r\n\r\n            if (existingIndex >= 0) {\r\n                let currentCount = currentCart[existingIndex].count;\r\n\r\n                if (currentCount + count < 0) return;\r\n\r\n                let currentCartItem = currentCart[existingIndex];\r\n                currentCartItem.count += count;\r\n\r\n                currentCart[existingIndex] = currentCartItem;\r\n\r\n            } else if (count != 0) {\r\n                currentCart.push({\r\n                    product: product,\r\n                    count: count\r\n                })\r\n            }\r\n            this.props.updateCart(currentCart, this.props.app);\r\n        }\r\n\r\n        this.getProductCatalog = (_page) => {\r\n            console.log(\"will go to page: \", _page)\r\n            this.props.getProductCatalog(\r\n                {\r\n                    page: _page,\r\n                    name: this.state.requestProductName,\r\n                    orderby: this.state.requestOrderBy,\r\n                    ordertype: this.state.requestOrderType,\r\n                    categoryId: this.state.requestCategoryId,\r\n                    withStock: this.state.requestWithStock\r\n                }, this.props.app\r\n            );\r\n            this.setState({ catalogPage: _page, totalData: this.props.catalogData.totalData });\r\n        }\r\n\r\n        this.handleOrderChange = (value) => {\r\n\r\n            if (value == null || value == \"00\" || value.length == 0 || value.split(\"-\").length != 2) {\r\n                this.setState({ requestOrderBy: null });\r\n                this.setState({ requestOrderType: null });\r\n                return;\r\n            } else {\r\n                let rawOrderRequest = value.split(\"-\");\r\n                this.setState({ requestOrderBy: rawOrderRequest[0] });\r\n                this.setState({ requestOrderType: rawOrderRequest[1] });\r\n            }\r\n\r\n        }\r\n\r\n        this.handleInputNameChange = (value, id) => {\r\n            console.log(\"==input name changed==\", id);\r\n            this.setState({ requestProductName: value, activeId: id });\r\n        }\r\n\r\n        this.clearField = () => {\r\n            this.setState({ requestProductName: \"\" });\r\n            this.setState({ requestOrderBy: null, requestOrderType: null });\r\n            this.setState({ requestCategoryId: null });\r\n\r\n            this.props.app.infoDialog(\"filter has been cleared, please push the search button to take effect\")\r\n        }\r\n\r\n        this.getProductDetail = (code) => {\r\n            console.log(\"Detail of: \", code);\r\n            //remove selected product if any\r\n            this.props.removeEntity();\r\n\r\n            this.props.getProductDetail(code, this.props.app);\r\n            this.props.setDetailMode(true);\r\n        }\r\n\r\n        this.setDetailMode = (detailMode) => {\r\n            document.title = \"Product Catalog\";\r\n            this.props.setDetailMode(detailMode);\r\n            this.props.removeEntity();\r\n        }\r\n\r\n        this.handleCategoryChange = (value) => {\r\n            this.setState({ catalogPage: 0 })\r\n            if (value != null && value != \"00\")\r\n                this.setState({ requestCategoryId: value });\r\n            else\r\n                this.setState({ requestCategoryId: null });\r\n\r\n        }\r\n\r\n        this.next = () => {\r\n            let catalogPage = this.state.catalogPage;\r\n            let totalPage = Math.floor(this.props.catalogData.totalData / this.state.limit);\r\n            if (catalogPage >= totalPage - 1) { catalogPage = 0; }\r\n            else { catalogPage++; }\r\n\r\n            this.getProductCatalog(catalogPage);\r\n        }\r\n\r\n        this.prev = () => {\r\n            let catalogPage = this.state.catalogPage;\r\n            let totalPage = Math.floor(this.props.catalogData.totalData / this.state.limit);\r\n            if (catalogPage <= 0) { catalogPage = totalPage - 1; }\r\n            else { catalogPage--; }\r\n\r\n            this.getProductCatalog(catalogPage);\r\n        }\r\n\r\n        this.handleChangeWithStockOption = (id) => {\r\n            if (!componentUtil.byId(id))\r\n                return;\r\n            this.setState({ requestWithStock: componentUtil.byId(id).checked });\r\n        }\r\n\r\n        this.handleChangeEnableShoppingOption = (id) => {\r\n            console.log(\"ID: \", id)\r\n            if (!componentUtil.byId(id))\r\n                return;\r\n            this.props.app.setEnableShopping(componentUtil.byId(id).checked)\r\n        }\r\n\r\n        this.generateNavButtonsData = () => {\r\n            let products = this.props.catalogData.entities == null ? [] : this.props.catalogData.entities;\r\n            let buttonData = [];\r\n            if (products.length > 0)\r\n                buttonData = componentUtil.createNavButtons(this.props.catalogData.totalData / this.state.limit,\r\n                    this.state.catalogPage);\r\n\r\n            const navButtonsData = [{\r\n                id: \"btn-prev\",\r\n                buttonClick: this.prev,\r\n                text: \"previous\"\r\n            }];\r\n            for (let i = 0; i < buttonData.length; i++) {\r\n                const b = buttonData[i];\r\n                let active = (b.value == this.state.catalogPage);\r\n                navButtonsData.push({\r\n                    id: b.value,\r\n                    active: active,\r\n                    buttonClick: () => this.getProductCatalog(b.value),\r\n                    text: b.text\r\n                });\r\n            }\r\n\r\n            navButtonsData.push({\r\n                id: \"btn-next\",\r\n                buttonClick: this.next,\r\n                text: \"next\"\r\n            });\r\n            return navButtonsData;\r\n        }\r\n\r\n    }\r\n\r\n    componentWillMount() {\r\n        document.title = \"Product Catalog\";\r\n        this.getProductCatalog(this.state.catalogPage);\r\n        this.props.setMenuCode(menus.CATALOG);\r\n        this.props.getAllProductCategories();\r\n\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        if (this.state.firstLoad && this.props.catalogData.filter != null) {\r\n            this.setState({\r\n                limit: this.props.catalogData.filter.limit,\r\n                totalData: this.props.catalogData.totalData,\r\n                firstLoad: false\r\n            });\r\n        }\r\n        this.focusToActiveField();\r\n    }\r\n\r\n    filterBox() {\r\n        let categories = [{ value: \"00\", text: \"-all category-\" }];\r\n        let actionButtons = [\r\n            { text: <i className=\"fa fa-search\" ></i>, status: \"success\", onClick: () => this.getProductCatalog(0), id: \"btn-search\" },\r\n            { text: \"Clear Filter\", status: 'warning', onClick: this.clearField, id: \"Clear-filter\" }\r\n        ];\r\n        this.props.productCategories.map(category => {\r\n            categories.push({ value: category.id, text: category.name });\r\n        })\r\n\r\n        if (this.props.enableShopping) {\r\n            actionButtons.push({\r\n                text: <span><i className=\"fa fa-cart-arrow-down\" ></i></span>, onClick: () => { this.clearCart() }, status: 'danger', id: \"clear-list\"\r\n            });\r\n        }\r\n\r\n        return <div className=\"filter-box\">\r\n            <GridComponent cols={3} style={{ width: 'max-content' }} items={[\r\n                <InputField placeholder=\"search by product name\"\r\n                    value={this.state.requestProductName}\r\n                    onKeyUp={this.handleInputNameChange}\r\n                    type=\"search\" id=\"input-product-name\" />\r\n                ,\r\n                <ComboBox\r\n                    defaultValue={this.state.requestOrderBy + \"-\" + this.state.requestOrderType}\r\n                    onChange={this.handleOrderChange}\r\n                    options={filterProductOption} id={\"select-order\"}\r\n                />,\r\n                <ComboBox\r\n                    defaultValue={this.state.requestCategoryId}\r\n                    onChange={this.handleCategoryChange}\r\n                    options={categories} id=\"select-category\"\r\n                />,\r\n                <ActionButtons style={{ margin: '5px' }} buttonsData={actionButtons} />,\r\n                <div className=\"row\">\r\n                    <InputField checked={this.state.requestWithStock} onChange={this.handleChangeWithStockOption}\r\n                        type=\"checkbox\" id=\"checkbox-with-stock\"\r\n                        text=\"Inculde Remaining Stock\" /> \r\n                    <InputField checked={this.props.enableShopping} onChange={this.handleChangeEnableShoppingOption}\r\n                        type=\"checkbox\" id=\"checkbox-enable-cart\"\r\n                        text=\"Show Shopping List\" />\r\n                </div>,\r\n            ]} />\r\n            <p></p>\r\n        </div>;\r\n    }\r\n\r\n    render() {\r\n\r\n        let products = this.props.catalogData.entities == null ? [] : this.props.catalogData.entities;\r\n\r\n        let productCatalog = (\r\n            <div className=\"section-container\" id=\"catalog-main\" key=\"catalog-main\">\r\n                <ContentTitle title=\"Catalog Page\" iconClass=\"fas fa-store-alt\" description=\"Choose your favourite products\" />\r\n                <NavButtons buttonsData={this.generateNavButtonsData()} />\r\n\r\n                {this.filterBox()}\r\n                <div className=\"row catalog-container\" >\r\n                    {products.map(\r\n                        product =>  \r\n                                <ProductCard\r\n                                    getProductDetail={this.getProductDetail}\r\n                                    getProductInCart={this.getProductInCart}\r\n                                    enableShopping={this.props.enableShopping}\r\n                                    product={product}\r\n                                    addToCart={this.addToCart} /> \r\n                    )}\r\n                </div>\r\n            </div>);\r\n\r\n        let rendered = productCatalog;\r\n\r\n        if (this.props.detailMode) {\r\n            let productDetail = <ProductDetail app={this.props.app} setDetailMode={this.setDetailMode} product={this.props.selectedProduct} />\r\n            rendered = productDetail;\r\n\r\n        }\r\n\r\n        return (rendered)\r\n    }\r\n}\r\n\r\nfunction ProductCard(props) {\r\n    let shoppingInfo = <></>;\r\n    const product = props.product;\r\n    if (props.enableShopping) {\r\n\r\n        const cartItem = props.getProductInCart(product.id);\r\n        const qty = cartItem.count;\r\n\r\n        const cartButtonsData = [\r\n            { text: <i className=\"fas fa-sync\"></i>, status: \"danger btn-sm\", onClick: () => props.addToCart(product, (qty * (-1))), id: \"btn-add-cart-\" + product.id },\r\n            { text: <i className=\"fa fa-minus-circle\"></i>, status: \"warning btn-sm\", onClick: () => props.addToCart(product, -1), id: \"btn-add-cart-\" + product.id },\r\n            { text: qty, id: \"info-cart-\" + product.id, status: 'light btn-sm' },\r\n            { text: <i className=\"fa fa-plus-circle\"></i>, status: 'success btn-sm', onClick: () => props.addToCart(product, 1), id: \"btn-reduce-cart-\" + product.id }\r\n        ];\r\n\r\n        shoppingInfo = <div>\r\n            <ActionButtons buttonsData={cartButtonsData} />\r\n        </div>\r\n    }\r\n\r\n    return (\r\n        <div className=\"col-md-3\" style={{width:'min-content'}} key={stringUtil.uniqueId()}>\r\n            {shoppingInfo}\r\n            <CatalogItem getProductDetail={props.getProductDetail} key={product.id} product={product} />\r\n        </div>\r\n    )\r\n}\r\n\r\nconst filterProductOption = [\r\n    { value: \"00\", text: \"-all order-\" },\r\n    { value: \"name-asc\", text: \"Name [A-Z]\" },\r\n    { value: \"name-desc\", text: \"Name [Z-A]\" },\r\n    { value: \"price-asc\", text: \"Price [cheap]\" },\r\n    { value: \"price-desc\", text: \"Price [expensive]\" }\r\n];\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        catalogData: state.shopState.catalogData,\r\n        selectedProduct: state.shopState.entity,\r\n        productCategories: state.shopState.categories,\r\n        cart: state.shopState.cart\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    getProductCatalog: (request, app) => dispatch(actions.getProductList(request, app)),\r\n    getProductDetail: (code, app) => dispatch(actions.getProductDetail(code, app)),\r\n    removeEntity: () => dispatch(actions.removeEntity()),\r\n    getAllProductCategories: () => dispatch(actions.getAllProductCategories()),\r\n    updateCart: (cart, app) => dispatch(actions.updateCart(cart, app))\r\n})\r\nexport default withRouter(connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(Catalog));","import React, { Component } from 'react'\r\n\r\nclass Message extends Component {\r\n\r\n    render() {\r\n        const status = this.props.status ? this.props.status : \"secondary\";\r\n\r\n        return (\r\n            <div className={\"alert alert-\" + status} role=\"alert\">\r\n                {this.props.text}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Message;","import React, { Component } from 'react'\r\nimport * as actions from '../../../redux/actionCreators'\r\nimport { connect } from 'react-redux'\r\nimport * as menus from '../../../constant/Menus'\r\nimport { withRouter } from 'react-router';\r\nimport ContentTitle from '../../container/ContentTitle';\r\nimport Label from '../../container/Label';\r\nimport ActionButton from '../../buttons/ActionButton';\r\nimport Message from '../../messages/Message';\r\nimport '../login/Login.css'\r\nimport InputField from '../../inputs/InputField';\r\nimport { byId } from '../../../utils/ComponentUtil'\r\nclass Login extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            username: null,\r\n            password: null,\r\n            showMessageLoginFailed: false\r\n        }\r\n\r\n        this.handleUsername = (value) => {\r\n            this.setState({ username: value });\r\n        }\r\n        this.handlePassword = (value) => {\r\n            this.setState({ password: value });\r\n        }\r\n\r\n        this.doLogin = () => {\r\n\r\n            console.log(\"u:\", this.state.username, \",p:\", this.state.password);\r\n            this.props.performLogin(\r\n                byId(\"username-field\").value,\r\n                byId(\"password-field\").value,\r\n                this.props.app);\r\n        }\r\n\r\n        this.endMessage = () => {\r\n            this.setState({ showMessageLoginFailed: false })\r\n        }\r\n\r\n        this.getLoggedUser = () => {\r\n            this.props.getLoggedUser(this.props.app);\r\n        }\r\n\r\n        this.validateLoginStatus = () => {\r\n            if (this.props.loginStatus == true) {\r\n                console.info(\"Login success! Redirect to dashboard\");\r\n                this.getLoggedUser();\r\n                this.props.history.push(\"/dashboard\");\r\n            }\r\n        }\r\n\r\n        this.message = () => {\r\n            let message = <p>\r\n                {this.props.loginFailed ? <Message endMessage={this.endMessage} status=\"danger\" text=\"Login Failed\" /> : \"\"}\r\n            </p>\r\n            return message;\r\n        }\r\n    }\r\n\r\n\r\n    componentDidMount() {\r\n        this.validateLoginStatus();\r\n        this.props.setMenuCode(menus.LOGIN);\r\n        document.title = \"Login\";\r\n\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        this.validateLoginStatus();\r\n        // if(this.props.loginAttempt == false && this.state.showMessageLoginFailed == false){\r\n        //     this.setState({showMessageLoginFailed:true})\r\n        // }\r\n    }\r\n\r\n\r\n\r\n    render() {\r\n\r\n        return (\r\n            <div className=\"section-container\">\r\n                < ContentTitle title=\"Login Page\" iconClass=\"fas fa-sign-in-alt\" />\r\n                <this.message />\r\n                <div className=\"login-container card\">\r\n                    <div className=\"card-header\">Login</div>\r\n                    <div className=\"card-body\">\r\n                        <Label text=\"Username\" />\r\n                        <InputField id=\"username-field\" onKeyUp={this.handleUsername} />\r\n                        <Label text=\"Password\" />\r\n                        <InputField id=\"password-field\" type=\"password\" onKeyUp={this.handlePassword} />\r\n                        <ActionButton style={{ margin: '5px' }} id=\"btn-login\" status=\"primary\" onClick={this.doLogin} text=\"Login\" />\r\n                    </div></div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps = state => {\r\n    //console.log(state);\r\n    return { \r\n  \r\n      //user\r\n      loginStatus: state.userState.loginStatus, \r\n      loginFailed: state.userState.loginFailed, \r\n      loggedUser: state.userState.loggedUser,\r\n      loginAttempt: state.userState.loginAttempt,   \r\n    }\r\n  }\r\nconst mapDispatchToProps = dispatch => ({\r\n    performLogin: (username, password, app) => dispatch(actions.performLogin(username, password, app)),  \r\n    getLoggedUser: (app) => dispatch(actions.getLoggedUser(app))\r\n  })\r\nexport default withRouter(connect( \r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n  )(Login))","import React from 'react';\r\nimport './Tab.css'\r\n\r\nclass Tab extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n    }\r\n    render() {\r\n        let tabsData = this.props.tabsData ? this.props.tabsData : [];\r\n\r\n        let autoColumns = \"5% \"+(\"min-content \".repeat(tabsData.length ))+\" auto\";\r\n        return (\r\n            // <div className=\"tab-container\" style={{\r\n            //     ...this.props.style,\r\n            //     width:'auto',\r\n            //     gap:'0px',\r\n            //     display: 'grid',\r\n            //     gridTemplateColumns: autoColumns\r\n            // }} >\r\n            //      <div style={{width:'100%', borderBottom:'solid 1px lightgray'}}></div>\r\n            <ul className=\"nav nav-tabs\">\r\n  \r\n                {tabsData.map((tabData,i) => {\r\n                    const onClickHandler = function(e){\r\n                        e.preventDefault();\r\n                        if(tabData.onClick){\r\n                            tabData.onClick(e);\r\n                        }\r\n                    }\r\n\r\n                    return (\r\n                        <li key={\"tab\"+i} className=\"nav-item\">\r\n                            <a href=\"\" className={tabData.active ? \"nav-link active\" : \"nav-link\"} onClick={onClickHandler}>\r\n                                {tabData.text}\r\n                            </a>\r\n                        </li>\r\n                    // <div key={\"tab\"+i} className={tabData.active ? \"tab-element tab-item-active rounded-top\" : \"tab-element tab-item\"} onClick={tabData.onClick ? tabData.onClick : () => { }}>\r\n                    //     {tabData.text}\r\n                    // </div>\r\n                    )\r\n                })}\r\n            </ul>\r\n            //     <div style={{width:'100%', borderBottom:'solid 1px lightgray'}}></div>\r\n            // </div>\r\n        )\r\n    }\r\n}\r\nexport default Tab;","import React, { Component } from 'react'\r\nimport * as menuCss from '../../../components/navigation/Menu.css'\r\nimport Tab from '../../navigation/Tab';\r\n\r\nclass DashboardMenu extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.goToMenu = (menuCode_) => {\r\n\r\n            this.props.goToMenu(menuCode_);\r\n        }\r\n\r\n        this.isActive = (code) => {\r\n            return this.props.currentMenu == code;\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        document.title = \"Dashboard\";\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <div className=\"dashboard-menu\" >\r\n                <Tab style={{whiteSpace: 'nowrap'}} tabsData={[\r\n                    { onClick: () => this.goToMenu('main'), active: this.isActive('main'), text: \"Home\" },\r\n                    { onClick: () => this.goToMenu('trxIn'), active: this.isActive('trxIn'), text: \"Purchasing\" },\r\n                    { onClick: () => this.goToMenu('trxOut'), active: this.isActive('trxOut'), text: \"Selling\" },\r\n                    { onClick: () => this.goToMenu('cashflow'), active: this.isActive('cashflow'), text: \"Cashflow\" },\r\n                    { onClick: () => this.goToMenu('productSales'), active: this.isActive('productSales'), text: \"Product Sales\" }]}\r\n                />\r\n            </div >\r\n        )\r\n    }\r\n\r\n}\r\n\r\nconst MenuItem = (props) => {\r\n    return (\r\n        <div onClick={props.onClick} className=\"dashboard-menu-item  paper-shadow  \">\r\n            <h3>{props.text}</h3></div>\r\n    )\r\n}\r\n\r\nexport default DashboardMenu;","import React, { Component } from 'react'\r\nimport * as stringUtil from '../../../utils/StringUtil'\r\nimport CrudRow from '../../container/CrudRow'\r\n\r\n\r\nclass StockListTable extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.headers = () => {\r\n            let headers; \r\n            if (this.props.disabled == true) {\r\n                headers = [\r\n                    \"No\", \"Flow ID\", \"Product Name\", \"Expiry Date\", \"Quantity\", \"Price @Item\", \"Total Price\", \"Reff Stock ID\"\r\n                ];\r\n            } else {\r\n                headers = [\r\n                    \"No\", \"Flow ID\", \"Product Name\", \"Expiry Date\", \"Quantity\", \"Price @Item\", \"Total Price\", \"Reff Stock ID\", \"Option\"\r\n                ];\r\n            };\r\n            return headers;\r\n        }\r\n    }\r\n\r\n    render() { \r\n        \r\n        let i = 1;\r\n        const headers = this.headers(); \r\n        const productFlows = this.props.productFlows;\r\n        const stockListRow =\r\n            productFlows.map(\r\n                productFlow => {\r\n                    const product = productFlow.product ? productFlow.product : {};\r\n                    const price = this.props.purchasing ?  productFlow.price : product.price;\r\n                    const totalPrice = productFlow.count * product.price;\r\n                    const count = stringUtil.beautifyNominal(productFlow.count);\r\n                    const priceString = stringUtil.beautifyNominal(price) + \",00\";\r\n                    const totalPriceString = stringUtil.beautifyNominal(totalPrice) + \",00\";\r\n                    const values = [\r\n                        i, productFlow.id, product.name, productFlow.expiryDate, count, priceString, totalPriceString, productFlow.flowReferenceId\r\n                    ];\r\n                    i++;\r\n                    return <CrudRow disabled={this.props.disabled}\r\n                        handleDelete={this.props.handleDelete} handleEdit={this.props.handleEdit}\r\n                        key={stringUtil.uniqueId() + \"-row-trx\"}\r\n                        identifier={productFlow.entityId}\r\n                        values={values} />\r\n                }\r\n            );\r\n\r\n        let tableStyle = {   };\r\n\r\n        return (\r\n            <div >\r\n                <table className=\"table\" style={tableStyle}>\r\n                    <thead>\r\n                        <tr key={stringUtil.uniqueId() + \"-stock\"}>\r\n                            {headers.map(headerValue => <th key={stringUtil.uniqueId() + \"-th\"}>{headerValue} </th>)}\r\n                        </tr>\r\n                        {stockListRow}\r\n                    </thead>\r\n                </table>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default StockListTable;","import React, { Component } from 'react'\r\nimport './Loader.css'\r\n\r\nclass Loader extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            timer: 130,\r\n            intervalId: 0\r\n        }\r\n        this.update = () => {\r\n            if (this.state.timer < 0) {\r\n                clearInterval(this.state.intervalId);\r\n            }\r\n            console.log(\"tick\")\r\n            this.setState({ timer: this.state.timer - 1 })\r\n            if (this.state.timer < 0 && this.props.endMessage) {\r\n                this.props.endMessage();\r\n            }\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (this.props.withTimer == true) {\r\n            let intervalId = setInterval(this.update, 1, null);\r\n            this.setState({ intervalId: intervalId });\r\n        }\r\n    }\r\n\r\n    render() {\r\n        let className = \"message message-\" + this.props.type;\r\n        let messageText = this.props.text;\r\n\r\n        let msgStyle = {};\r\n        if (this.props.realtime == true) {  \r\n            className = \"message-loading progress\";\r\n            messageText = <span className=\"loader\">{this.props.progress + \"%\"}</span>   \r\n            msgStyle.zIndex = 100;\r\n        }\r\n\r\n        return (\r\n            <div style={msgStyle} className={className} >\r\n                <LoaderContent progress={this.props.progress} realtime={this.props.realtime} />\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nfunction LoaderContent(props){\r\n    if(props.realtime){\r\n        return (\r\n            <div className=\"progress-bar progress-bar-striped\" role=\"progressbar\" style={{ \r\n                width: props.progress + \"%\",\r\n                transitionDuration: '300ms'\r\n                }}>\r\n            </div>\r\n        );\r\n    }\r\n    return (\r\n        <button className=\"btn btn-primary\" type=\"button\" disabled>\r\n            <span className=\"spinner-border spinner-border-sm\" role=\"status\" aria-hidden=\"true\"></span>\r\n            <span className=\" \">Loading...</span>\r\n        </button>\r\n    );\r\n}\r\n\r\nexport default Loader;","import React, { Component } from 'react'\r\nimport './Transaction.css'\r\nimport InstantTable from '../../container/InstantTable';\r\nfunction Spinner(props) {\r\n    return <div className=\"spinner-border text-primary\" role=\"status\">\r\n        <span className=\"sr-only\">Loading...</span>\r\n    </div>\r\n}\r\nclass TransactionReceipt extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        const line = \"-\".repeat(77);\r\n        let transactionReceiptComponent = <Spinner />;\r\n        let stakeHolder = {};\r\n\r\n        if (this.props.transactionData &&\r\n            this.props.transactionData.user) {\r\n            let transaction = this.props.transactionData;\r\n\r\n            if (transaction.type == \"OUT\") {\r\n                stakeHolder = { id: \"trx_customer\", values: [\"Customer\", transaction.customer.name] }\r\n            } else {\r\n                stakeHolder = { id: \"trx_supplier\", values: [\"Supplier\", transaction.supplier.name] }\r\n            }\r\n\r\n            transactionReceiptComponent =\r\n                <InstantTable disabled={true} rows={[\r\n                    { id: \"trx_code\", values: [\"Code\", transaction.code] },\r\n                    { id: \"trx_date\", values: [\"Date\", new String(new Date(transaction.transactionDate))] },\r\n                    { id: \"trx_type\", values: [\"Type\", transaction.type] },\r\n                    stakeHolder,\r\n\r\n                ]} />;\r\n        }\r\n\r\n        return (\r\n            <div className=\"transaction-receipt paper-shadow\" >\r\n                <h2>Transaction {this.props.status}</h2>\r\n                {transactionReceiptComponent}\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default TransactionReceipt;","import React, { Component } from 'react'\r\n \r\n\r\nclass DropdownItem extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            hover: false\r\n        }\r\n\r\n        this.onHover = (e) => {\r\n            if(this.props.onHover)\r\n                this.props.onHover( this.props.index);\r\n        }\r\n        this.unHover = (e) => { \r\n            this.setState({ hover: false })\r\n        }\r\n    }\r\n\r\n\r\n    render() {\r\n          return (\r\n            <div onMouseLeave={this.unHover} onMouseOver ={this.onHover}  >\r\n                {this.props.text}\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default DropdownItem;","import React, { Component } from 'react'\r\nimport DropdownItem from './DropdownItem';\r\nimport * as stringUtil from '../../utils/StringUtil';\r\nimport './Inputs.css'\r\n/**\r\n * JUST FOR INPUT !!!\r\n */\r\nclass DynamicDropdown extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            focus: true, hover: false, hoverIndex: -1,\r\n\r\n        }\r\n\r\n        this.handleKeyup = () => {\r\n            if (this.props.onKeyUp && this.props.id)\r\n                this.props.onKeyUp(document.getElementById(this.props.id).value, this.props.id);\r\n        }\r\n\r\n        this.onBlur = () => {\r\n            console.log(\"blur\");\r\n            this.setState({ focus: false, hover: false })\r\n        }\r\n\r\n        this.onSelect = (dataValue, text) => {\r\n            console.log(\"select value:\", dataValue, \" text: \", text);\r\n            if (this.props.onSelect) { this.props.onSelect(dataValue); }\r\n            if (this.props.id) {\r\n                document.getElementById(this.props.id).value = text;\r\n            }\r\n        }\r\n\r\n        this.onHover = (index) => {\r\n            if (this.state.hoverIndex != index)\r\n                this.setState({ hoverIndex: index });\r\n        }\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (this.props.value && this.props.id) {\r\n            document.getElementById(this.props.id).value = this.props.value;\r\n        }\r\n    }\r\n\r\n    render() {\r\n\r\n        let placeholder = this.props.placeholder ? this.props.placeholder : \"\";\r\n        let inputClassName = \"form-control\";\r\n\r\n        return (\r\n            <div onMouseOver={() => this.setState({ focus: true })} onMouseLeave={this.onBlur} className=\"dropdown-wrapper input-field\">\r\n                \r\n                <input\r\n                    className={inputClassName}\r\n                    onFocus={() => this.setState({ focus: true })}\r\n                    id={this.props.id}\r\n                    type=\"text\"\r\n                    onKeyUp={this.handleKeyup}\r\n                    placeholder={placeholder} />\r\n\r\n                <DropDownComponent focus={this.state.focus}\r\n                    dropdownList={this.props.dropdownList}\r\n                    hoverIndex={this.state.hoverIndex}\r\n                    onSelect={this.onSelect}\r\n                    onHover={this.onHover}\r\n                />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nfunction DropDownComponent(props) {\r\n    let dropdownComponent = \"\";\r\n    if (props.focus && props.dropdownList && props.dropdownList.length > 0) {\r\n        let dropdownList = props.dropdownList;\r\n        // console.log(\"RENDERD HOVER:\", this.state.hoverIndex);\r\n        dropdownComponent = <div className=\"dropdown\">\r\n            {dropdownList.map(\r\n                (data, i) => {\r\n                    let className = \"dropdown-item\";\r\n                    if (props.hoverIndex == i) className += \" dropdown-item-hovered\";\r\n                    return (\r\n                        <div\r\n                            id={stringUtil.uniqueId()}\r\n                            key={\"dropdown-xx-\" + stringUtil.uniqueId()}\r\n                            onClick={() => props.onSelect(data.value, data.text)}\r\n                            style={{ position: \"relative\" }}\r\n                            className={className}>\r\n                            <DropdownItem onHover={props.onHover} index={i} text={data.text} />\r\n                        </div>\r\n                    )\r\n                })}\r\n        </div> \r\n    }\r\n\r\n    return dropdownComponent;\r\n}\r\n\r\n\r\nexport default DynamicDropdown;","import React, { Component } from 'react'   \r\nimport ActionButton from '../../buttons/ActionButton';\r\n \r\n\r\nclass AddToCartButton extends Component {\r\n\r\n    render(){\r\n        return <ActionButton status=\"info btn-lg\" text={<i className=\"fa fa-cart-plus\"></i>} onClick={this.props.onClick} />\r\n     }\r\n\r\n}\r\nexport default AddToCartButton;","import React, { Component } from 'react'\r\nimport * as url from '../../../constant/Url'\r\nimport * as stringUtil from '../../../utils/StringUtil'\r\nimport InstantTable from '../../container/InstantTable';\r\nimport Card from '../../card/Card'; \r\n\r\nclass DetailProductPanel extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.getRowData = () => {\r\n            const product = this.props.product;\r\n            let row = [];\r\n            if (this.props.stockView) {\r\n                row = [\r\n                    { values: [\"Name\", product.name] },\r\n                    { values: [\"Remaining\", product.count + \" \" + product.unit.name] },\r\n                    { values: [\"Price\", stringUtil.beautifyNominal(product.price) + \",00\"] },\r\n                    { values: [\"Exp Date\", '-'] }\r\n                ]\r\n            } else {\r\n                row = [\r\n                    { values: [\"Name\", product.name + \"-\" + product.id] },\r\n                    { values: [\"Unit\", product.unit.name] },\r\n                    { values: [\"Category\", product.category.name] },\r\n                    { values: [\"Price\", stringUtil.beautifyNominal(product.price) + \",00\"] },\r\n                ];\r\n            }\r\n\r\n            return row;\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        console.log(\"detail stock of:\", this.props.product);\r\n    }\r\n\r\n    render() {\r\n        let product = this.props.product;\r\n        const defaultVal = spinner();\r\n        if (this.props.product == null || this.props.product.unit == null || this.props.product.category == null) {\r\n            product = {\r\n                name: defaultVal,\r\n                unit: {\r\n                    name: defaultVal\r\n                },\r\n                category: {\r\n                    name: defaultVal\r\n                },\r\n                price: 0\r\n            }\r\n        }\r\n\r\n        let productImageName = product.imageUrl;\r\n        if (productImageName) {\r\n            productImageName = productImageName.split(\"~\")[0];\r\n        }\r\n        let imageUrl = url.baseImageUrl + productImageName;\r\n\r\n        return (\r\n           <Card title=\"Product Detail\" content={\r\n                <table><tbody><tr valign=\"top\">\r\n                    <td>\r\n                        <InstantTable disabled={true} rows={this.getRowData()} />\r\n                    </td>\r\n                    <td><div className=\"img-panel rounded box-shadow\"><img src={imageUrl} width=\"300\" height=\"200\" /></div>\r\n                    </td></tr></tbody></table>\r\n           } /> \r\n        )\r\n    }\r\n\r\n}\r\n\r\nconst spinner = (props) => {\r\n    return (\r\n        <div className=\"spinner-border\" role=\"status\">\r\n            <span className=\"sr-only\">Loading...</span>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DetailProductPanel;","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport * as actions from '../../../redux/actionCreators'\r\nimport Label from '../../container/Label';\r\nimport InputField from '../../inputs/InputField';\r\nimport StockListTable from './StockListTable'\r\nimport Loader from '../../messages/Loader'\r\nimport TransactionReceipt from './TransactionReceipt'\r\nimport * as stringUtil from '../../../utils/StringUtil'\r\nimport ActionButtons from '../../buttons/ActionButtons'\r\nimport DynamicDropdown from '../../inputs/DynamicDropdown'\r\nimport { byId } from '../../../utils/ComponentUtil'\r\nimport * as componentUtil from '../../../utils/ComponentUtil'\r\nimport AddToCartButton from './AddToCartButton';\r\nimport DetailProductPanel from './DetailProductPanel';\r\nimport GridComponent from '../../container/GridComponent'\r\nimport Card from '../../card/Card';\r\n\r\nclass TransactionSelling extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            productName: \"\",\r\n            customerName: \"\", productFlowStock: {},\r\n            customer: {}, showDetail: false, productFlows: [], messageShow: false, messageType: \"\",\r\n            stockId: 0, quantity: 0,\r\n            activeField: \"\"\r\n        }\r\n\r\n        this.setActiveField = (id) => {\r\n            this.setState({ activeField: id });\r\n        }\r\n\r\n        this.getStockInfo = (id) => {\r\n            let stockId = id ? id : this.state.stockId;\r\n            this.props.getStockInfo(stockId, this.props.app);\r\n            this.setState({ stockId: id, showDetail: true })\r\n        }\r\n\r\n\r\n        this.isExistInTheChart = (productId) => {\r\n            if (this.state.productFlows == null) return false;\r\n            return this.getProductFlow(productId) != null;\r\n        }\r\n\r\n        this.addToCart = () => {\r\n            if (this.state.quantity <= 0) {\r\n                this.props.app.infoDialog(\"Please provide valid quantity!\"); return;\r\n            }\r\n            let quantity = this.state.quantity;\r\n            let productFlowStock = this.props.productFlowStock;\r\n            if (quantity > productFlowStock.count) {\r\n                this.props.app.infoDialog(\"Stock unavailable!\"); return;\r\n            }\r\n\r\n            // let productFlow = productFlowStock.id;\r\n            if (this.isExistInTheChart(productFlowStock.id))\r\n                if (!window.confirm(\"The product already exist in the chart, do you want to override it?\"))\r\n                    return;\r\n\r\n            let ID = Math.floor(Math.random() * 1000);\r\n            let newProductFlow = {\r\n                \"id\": ID,\r\n                \"product\": productFlowStock,\r\n                \"price\": productFlowStock.price,\r\n                \"count\": quantity,\r\n                // \"expiryDate\": productFlow.expiryDate,\r\n                \"flowReferenceId\": 0,//productFlow.id,\r\n                //stock list table identifier\r\n                \"entityId\": productFlowStock.id,\r\n            };\r\n\r\n            //update list in the state\r\n            this.addProductFlow(newProductFlow);\r\n            this.emptyForm();\r\n        }\r\n\r\n        this.addProductFlow = (productFlow) => {\r\n            let currentFlows = this.state.productFlows;\r\n            //update\r\n            if (this.getProductFlow(productFlow.flowReferenceId) != null) {\r\n                for (let index = 0; index < this.state.productFlows.length; index++)\r\n                    if (this.state.productFlows[index].flowReferenceId == productFlow.flowReferenceId) currentFlows[index] = productFlow;\r\n\r\n            } else\r\n                currentFlows.push(productFlow); //add new\r\n\r\n            this.setState({ productFlows: currentFlows });\r\n            this.showMessage(\"Success saving to chart\", \"success\");\r\n            componentUtil.clearFields(\"input-customer-name\");\r\n        }\r\n\r\n        this.getProductFlow = (productId) => {\r\n            if (this.state.productFlows == null) return null;\r\n            for (let index = 0; index < this.state.productFlows.length; index++) {\r\n                if (this.state.productFlows[index].product.id == productId) return this.state.productFlows[index];\r\n            }\r\n            return null;\r\n        }\r\n\r\n        this.emptyForm = () => {\r\n            this.setState({ productName: null, stockId: 0, quantity: 0 });\r\n        }\r\n\r\n        this.handleEdit = (stockId) => {\r\n            alert(\"will Edit: \" + stockId);\r\n            this.props.getStockInfo(stockId, this.props.app);\r\n            this.setState({ stockId: stockId, quantity: this.getProductFlow(stockId).count });\r\n        }\r\n\r\n        this.handleDelete = (stockId) => {\r\n            if (!window.confirm(\"Are you sure want to delete this from chart?\")) return;\r\n\r\n            if (!this.isExistInTheChart(stockId)) {\r\n                alert(\"Record does not exist in the chart!\");\r\n                return;\r\n            }\r\n            let currentFlows = this.state.productFlows;\r\n            for (let index = 0; index < this.state.productFlows.length; index++) {\r\n                if (this.state.productFlows[index].flowReferenceId == stockId) {\r\n                    currentFlows.splice(index, 1);\r\n                }\r\n            }\r\n\r\n            this.setState({ productFlows: currentFlows });\r\n        }\r\n\r\n        this.submitTransaction = () => {\r\n            /**\r\n             * check mandatory fields\r\n             */\r\n            if (this.state.customer.id == null || this.state.productFlows == null || this.state.productFlows.length == 0) {\r\n                this.props.app.infoDialog(\"Mandatory fields must not be empty!\");\r\n                return;\r\n            }\r\n\r\n            const app = this;\r\n\r\n            this.props.app.confirmDialog(\"Are you sure want to proceed?\", function (e) {\r\n                let request = { productFlows: app.state.productFlows, customer: app.state.customer };\r\n                app.props.submitPurchaseTransaction(request, app.props.app);\r\n            }, function (e) { });\r\n        }\r\n\r\n        this.endMessage = () => { this.setState({ messageShow: false }) }\r\n\r\n        this.showMessage = (text, type) => {\r\n            this.setState({ messageShow: true, messageText: text, messageType: type });\r\n        }\r\n\r\n        this.reset = () => {\r\n            componentUtil.clearFields(null);\r\n            this.setState({ customerName: null, customer: null, productName: null, product: null, productFlows: [], showDetail: false });\r\n            this.emptyForm();\r\n            this.props.resetPurchaseTransaction();\r\n        }\r\n\r\n        this.calculateTotalPrice = () => {\r\n            let totalPrice = 0;\r\n            if (this.state.productFlows) {\r\n                this.state.productFlows.forEach(productFlow => {\r\n                    totalPrice = totalPrice + productFlow.count * productFlow.product.price;\r\n                });\r\n            }\r\n            return stringUtil.beautifyNominal(totalPrice) + (\",00\");\r\n        }\r\n\r\n        this.getCustomerList = (value, id) => {\r\n            this.setState({ customerName: value });\r\n            this.setActiveField(id);\r\n            this.props.getCustomerList(value, this.props.app);\r\n        }\r\n\r\n        this.selectCustomer = (id) => {\r\n            if (this.props.customersData == null) {\r\n                alert(\"Data not found!\");\r\n                return;\r\n            }\r\n            for (let index = 0; index < this.props.customersData.length; index++)\r\n                if (this.props.customersData[index].id == id)\r\n                    this.setState({ customerName: this.props.customersData[index].name, customer: this.props.customersData[index] });\r\n            this.props.resetCustomers();\r\n        }\r\n\r\n\r\n        this.getProductStockList = (value, id) => {\r\n            this.setState({ productName: value });\r\n            this.setActiveField(id);\r\n            this.props.getProductStockList(value, this.props.app);\r\n        }\r\n\r\n        this.selectproduct = (productCode) => {\r\n            if (this.props.products == null) {\r\n                alert(\"Data not found!\");\r\n                return;\r\n            }\r\n            for (let i = 0; i < this.props.products.length; i++) {\r\n                if (this.props.products[i].code == productCode) {\r\n                    this.setState({ productName: this.props.products[i].name });\r\n                }\r\n            }\r\n\r\n            this.setState({ stockId: productCode });\r\n            this.getStockInfo(productCode);\r\n            this.props.resetProductStocks();\r\n        }\r\n\r\n        this.detailStockComponent = () => {\r\n            if (this.props.productFlowStock) {\r\n                return (<DetailProductPanel stockView={true} product={this.props.productFlowStock} />);\r\n            }\r\n            return <></>\r\n        }\r\n\r\n        this.buttonAddToCart = () => {\r\n            if (this.props.productFlowStock != null)\r\n                return <AddToCartButton onClick={this.addToCart} />\r\n            else\r\n                return <></>\r\n        }\r\n\r\n        this.messageComponent = () => {\r\n            if (this.state.messageShow == true) {\r\n                return <Loader withTimer={true} text={this.state.messageText} endMessage={this.endMessage} type={this.state.messageType} />\r\n            }\r\n            return <></>\r\n        }\r\n    }\r\n\r\n\r\n    componentDidMount() {\r\n        document.title = \"Selling\";\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        if (byId(this.state.activeField) != null) {\r\n            byId(this.state.activeField).focus();\r\n        }\r\n    }\r\n\r\n    getProductDropdownData() {\r\n        const productList = [];\r\n        if (this.props.products != null) {\r\n            for (let i = 0; i < this.props.products.length; i++) {\r\n                const product = this.props.products[i];\r\n                productList.push({ value: product.code, text: product.name });\r\n            }\r\n        }\r\n        return productList;\r\n    }\r\n\r\n    getCustomerDropdownData() {\r\n        const customerList = [];\r\n\r\n        if (this.props.customersData != null) {\r\n            for (let i = 0; i < this.props.customersData.length; i++) {\r\n                const customer = this.props.customersData[i];\r\n                customerList.push({ value: customer.id, text: customer.name });\r\n            }\r\n        }\r\n        return customerList;\r\n    }\r\n\r\n\r\n    render() {\r\n        let totalPrice = this.calculateTotalPrice();\r\n\r\n        let customerList = this.getCustomerDropdownData();\r\n        let productList = this.getProductDropdownData();\r\n\r\n        let formComponent = <div className=\"row\"><div className=\"col-5\">\r\n            <Card title=\"Transaction Detail\" content={<>\r\n                <GridComponent style={{gridRowGap:'5px'}} cols={2} items={[\r\n                    <Label text=\"Customer\" />,\r\n                    <DynamicDropdown value={this.state.customerName} onSelect={this.selectCustomer} dropdownList={customerList}\r\n                        onKeyUp={this.getCustomerList} id=\"input-customer-name-sell\" placeholder=\"customer name\" />,\r\n                    <Label text=\"Product\" />,\r\n                    <DynamicDropdown value={this.state.productName} onSelect={this.selectproduct} dropdownList={productList}\r\n                        onKeyUp={this.getProductStockList} id=\"input-product-name-sell\" placeholder=\"product name\" />,\r\n                    <Label text=\"Quantity\" />,\r\n                    <InputField id=\"input-quantity-sell\"\r\n                        value={this.state.quantity} onKeyUp={(value, id) => this.setState({ activeField: id, quantity: value })}\r\n                        type=\"number\" placeholder=\"quantity\" />\r\n                ]}\r\n                />\r\n                <this.buttonAddToCart />\r\n            </>}\r\n            /></div> <div className=\"col-7\">\r\n                <this.detailStockComponent /></div>\r\n        </div>\r\n\r\n        let buttonsData = [\r\n            { text: \"Back\", status: \"secondary\", onClick: () => this.props.setFeatureCode(null), id: \"btn-back\" },\r\n            { text: \"Back And Reset\", status: \"warning btn-sm\", onClick: () => { this.props.setFeatureCode(null); this.reset() }, id: \"btn-back\" },\r\n            { text: \"Reset\", status: 'danger btn-sm', id: \"btn-reset-trx\", onClick: this.reset }];\r\n\r\n        if (this.props.successTransaction) {\r\n            formComponent = <TransactionReceipt status=\"Success\" transactionData={this.props.transactionData} />\r\n        } else {\r\n            buttonsData.push({ id: \"btn-submit-trx\", status: 'success btn-sm', text: \"Submit Transaction\", onClick: this.submitTransaction });\r\n        }\r\n\r\n        return (\r\n            <div className=\"transaction-container\">\r\n                <this.messageComponent />\r\n\r\n                <h2>Selling {this.state.customer && this.state.customer.name ? <small>{this.state.customer.name}</small> : \"\"}</h2>\r\n                {formComponent}\r\n                <div>\r\n                    <ActionButtons buttonsData={buttonsData} />\r\n                </div>\r\n                {/* ======= product list ======== */}\r\n                <h3>Product List</h3>\r\n                <StockListTable disabled={this.props.successTransaction} handleEdit={this.handleEdit} handleDelete={this.handleDelete} productFlows={this.state.productFlows} />\r\n                <Label className=\"totalprice-info\" text={\"Total Price: IDR \" + totalPrice} />\r\n\r\n            </div >\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps = state => {\r\n    return {\r\n        productFlowStock: state.transactionState.productFlowStock,\r\n        transactionData: state.transactionState.transactionData,\r\n        successTransaction: state.transactionState.successTransaction,\r\n        customersData: state.transactionState.customersData,\r\n        products: state.transactionState.products\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    resetCustomers: () => dispatch(actions.resetCustomers()),\r\n    getStockInfo: (stockId, app) => dispatch(actions.getStockInfo(stockId, app)),\r\n    submitPurchaseTransaction: (request, app) => dispatch(actions.submitPurchaseTransaction(request, app)),\r\n    resetPurchaseTransaction: () => dispatch(actions.resetPurchaseTransaction()),\r\n    resetProductStocks: () => (dispatch(actions.resetProductStocks())),\r\n    getCustomerList: (name, app) => dispatch(actions.getCustomerList(name, app)),\r\n    getProductStockList: (name, app) => dispatch(actions.getProductStocks(name, app))\r\n})\r\nexport default (connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(TransactionSelling));","import React, { Component } from 'react'\r\nimport '../css/Error.css'\r\nimport '../css/Common.css'\r\n\r\nclass ErrorPage extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        document.title = \"Error Page\";\r\n        return (\r\n            <div className=\"section-container\">\r\n                <h2>{this.props.message}</h2>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default ErrorPage;","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport * as actions from '../../../redux/actionCreators'\r\n\r\nimport * as trxCss from './Transaction.css'\r\nimport Label from '../../container/Label';\r\nimport InputField from '../../inputs/InputField';\r\nimport DetailProductPanel from './DetailProductPanel';\r\nimport StockListTable from './StockListTable'\r\nimport Loader from '../../messages/Loader'\r\nimport TransactionReceipt from './TransactionReceipt'\r\nimport * as stringUtil from '../../../utils/StringUtil'\r\nimport ActionButtons from '../../buttons/ActionButtons'\r\nimport * as componentUtil from '../../../utils/ComponentUtil'\r\nimport { byId } from '../../../utils/ComponentUtil'\r\nimport DynamicDropdown from '../../inputs/DynamicDropdown'\r\nimport AddToCartButton from './AddToCartButton';\r\nimport GridComponent from '../../container/GridComponent';\r\nimport Card from '../../card/Card'\r\nimport BaseTransactionPage from './BaseTransactionPage';\r\n\r\nclass TransactionPurchasing\r\n    extends BaseTransactionPage {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            productName: \"\", supplierName: \"\", product: null, supplier: {}, showDetail: false, productFlows: [],\r\n            messageShow: false, messageType: \"\",\r\n            quantity: 0, price: 0, expiryDate: \"2020-01-01\",\r\n            activeField: \"\"\r\n        }\r\n\r\n        this.isExistInTheChart = (productId) => {\r\n            if (this.state.productFlows == null) return false;\r\n            return this.getProductFlow(productId) != null;\r\n        }\r\n\r\n        this.addToCart = () => {\r\n            if (this.state.quantity <= 0) {\r\n                this.props.app.infoDialog(\"Please provide valid quantity!\"); return;\r\n            }\r\n            let quantity = this.state.quantity;\r\n            let price = this.state.price;\r\n            let expDate = this.state.expiryDate;\r\n            let product = this.state.product;\r\n\r\n            if (this.isExistInTheChart(product.id))\r\n                if (!window.confirm(\"The product already exist in the chart, do you want to override it?\"))\r\n                    return;\r\n\r\n            let ID = Math.floor(Math.random() * 1000);\r\n            let newProductFlow = {\r\n                \"id\": ID,\r\n                \"product\": product,\r\n                \"price\": price,\r\n                \"count\": quantity,\r\n                \"expiryDate\": expDate,\r\n                //for stock list table identifier\r\n                \"entityId\": product.id\r\n            };\r\n\r\n            //update list in the state\r\n            this.addProductFlow(newProductFlow);\r\n            this.emptyForm();\r\n        }\r\n\r\n        this.addProductFlow = (productFlow) => {\r\n            let currentFlows = this.state.productFlows;\r\n            //update\r\n            if (this.getProductFlow(productFlow.product.id) != null) {\r\n                for (let index = 0; index < this.state.productFlows.length; index++) {\r\n                    if (this.state.productFlows[index].product.id == productFlow.product.id) {\r\n                        currentFlows[index] = productFlow;\r\n                    }\r\n                }\r\n            } else{\r\n                currentFlows.push(productFlow); //add new\r\n            }\r\n            \r\n            this.setState({ productFlows: currentFlows });\r\n            this.showMessage(\"Success saving to chart\", \"success\");\r\n\r\n        }\r\n\r\n        this.getProductFlow = (productId) => {\r\n            if (this.state.productFlows == null) return null;\r\n            for (let i = 0; i < this.state.productFlows.length; i++) {\r\n                if (this.state.productFlows[i].product.id == productId) return this.state.productFlows[i];\r\n            }\r\n            return null;\r\n        }\r\n\r\n        this.getProduct = (id) => {\r\n            if (this.state.products == null) return null;\r\n            for (let index = 0; index < this.state.products.length; index++) {\r\n                if (this.state.products[index].id == id) { return this.state.products[id]; }\r\n            }\r\n            return null;\r\n        }\r\n\r\n        this.handleEdit = (productId) => {\r\n            alert(\"will Edit: \" + productId);\r\n            let productFlow = this.getProductFlow(productId);\r\n            if (null == productFlow) {\r\n                alert(\"Data not found\");\r\n                return;\r\n            }\r\n            this.setState({ quantity: productFlow.count });\r\n            this.setState({ price: productFlow.price });\r\n            this.setState({ productName: productFlow.product.name });\r\n            this.setState({ expiryDate: productFlow.expiryDate });\r\n            this.setState({ product: productFlow.product })\r\n        }\r\n\r\n        this.handleDelete = (id) => {\r\n            if (!window.confirm(\"Are you sure want to delete this from chart?\")) return;\r\n\r\n            if (!this.isExistInTheChart(id)) {\r\n                alert(\"Record does not exist in the chart!\");\r\n                return;\r\n            }\r\n            let currentFlows = this.state.productFlows;\r\n            for (let index = 0; index < this.state.productFlows.length; index++) {\r\n                if (this.state.productFlows[index].product.id == id) {\r\n                    currentFlows.splice(index, 1);\r\n                }\r\n            }\r\n            this.setState({ productFlows: currentFlows });\r\n        }\r\n\r\n        this.submitTransaction = () => {\r\n            /**\r\n             * check mandatory fields\r\n             */\r\n            if (this.state.supplier.id == null || this.state.productFlows == null || this.state.productFlows.length == 0) {\r\n                this.props.app.infoDialog(\"Mandatory fields must not be empty!\")\r\n                return;\r\n            }\r\n\r\n            const app = this;\r\n            this.props.app.confirmDialog(\"Are you sure want to proceed?\", function (e) {\r\n                let request = { productFlows: app.state.productFlows, supplier: app.state.supplier };\r\n                app.props.submitSupplyTransaction(request, app.props.app);\r\n            }, function (e) { });\r\n        }\r\n\r\n        this.endMessage = () => { this.setState({ messageShow: false }) }\r\n\r\n        this.showMessage = (text, type) => {\r\n            this.setState({ messageShow: true, messageText: text, messageType: type });\r\n        }\r\n\r\n        this.reset = () => {\r\n            componentUtil.clearFields(null);\r\n            this.setState({\r\n                supplier: null,\r\n                productFlows: [], showDetail: false, product: null,\r\n                supplierName: null, productName: null, expiryDate: null, quantity: null, price: null\r\n            });\r\n\r\n            this.props.resetPurchaseTransaction();\r\n        }\r\n\r\n        this.emptyForm = () => {\r\n            //emoty states\r\n            this.setState({\r\n                productName: null, expiryDate: null, quantity: null, price: null\r\n            });\r\n\r\n            this.emptyFormValues();\r\n        }\r\n\r\n        this.setActiveField = (id) => {\r\n            this.setState({ activeField: id });\r\n        }\r\n\r\n        this.calculateTotalPrice = () => {\r\n            let totalPrice = 0;\r\n            if (this.state.productFlows)\r\n                this.state.productFlows.forEach(productFlow => {\r\n                    totalPrice = totalPrice + productFlow.count * productFlow.product.price;\r\n                });\r\n\r\n            return stringUtil.beautifyNominal(totalPrice) + (\",00\");\r\n        }\r\n\r\n        this.getSupplierList = (value, id) => {\r\n            if (value == null || value.trim() == \"\") { return; }\r\n            this.setState({ supplierName: value });\r\n            this.props.getSupplierList(value, this.props.app);\r\n            this.setActiveField(id);\r\n        }\r\n\r\n        this.selectSupplier = (id) => {\r\n            if (this.props.suppliers == null) {\r\n                alert(\"Data not found!\");\r\n                return;\r\n            }\r\n            for (let i = 0; i < this.props.suppliers.length; i++)\r\n                if (this.props.suppliers[i].id == id)\r\n                    this.setState({ supplierName: this.props.suppliers[i].name, supplier: this.props.suppliers[i] });\r\n            this.props.resetSuppliers();\r\n        }\r\n\r\n        this.getProductList = (value, id) => {\r\n            if (value == null || value.trim() == \"\") { return; }\r\n            this.addFormFieldId(id);\r\n            this.setState({ showDetail: true, productName: value })\r\n            this.props.getProductList(value, this.props.app);\r\n            this.setActiveField(id);\r\n        }\r\n\r\n        this.selectProduct = (id) => {\r\n            if (this.props.products == null) {\r\n                alert(\"Data not found!\");\r\n                return;\r\n            }\r\n            for (let i = 0; i < this.props.products.length; i++)\r\n                if (this.props.products[i].id == id)\r\n                    this.setState({ productName: this.props.products[i].name, product: this.props.products[i] });\r\n            this.props.resetProducts();\r\n\r\n        }\r\n\r\n        this.messageComponent = () => {\r\n            if (this.state.messageShow == true) {\r\n                return <Loader withTimer={true} text={this.state.messageText} endMessage={this.endMessage} type={this.state.messageType} />\r\n            }\r\n            return <></>\r\n        }\r\n    }\r\n    componentDidMount() {\r\n        if (this.props.resetPurchaseTransaction) {\r\n            this.props.resetPurchaseTransaction();\r\n        }\r\n        document.title = \"Purchasing\";\r\n        this.formFieldIds = [];\r\n        this.props.resetSuppliers();\r\n\r\n    }\r\n    componentDidUpdate() {\r\n        if (byId(this.state.activeField) != null) {\r\n            byId(this.state.activeField).focus();\r\n        }\r\n    }\r\n\r\n    getSupplierDropdownData() {\r\n        const supplierList = [];\r\n        if (this.props.suppliers != null)\r\n            for (let index = 0; index < this.props.suppliers.length; index++) {\r\n                const supplier = this.props.suppliers[index];\r\n                supplierList.push({ value: supplier.id, text: supplier.name });\r\n            }\r\n        return supplierList;\r\n    }\r\n\r\n    getProductDropdownData() {\r\n        const productList = [];\r\n        if (this.props.products != null)\r\n            for (let index = 0; index < this.props.products.length; index++) {\r\n                const product = this.props.products[index];\r\n                productList.push({ value: product.id, text: product.name });\r\n            }\r\n\r\n        return productList;\r\n    }\r\n    render() {\r\n        let totalPrice = this.calculateTotalPrice();\r\n\r\n        const detailStock = this.state.product ? <DetailProductPanel product={this.state.product} /> : null;\r\n        const supplierList = this.getSupplierDropdownData();\r\n        const productList = this.getProductDropdownData();\r\n\r\n        let formComponent = <div className=\"row\">\r\n            <div className=\"col-5\">\r\n                <Card title=\"Transaction Detail\" content={<>\r\n                    <GridComponent style={{gridRowGap:'5px'}} cols={2}\r\n                        items={[\r\n                            <Label text=\"Supplier\" />,\r\n                            <DynamicDropdown onSelect={this.selectSupplier} dropdownList={supplierList}\r\n                                value={this.state.supplierName}\r\n                                onKeyUp={this.getSupplierList} id=\"input-supplier-name-purc\" placeholder=\"supplier name\" />,\r\n                            <Label text=\"Product\" />,\r\n                            <DynamicDropdown onSelect={this.selectProduct} id=\"input-product-name-purc\" dropdownList={productList}\r\n                                value={this.state.productName}\r\n                                onKeyUp={this.getProductList} placeholder=\"input product name\" />,\r\n                            <Label text=\"Price\" />,\r\n                            <InputField id=\"input-product-price-purc\"\r\n                                value={this.state.price} onKeyUp={(value, id) => {\r\n                                    this.setState({ activeField: id, price: value }); this.addFormFieldId(id);\r\n                                }}\r\n                                type=\"number\" placeholder=\"input product price\" />,\r\n                            <Label text=\"Quantity\" />,\r\n                            <InputField id=\"input-quantity-purc\"\r\n                                value={this.state.quantity} onKeyUp={(value, id) => {\r\n                                    this.setState({ activeField: id, quantity: value });  this.addFormFieldId(id);\r\n                                }}\r\n                                type=\"number\" placeholder=\"quantity\" />,\r\n                            <Label text=\"Expiry Date\" />,\r\n                            <InputField id=\"input-exp-date-purc\"\r\n                                value={this.state.expiryDate} onKeyUp={(value, id) => {\r\n                                    this.setState({ activeField: id, expiryDate: value });   this.addFormFieldId(id);\r\n                                }}\r\n                                type=\"date\" placeholder=\"input product exp date\" />\r\n                        ]}\r\n                    />\r\n                    {this.state.product != null ? <AddToCartButton onClick={this.addToCart} /> : \"\"}\r\n                </>} />\r\n            </div>\r\n            <div className=\"col-7\">{detailStock}</div>\r\n        </div>;\r\n\r\n        let buttonsData = [\r\n            { text: \"Back\", status: \"secondary\", onClick: () => this.props.setFeatureCode(null), id: \"btn-back\" },\r\n            { text: \"Back And Reset\", status: \"warning\", onClick: () => { this.props.setFeatureCode(null); this.reset() }, id: \"btn-back-reset\" },\r\n            { text: \"Reset\", status: 'danger', id: \"btn-reset-trx\", onClick: this.reset }];\r\n\r\n        if (this.props.successTransaction) {\r\n            formComponent =\r\n                <TransactionReceipt status=\"Success\" transactionData={this.props.transactionData} />\r\n        } else {\r\n            buttonsData.push({ id: \"btn-submit-trx\", status: 'success btn-sm', text: \"Submit Transaction\", onClick: this.submitTransaction });\r\n        }\r\n\r\n        return (\r\n            <div className=\"transaction-container\">\r\n                <this.messageComponent />\r\n                <h2>Purchasing {this.state.supplier && this.state.supplier.name ? <small>{this.state.supplier.name}</small> : null}</h2>\r\n\r\n                {formComponent}\r\n                <div>\r\n                    <ActionButtons buttonsData={buttonsData} />\r\n                </div>\r\n                {/* ======= product list ======== */}\r\n                <h3>Product List</h3>\r\n                <StockListTable purchasing={true} disabled={this.props.successTransaction} handleEdit={this.handleEdit} handleDelete={this.handleDelete} productFlows={this.state.productFlows} />\r\n                <Label className=\"totalprice-info\" text={\"Total Price: IDR \" + totalPrice} />\r\n\r\n            </div >\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps = state => {\r\n    return {\r\n        selectedProduct: state.transactionState.selectedProduct,\r\n        transactionData: state.transactionState.transactionData,\r\n        successTransaction: state.transactionState.successTransaction,\r\n        suppliers: state.shopState.suppliersData.entities,\r\n        products: state.transactionState.productsData\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    getProductList: (productName, app) => dispatch(actions.getProductListTrx(productName, app)),\r\n    submitSupplyTransaction: (request, app) => dispatch(actions.submitSupplyTrx(request, app)),\r\n    resetPurchaseTransaction: () => dispatch(actions.resetPurchaseTransaction()),\r\n    resetSuppliers: () => dispatch(actions.resetSuppliers()),\r\n    resetProducts: () => dispatch(actions.resetProducts()),\r\n    getSupplierList: (name, app) => dispatch(actions.getSupplierList({ name: name, page: 0 }, app))\r\n})\r\nexport default (connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(TransactionPurchasing));","import React, { Component } from 'react'\r\n\r\nclass BaseTransactionPage extends Component {\r\n\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.formFieldIds = [];\r\n    } \r\n\r\n    addFormFieldId(id) {\r\n        if (this.formFieldIds.indexOf(id) >= 0) {\r\n\r\n        } else {\r\n            this.formFieldIds.push(id);\r\n        }\r\n    }\r\n\r\n    emptyFormValues(){\r\n        for (let i = 0; i < this.formFieldIds.length; i++) {\r\n            const id = this.formFieldIds[i];\r\n            try {\r\n                document.getElementById(id).value = null;\r\n            } catch (e) { }\r\n        }\r\n    }\r\n\r\n}\r\n\r\nexport default BaseTransactionPage;","import React, { Component } from 'react' \r\nimport '../css/Chart.css'\r\n\r\nclass Chart extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {firstLoad:true, counter:1};\r\n\r\n        this.update = () => {\r\n            let counter = this.state.counter + 1;\r\n            this.setState({counter:counter})\r\n            if(this.state.firstLoad&&counter > 10){\r\n                this.setState({firstLoad:false});\r\n                clearInterval(this.state.intervalId);\r\n            }\r\n        }\r\n    }\r\n\r\n    componentDidMount(){\r\n       // this.setState({firstLoad:false})\r\n       if(this.state.firstLoad){\r\n           let intervalId = setInterval(this.update, 1, null);\r\n           this.setState({intervalId : intervalId});\r\n       }\r\n    }\r\n\r\n    render() {\r\n        \r\n\r\n        let percentage = this.state.firstLoad?0: this.props.value / this.props.maxValue * 100;\r\n        let orientation = this.props.orientation ? this.props.orientation : \"horizontal\";\r\n        const width = this.props.width ? this.props.width : 400;\r\n        if (percentage < 0 || this.props.maxValue <= 0) {\r\n            percentage = 0;\r\n        }\r\n        let chartStyle = {\r\n            width: percentage + '%'\r\n        };\r\n        let mainStyle = {\r\n            width: width + 'px',\r\n            height: '20px'\r\n        };\r\n        let legendStyle = {\r\n            marginLeft: percentage / 100 * width + 'px',\r\n        };\r\n        if (orientation == \"vertical\") {\r\n            mainStyle = {\r\n                height: this.props.width ? this.props.width : '400px',\r\n                width: '20px',\r\n                verticalAlign: 'bottom',\r\n\r\n            };\r\n            chartStyle = {\r\n                height: percentage + '%',\r\n                marginBottom:0\r\n            };\r\n            legendStyle = {\r\n                marginTop: percentage / 100 * width + 'px',\r\n                writingMode: 'vertical-rl',\r\n                textOrientation: 'mixed'\r\n            };\r\n            if (this.props.type == \"success\") {\r\n                chartStyle.marginLeft = \"5px\";\r\n                mainStyle.borderLeft = 'solid 1px gray';\r\n            } else if (this.props.type == \"warning\") {\r\n                chartStyle.marginRight = \"5px\";\r\n            }\r\n        } else {\r\n            /**\r\n             * horizontal====\r\n             */ \r\n            if (this.props.type == \"success\") {\r\n               \r\n                chartStyle.marginTop = \"5px\";\r\n            } else if (this.props.type == \"warning\") {\r\n                chartStyle.marginBottom = \"5px\";\r\n            }\r\n        }\r\n        let barClassName = this.props.type ? this.props.type : \"regular\";\r\n        return (\r\n            <div className=\"chart\" style={mainStyle}>\r\n                <div className={\"char-bar \" + barClassName + \"-chart\"} style={chartStyle}><span style={legendStyle}>{this.props.text}</span></div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Chart;","import React, { Component } from 'react' \r\nimport ComboBox from './ComboBox';\r\n\r\nclass ComboBoxes extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.handleOnChange = () => {\r\n            if (this.props.onChange)\r\n                this.props.onChange(document.getElementById(this.props.id).value);\r\n        }\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (this.props.value) {\r\n            document.getElementById(this.props.id).value = this.props.value;\r\n        }\r\n    }\r\n\r\n    render() {\r\n        let comboBoxes = [];\r\n         \r\n\r\n        if (this.props.values) { comboBoxes = this.props.values; }\r\n\r\n        const gridAutoColumns = \"auto \".repeat(comboBoxes.length);\r\n\r\n        return (<div style={{ width:'max-content', display:'grid', gridTemplateColumns:gridAutoColumns}} >\r\n            {comboBoxes.map(comboBox => {\r\n                let options = [];\r\n                if (comboBox.options) { options = comboBox.options; }\r\n                return (\r\n                    <ComboBox\r\n                        label={comboBox.label}\r\n                        defaultValue={comboBox.defaultValue ? comboBox.defaultValue : \"\"}\r\n                        key={\"key_\" + comboBox.id} id={comboBox.id}\r\n                        onChange={comboBox.handleOnChange}\r\n                        options={options} />\r\n                )\r\n            })}\r\n\r\n        </div>)\r\n    }\r\n}\r\n\r\nexport default ComboBoxes;","import React, { Component } from 'react'\r\nimport Label from '../components/container/Label'\r\nimport * as componentUtil from './ComponentUtil'\r\nimport InstantTable from './../components/container/InstantTable';\r\nimport ComboBoxes from './../components/inputs/ComboBoxes';\r\n\r\nexport const FilterBox = props => {\r\n    return (\r\n        <div className=\"filter-box rounded\" >\r\n            <InstantTable valign=\"bottom\" rows={props.rows} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport const DateSelectionFrom = (props) => {\r\n    return (\r\n        <ComboBoxes values={[{\r\n            label: \"From Month\",\r\n            id: \"select-month-from\",\r\n            defaultValue: props.monthVal,\r\n            options: componentUtil.getDropdownOptionsMonth(),\r\n            handleOnChange: props.handleOnChangeMfrom\r\n        }, {\r\n            label: \"Year\",\r\n            id: \"select-year-from\",\r\n            defaultValue: props.yearVal,\r\n            options: componentUtil.getDropdownOptionsYear(props.years[0], props.years[1]),\r\n            handleOnChange: props.handleOnChangeYfrom\r\n        }]} />)\r\n}\r\n\r\nexport const DateSelectionTo = (props) => {\r\n    return (\r\n        <ComboBoxes values={[{\r\n            label: \"To Month\",\r\n            id: \"select-month-to\",\r\n            defaultValue: props.monthVal,\r\n            options: componentUtil.getDropdownOptionsMonth(),\r\n            handleOnChange: props.handleOnChangeMto\r\n        }, {\r\n            label: \"Year\",\r\n            id: \"select-year-to\",\r\n            defaultValue: props.yearVal,\r\n            options: componentUtil.getDropdownOptionsYear(props.years[0], props.years[1]),\r\n            handleOnChange: props.handleOnChangeYto\r\n        }]} />)\r\n}","import React, { Component } from 'react'\r\nimport GridComponent from './../../container/GridComponent';\r\nimport Label from './../../container/Label';\r\nconst baseRowData = {\r\n    group: 1,\r\n    index: 1,\r\n    series: \"earn_amt\",\r\n    value: 1,\r\n    label: 1,\r\n    color: 'rgb(10,200,10)'\r\n}\r\nconst baseGroup = {\r\n    value: 1,\r\n    label: 'August 2020'\r\n}\r\nclass GraphChart extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    isHorizontal() {\r\n        return this.props.orientation == 'horizontal';\r\n    }\r\n\r\n    getChartComponents() {\r\n\r\n        const components = [];\r\n        const chartData = this.props.chartData;\r\n        const chartGroups = this.props.chartGroups;\r\n        \r\n\r\n        for (let g = 0; g < chartGroups.length; g++) {\r\n            const group = chartGroups[g];\r\n\r\n            const groupedComponents = new Array();\r\n            for (let i = 0; i < chartData.length; i++) {\r\n                const element = chartData[i];\r\n                if (element.group == group.value) {\r\n                    const component = <ChartItem orientation={this.props.orientation} element={element} maxValue={this.props.maxValue} />\r\n                    groupedComponents.push(component);\r\n                }\r\n            }\r\n\r\n            let groupedComponent;\r\n            if (this.isHorizontal()) {\r\n                groupedComponent = \r\n                (<div style={{borderBottom: 'solid 1px #cccccc'}} className=\"row\">\r\n                    <div className=\"col-2\"><Label style={{ fontSize: '0.9em', fontFamily: 'TNR' }} text={group.label} /></div>\r\n                    <div className=\"col-10\">{groupedComponents.map(g => g)}</div>\r\n                </div>)\r\n            } else {\r\n                const width = (20 + 30)*groupedComponents.length;\r\n                const gridTemplateColumns = ((20 + 30)+'px ').repeat(groupedComponents.length);\r\n                groupedComponent = \r\n                (<div style={{borderRight: 'solid 1px #cccccc'}}>\r\n                    <div style={{ display: 'grid', width: width+'px', gridTemplateColumns:  gridTemplateColumns}}>{groupedComponents.map(g => g)}</div>\r\n                    <div style={{ padding:'3px', textAlign:'center' }}><Label style={{ fontSize: '0.9em', fontFamily: 'TNR' }} text={group.label} /></div>\r\n                </div>)\r\n            }\r\n            components.push(groupedComponent);\r\n        }\r\n        return components;\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <div className=\"graph-chart\" style={{ width: '80%' }}>\r\n                <GridComponent cols={this.isHorizontal() ? 1 : this.props.chartGroups.length} \r\n                style={{ width: this.isHorizontal()?'100%':'max-content' }} items={this.getChartComponents()} />\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nfunction ChartItem(props) {\r\n    const element = props.element;\r\n    const value = element.value ? element.value : 0;\r\n    let percentage = (value / props.maxValue) * 100;\r\n    const orientation = props.orientation;\r\n    const isHorizonal = orientation == 'horizontal';\r\n\r\n    let style;\r\n    let bgStyle = { margin: '3px', fontSize: '0.6em' };\r\n    let className;\r\n    if (isHorizonal) {\r\n        style = {\r\n            backgroundColor: element.color ? element.color : '#cccccc',\r\n            width: percentage + '%',\r\n            height: '20px'\r\n        }\r\n        bgStyle.backgroundColor = '#ffffff';\r\n        bgStyle.width = '100%';\r\n        bgStyle.height = '20px';\r\n\r\n    } else {\r\n        style = {\r\n            backgroundColor: '#ffffff',\r\n            height: (100 - percentage) + '%',\r\n            width: '20px'\r\n        }\r\n        bgStyle.backgroundColor = element.color ? element.color : '#cccccc';\r\n        bgStyle.height = '200px';\r\n        bgStyle.width = '20px'; \r\n        bgStyle.margin = 'auto';\r\n       \r\n    }\r\n    return (\r\n        <div className={className}>\r\n            <div style={bgStyle}>\r\n                <div style={style} >{isHorizonal?element.label:null}</div>\r\n            </div>\r\n            {!isHorizonal?<div style={{fontSize:'0.6em',  transform: 'rotate(20deg)'}} >{element.label}</div>:null}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default GraphChart;","export const MONTHS = [\r\n    \"January\",\r\n    \"February\",\r\n    \"March\",\r\n    \"April\",\r\n    \"May\",\r\n    \"June\",\r\n    \"July\",\r\n    \"August\",\r\n    \"September\",\r\n    \"October\",\r\n    \"November\",\r\n    \"December\"\r\n]\r\n\r\n","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport * as actions from '../../../redux/actionCreators'\r\n\r\nimport * as stringUtil from '../../../utils/StringUtil'\r\nimport ActionButtons from '../../buttons/ActionButtons'\r\nimport InstantTable from '../../container/InstantTable'\r\nimport * as componentUtil from '../../../utils/ComponentUtil'\r\nimport { byId } from '../../../utils/ComponentUtil' \r\nimport Chart from '../../Chart'\r\nimport * as creator from '../../../utils/ComponentCreator'\r\nimport InputField from '../../inputs/InputField'\r\nimport GraphChart from './GraphChart';\r\nimport { MONTHS } from './../../../utils/DateUtil';\r\n\r\nclass Cashflow\r\n    extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        const date = new Date();\r\n\r\n        this.state = {\r\n            chartOrientation: \"horizontal\",\r\n            fromMonth: date.getMonth() + 1, fromYear: date.getFullYear(),\r\n            toMonth: date.getMonth() + 1, toYear: date.getFullYear()\r\n        }\r\n        this.getCashflowDetail = () => {\r\n            if (!componentUtil.checkExistance(\"select-month-from\", \"select-month-to\",\r\n                \"select-year-from\", \"select-year-to\")) {\r\n                return;\r\n            }\r\n            let request = {\r\n                fromMonth: this.state.fromMonth,//byId(\"select-month-from\").value,\r\n                fromYear: this.state.fromYear,// byId(\"select-year-from\").value,\r\n                toMonth: this.state.toMonth,//byId(\"select-month-to\").value,\r\n                toYear: this.state.toYear,// byId(\"select-year-to\").value,\r\n            }\r\n            this.props.getCashflowDetail(request, this.props.app);\r\n        }\r\n\r\n        this.onChangeChartOrientation = (value) => {\r\n            if (value == 'h')\r\n                this.setState({ chartOrientation: 'horizontal' })\r\n            if (value == 'v')\r\n                this.setState({ chartOrientation: 'vertical' })\r\n            console.log(\"Selected?\", byId(\"radio-orientation-\" + value).checked);\r\n\r\n        }\r\n\r\n        this.constructFilterBox = () => {\r\n\r\n            let isChartHorizontal = this.state.chartOrientation == \"horizontal\";\r\n            let isChartVertical = this.state.chartOrientation == \"vertical\";\r\n\r\n            let inputRadio = \r\n            (<div className=\"row\">\r\n                <InputField key=\"radio-o-h\" checked={isChartHorizontal} name=\"orientation\" onChange={() => this.onChangeChartOrientation('h')} type=\"radio\"\r\n                    id=\"radio-orientation-h\" text=\"Horizontal orientation\" />\r\n                <InputField key=\"radio-o-v\" checked={isChartVertical} name=\"orientation\" onChange={() => this.onChangeChartOrientation('v')} type=\"radio\"\r\n                    id=\"radio-orientation-v\" text=\"Vertical orientation\" />\r\n            </div>);\r\n\r\n            let filterButtons = <ActionButtons buttonsData={[\r\n                { text: \"Back\", onClick: () => this.props.setFeatureCode(null), id: \"btn-back\" },\r\n                { text: <i className=\"fas fa-search\"></i>, onClick: this.getCashflowDetail, status: \"success\", id: \"btn-get-cashflow-detail\" }]}\r\n            />;\r\n\r\n            return (\r\n                <creator.FilterBox rows={[{\r\n                    values: [<creator.DateSelectionFrom years={this.props.transactionYears}\r\n                        monthVal={this.state.fromMonth} yearVal={this.state.fromYear}\r\n                        handleOnChangeMfrom={(value) => this.setState({ fromMonth: value })}\r\n                        handleOnChangeYfrom={(value) => this.setState({ fromYear: value })}\r\n                    />,\r\n                    <creator.DateSelectionTo years={this.props.transactionYears}\r\n                        monthVal={this.state.toMonth} yearVal={this.state.toYear}\r\n                        handleOnChangeMto={(value) => this.setState({ toMonth: value })}\r\n                        handleOnChangeYto={(value) => this.setState({ toYear: value })} />, filterButtons, inputRadio]\r\n                }]} />)\r\n        }\r\n\r\n        this.constructFilterInfo = () => {\r\n            return (<div>\r\n                {\"From \"}\r\n                {stringUtil.monthYearString(this.state.fromMonth, this.state.fromYear)}\r\n                {\" to \"}\r\n                {stringUtil.monthYearString(this.state.toMonth, this.state.toYear)}\r\n            </div>);\r\n        }\r\n    }\r\n    componentDidMount() {\r\n        document.title = \"Cashflow\";\r\n        this.getCashflowDetail();\r\n    }\r\n    componentDidUpdate() {\r\n    }\r\n\r\n    render() {\r\n\r\n        let filterInfo = this.constructFilterInfo();\r\n\r\n        const cashflowDetail = this.props.cashflowDetail != null ? this.props.cashflowDetail : { supplies: [], purchases: [] };\r\n        const maxValue = this.props.cashflowDetail != null ? this.props.cashflowDetail.maxValue : 0;\r\n\r\n        const filterBox = this.constructFilterBox();\r\n\r\n        const cashflowDataRows = new Array();\r\n        console.log(\"cashflowDetail: \", cashflowDetail);\r\n        let chartIndex = 0;\r\n        const chartGroups = new Array();\r\n        for (let i = 0; i < cashflowDetail.supplies.length; i++, chartIndex += 2) {\r\n            const spending = cashflowDetail.supplies[i];\r\n            const earning = cashflowDetail.purchases[i];\r\n            const period = MONTHS[earning.month-1] +\" \" + earning.year;\r\n            const earningAmount = stringUtil.beautifyNominal(earning.amount);\r\n            const spendingAmount = stringUtil.beautifyNominal(spending.amount);\r\n            const earningCount = stringUtil.beautifyNominal(earning.count);\r\n            const spendingCount = stringUtil.beautifyNominal(spending.count);\r\n\r\n            //earning\r\n            cashflowDataRows.push({\r\n                group: i,\r\n                index: chartIndex,\r\n                series: \"earn_amt\",\r\n                value: earning.amount,\r\n                label: earningAmount,\r\n                color: 'rgb(10,200,10)'\r\n            });\r\n            // cashflowDataRows.push({\r\n            //     index: chartIndex, \r\n            //     series: \"earn_qty\",\r\n            //     value: earning.count,  \r\n            //     label: earningCount,\r\n            // });\r\n\r\n\r\n            //spending\r\n            cashflowDataRows.push({\r\n                group: i,\r\n                index: chartIndex + 1,\r\n                series: \"spend_amt\",\r\n                value: spending.amount,\r\n                label: spendingAmount,\r\n                color: 'rgb(200,10,10)'\r\n            });\r\n            // cashflowDataRows.push({\r\n            //     index: chartIndex+1, \r\n            //     series: \"spend_qty\",\r\n            //     value: spending.count,  \r\n            //     label: spendingCount,\r\n            // }); \r\n            chartGroups.push({ value: i, label: period });\r\n        }\r\n\r\n        let cashflowListComponent = <div className=\"cashflow-list\" style={{ width: '70vw', overflow: 'scroll'}}>\r\n            <GraphChart chartGroups={chartGroups} maxValue={maxValue} chartData={cashflowDataRows} orientation={this.state.chartOrientation} />\r\n\r\n        </div>\r\n        return (\r\n            <div className=\"cashflow-container\">\r\n                <h2>Cashflow Detail</h2>\r\n                {filterBox}\r\n                {filterInfo}\r\n                <div><p></p></div>\r\n                {cashflowListComponent}\r\n            </div>\r\n        )\r\n    }\r\n\r\n\r\n}\r\nconst mapStateToProps = state => {\r\n    return {\r\n        cashflowDetail: state.transactionState.cashflowDetail\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    getCashflowDetail: (request, app) => dispatch(actions.getCashflowDetail(request, app))\r\n})\r\nexport default (connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(Cashflow));","import React, { Component } from 'react'\r\nimport * as stringUtil from '../../../utils/StringUtil'\r\nimport InstantTable from '../../container/InstantTable';\r\nimport Chart from '../../Chart';\r\nimport ActionButton from '../../buttons/ActionButton';\r\n\r\nclass ProductSalesDetail extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.goBack = () => {\r\n            if (this.props.goBack)\r\n                this.props.goBack();\r\n        }\r\n    }\r\n\r\n    render() {\r\n        let chartRows = new Array();\r\n        let maxValue = 0;\r\n\r\n        console.log(\"this.props.productSalesDetails : \", this.props.productSalesDetails);\r\n\r\n        const productName = this.props.productSalesDetails && this.props.productSalesDetails.entity ? this.props.productSalesDetails.entity.name : \"\";\r\n\r\n        let entities = new Array();\r\n        if (this.props.productSalesDetails && this.props.productSalesDetails.entities != null) {\r\n            entities = this.props.productSalesDetails.entities;\r\n            maxValue = this.props.productSalesDetails.maxValue;\r\n        }\r\n\r\n        for (let i = 0; i < entities.length; i++) {\r\n            const salesData = entities[i];\r\n            chartRows.push({\r\n                id: \"row-detail-product-\" + i,\r\n                values: [\r\n                    stringUtil.monthYearString(salesData.month, salesData.year),\r\n                    <Chart \r\n                        text={salesData.sales}\r\n                        type={\"success\"}\r\n                        width={450}\r\n                        value={salesData.sales}\r\n                        maxValue={maxValue} />\r\n                ]\r\n            });\r\n        }\r\n\r\n        return (<div>\r\n            <h2>Sales Detail: {productName} </h2>\r\n            <ActionButton onClick={this.goBack} text=\"Back\" />\r\n            <InstantTable rows={chartRows} />\r\n        </div>)\r\n    }\r\n}\r\n\r\nexport default ProductSalesDetail;","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport * as actions from '../../../redux/actionCreators'\r\n\r\nimport ActionButton from '../../buttons/ActionButton'\r\nimport * as stringUtil from '../../../utils/StringUtil'\r\nimport ActionButtons from '../../buttons/ActionButtons'\r\nimport InstantTable from '../../container/InstantTable'\r\nimport * as componentUtil from '../../../utils/ComponentUtil'\r\nimport { byId } from '../../../utils/ComponentUtil'\r\nimport Chart from '../../Chart'\r\nimport * as creator from '../../../utils/ComponentCreator'\r\nimport InputField from '../../inputs/InputField'\r\nimport Label from '../../container/Label'\r\nimport ProductSalesDetail from './ProductSalesDetail'\r\nimport GraphChart from './GraphChart'\r\n\r\nclass ProductSales\r\n    extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        const date = new Date();\r\n        this.state = {\r\n            showDetail: false, productDetailId: null,\r\n            chartOrientation: \"horizontal\", page: 0, updated: new Date(),\r\n            fromMonth: date.getMonth() + 1, fromYear: date.getFullYear(),\r\n            toMonth: date.getMonth() + 1, toYear: date.getFullYear(),\r\n            productName: null\r\n        }\r\n        this.getProductSales = (loadMore, _page) => {\r\n            this.setState({ page: _page, productDetailId: null });\r\n            if (!componentUtil.checkExistance(\"select-month-from\", \"select-month-to\",\r\n                \"select-year-from\", \"select-year-to\")) {\r\n                return;\r\n            }\r\n            let request = {\r\n                page: _page,\r\n                fromMonth: this.state.fromMonth,//byId(\"select-month-from\").value,\r\n                fromYear: this.state.fromYear,// byId(\"select-year-from\").value,\r\n                toMonth: this.state.toMonth,//byId(\"select-month-to\").value,\r\n                toYear: this.state.toYear,// byId(\"select-year-to\").value,\r\n                productName: this.state.productName,\r\n                //special fro laod more case\r\n                loadMore: loadMore,\r\n                referrer: this\r\n            }\r\n\r\n            this.props.getProductSales(request);\r\n        }\r\n\r\n        this.getProductSalesDetail = (productId) => {\r\n            if (this.state.productDetailId != productId) {\r\n\r\n                let request = {\r\n                    page: 0,\r\n                    fromMonth: this.state.fromMonth,//byId(\"select-month-from\").value,\r\n                    fromYear: this.state.fromYear,// byId(\"select-year-from\").value,\r\n                    toMonth: this.state.toMonth,//byId(\"select-month-to\").value,\r\n                    toYear: this.state.toYear,// byId(\"select-year-to\").value, \r\n                    productId: productId\r\n                }\r\n\r\n                this.props.getProductSalesDetail(request, this.props.app);\r\n            }\r\n            this.setState({ showDetail: true, productDetailId: productId })\r\n        }\r\n\r\n        /**\r\n        * this method is called in trxReducer\r\n        */\r\n        this.refresh = () => {\r\n            console.log(\"++reresh++\");\r\n            this.setState({ updated: new Date() });\r\n        }\r\n\r\n        this.onChangeChartOrientation = (value) => {\r\n            if (value == 'h')\r\n                this.setState({ chartOrientation: 'horizontal' })\r\n            if (value == 'v')\r\n                this.setState({ chartOrientation: 'vertical' })\r\n        }\r\n\r\n        this.loadMore = () => {\r\n            let currentPage = this.state.page;\r\n\r\n            this.getProductSales(true, currentPage + 1);\r\n        }\r\n\r\n        this.resetPage = () => {\r\n            this.setState({ page: 0 });\r\n        }\r\n\r\n        this.setRequestProductName = (value, id) => {\r\n            this.setState({ productName: value, activeField: id })\r\n        }\r\n\r\n        this.constructFilterBox = () => {\r\n\r\n            return (<creator.FilterBox rows={[{\r\n                values: [\r\n                    <creator.DateSelectionFrom years={this.props.transactionYears}\r\n                        monthVal={this.state.fromMonth} yearVal={this.state.fromYear}\r\n                        handleOnChangeMfrom={(value) => this.setState({ fromMonth: value })}\r\n                        handleOnChangeYfrom={(value) => this.setState({ fromYear: value })}\r\n                    />,\r\n                    <creator.DateSelectionTo years={this.props.transactionYears}\r\n                        monthVal={this.state.toMonth} yearVal={this.state.toYear}\r\n                        handleOnChangeMto={(value) => this.setState({ toMonth: value })}\r\n                        handleOnChangeYto={(value) => this.setState({ toYear: value })} />,\r\n                    <InputField value={this.state.productName} onKeyUp={this.setRequestProductName} id=\"input-product-name\" placeholder=\"Product Name\" />,\r\n                    <ActionButtons buttonsData={[\r\n                        { text: \"Back\", onClick: () => this.props.setFeatureCode(null), id: \"btn-back\" },\r\n                        { text: <i className=\"fas fa-search\"></i>, onClick: () => this.getProductSales(null, 0), id: \"btn-get-product-sales\", status: \"success\" }]}\r\n                    />\r\n                ]\r\n            }]} />);\r\n        }\r\n\r\n        this.constructFilterInfo = (productSalesData) => {\r\n            let periodInfo = <div>\r\n                {\"From: \"}\r\n                <span>{stringUtil.monthYearString(productSalesData.filter.month, productSalesData.filter.year)}</span>\r\n                {\" To: \"}\r\n                <span>{stringUtil.monthYearString(productSalesData.filter.monthTo, productSalesData.filter.yearTo)}</span>\r\n            </div>\r\n            return (<div>\r\n                {periodInfo}\r\n            </div>)\r\n        }\r\n\r\n    }\r\n    componentDidMount() {\r\n        document.title = \"ProductSales\";\r\n        // this.getProductSales();\r\n    }\r\n    componentDidUpdate() {\r\n        console.log(\"updated\", this.state.fromMonth, this.state.fromYear, \" to \", this.state.toMonth, this.state.toYear);\r\n        if (byId(this.state.activeField)) {\r\n            byId(this.state.activeField).focus();\r\n        }\r\n    }\r\n\r\n    render() {\r\n\r\n        const productSalesData = this.props.productSalesData != null ? this.props.productSalesData : { entities: [], filter: {} };\r\n        const maxValue = stringUtil.getMaxSales(productSalesData.entities);\r\n        const filterInfo = this.constructFilterInfo(productSalesData);\r\n        const filterBox = this.constructFilterBox();\r\n        const productDetailRows = new Array();\r\n        const chartGroups = new Array();\r\n        /**\r\n         * construct chart\r\n         */\r\n        for (let i = 0; i < productSalesData.entities.length; i++) {\r\n            const entity = productSalesData.entities[i];\r\n            const sales = stringUtil.beautifyNominal(entity.sales);\r\n            chartGroups.push({\r\n                value: i, label: <Label key={'lbl-e-' + entity.product.id} text={(i + 1), entity.product.name}\r\n                    onClick={() => this.getProductSalesDetail(entity.product.id)} />\r\n            });\r\n            productDetailRows.push({\r\n                group: i,\r\n                index: i,\r\n                series: \"product_sales\",\r\n                value: entity.sales,\r\n                label: sales,\r\n                color: 'rgb(160,160,160)'\r\n            })\r\n        }\r\n\r\n        let productSalesListComponent =\r\n            <div className=\"cashflow-list\">\r\n                <GraphChart chartGroups={chartGroups} maxValue={maxValue} chartData={productDetailRows} orientation={\"horizontal\"} />\r\n            </div>\r\n\r\n        /**\r\n         * if show detail\r\n         */\r\n        let productSalesDetailsXX = this.props.productSalesDetails;\r\n        if (this.state.showDetail) {\r\n            productSalesListComponent = <ProductSalesDetail productSalesDetails={productSalesDetailsXX}\r\n                goBack={() => { this.setState({ showDetail: false }) }} />\r\n        }\r\n\r\n        return (\r\n            <div className=\"cashflow-container\">\r\n                <h2>Product Sales</h2>\r\n                {filterBox}\r\n                <div> {filterInfo} </div>\r\n                {productSalesListComponent}\r\n                <ActionButton text=\"Load more\" status=\"warning\" onClick={this.loadMore} />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        productSalesData: state.transactionState.productSalesData,\r\n        productSalesDetails: state.transactionState.productSalesDetails\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    getProductSales: (request) => dispatch(actions.getProductSales(request)),\r\n    getProductSalesDetail: (request, app) => dispatch(actions.getProductSalesDetail(request, app))\r\n})\r\nexport default (connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(ProductSales));","import React, { Component } from 'react'\r\n\r\nimport '../dashboard/Dashboard.css'\r\nimport * as menus from '../../../constant/Menus'\r\nimport DashboardMenu from './DashboardMenu';\r\nimport TransactionSelling from '../transaction/TransactionSelling';\r\nimport ErrorPage from '../../ErrorPage';\r\nimport { withRouter } from 'react-router';\r\nimport TransactionPurchasing from '../transaction/TransactionPurchasing';\r\nimport Cashflow from './Cashflow';\r\nimport * as componentUtil from '../../../utils/ComponentUtil'\r\nimport ActionButton from '../../buttons/ActionButton';\r\nimport { connect } from 'react-redux'\r\nimport * as actions from '../../../redux/actionCreators'\r\nimport Card from '../../card/Card'\r\nimport * as stringUtil from '../../../utils/StringUtil'\r\nimport Label from '../../container/Label';\r\nimport ProductSales from './ProductSales';\r\nimport ContentTitle from '../../container/ContentTitle';\r\nimport InstantTable from '../../container/InstantTable';\r\nimport ComboBoxes from './../../inputs/ComboBoxes';\r\nimport GridComponent from './../../container/GridComponent';\r\n\r\nclass Dashboard extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            featureCode: 'main',\r\n            cashflowYear: componentUtil.getCurrentMMYY()[1],\r\n            cashflowMonth: componentUtil.getCurrentMMYY()[0]\r\n        }\r\n\r\n        this.setFeatureCode = (code) => {\r\n            this.setState({ featureCode: code });\r\n        }\r\n        this.validateLoginStatus = () => {\r\n            if (this.props.loginStatus != true) this.props.history.push(\"/login\");\r\n        }\r\n        this.getCashflowInfo = () => {\r\n            let month = this.state.cashflowMonth;\r\n            let year = this.state.cashflowYear;\r\n            this.props.getCashflowInfo(month, year, \"OUT\", this.props.app);\r\n            this.props.getCashflowInfo(month, year, \"IN\", this.props.app);\r\n\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.validateLoginStatus();\r\n        if (this.props.loginStatus != true)\r\n            return;\r\n        this.props.setMenuCode(menus.DASHBOARD);\r\n        document.title = \"Dashboard\";\r\n        this.getCashflowInfo();\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        this.validateLoginStatus();\r\n    }\r\n\r\n    render() {\r\n        let minYear, maxYear = new Date().getFullYear();\r\n\r\n        minYear = this.props.transactionYears[0];\r\n        maxYear = this.props.transactionYears[1];\r\n\r\n        let cashflowInfoIn = this.props.cashflowInfoIn ? this.props.cashflowInfoIn : { amount: \"loading...\", count: \"loading...\" };\r\n        let cashflowInfoOut = this.props.cashflowInfoOut ? this.props.cashflowInfoOut : { amount: \"loading...\", count: \"loading...\" };\r\n\r\n        console.log(\"this.props.cashflowInfoIn \", this.props.cashflowInfoIn);\r\n\r\n        let mainComponent = <div>\r\n            <div className=\"cashflow-info\">\r\n                <h3>Cashflow Info</h3>\r\n                <GridComponent style={{ backgroundColor: '#cccccc', padding: '5px', borderRadius: '3px', width: 'max-content', gridColumnGap: '10px' }} items={[\r\n                    \r\n                    <ComboBoxes key=\"cb\" values={[\r\n                        {\r\n                            id: \"select-month\",\r\n                            label: \"Month\",\r\n                            defaultValue: this.state.cashflowMonth ? this.state.cashflowMonth : componentUtil.getCurrentMMYY()[0],\r\n                            options: componentUtil.getDropdownOptionsMonth(),\r\n                            handleOnChange: (value) => this.setState({ cashflowMonth: value })\r\n                        },\r\n                        {\r\n                            id: \"select-year\",\r\n                            label: \"Year\",\r\n                            defaultValue: this.state.cashflowYear ? this.state.cashflowYear : componentUtil.getCurrentMMYY()[1],\r\n                            options: componentUtil.getDropdownOptionsYear(minYear, maxYear),\r\n                            handleOnChange: (value) => this.setState({ cashflowYear: value })\r\n                        }\r\n                    ]} />,\r\n                    <ActionButton status=\"secondary\" id=\"btn-get-cashflow-info\" text={<i className=\"fa fa-search\"></i>} onClick={this.getCashflowInfo} />\r\n\r\n                ]} />\r\n                <div className=\"cashflow-info-wrapper\">\r\n                    <GridComponent style={{ width: '50%' }}\r\n                        items={[\r\n                            <CashflowInfoContent type=\"earn\" cashflowInfo={cashflowInfoOut} />,\r\n                            <CashflowInfoContent type=\"spend\" cashflowInfo={cashflowInfoIn} />\r\n                        ]} />\r\n                </div>\r\n            </div>\r\n        </div>;\r\n\r\n        if (this.state.featureCode != null) {\r\n           \r\n            switch (this.state.featureCode) {\r\n                case 'trxOut':\r\n                    mainComponent = <TransactionSelling app={this.props.app} setFeatureCode={this.setFeatureCode} />\r\n                    break;\r\n                case 'trxIn':\r\n                    mainComponent = <TransactionPurchasing app={this.props.app} setFeatureCode={this.setFeatureCode} />\r\n                    break;\r\n                case 'cashflow':\r\n                    mainComponent = <Cashflow app={this.props.app} transactionYears={this.props.transactionYears} setFeatureCode={this.setFeatureCode} />\r\n                    break;\r\n                case 'productSales':\r\n                    mainComponent = <ProductSales app={this.props.app} transactionYears={this.props.transactionYears} setFeatureCode={this.setFeatureCode} />\r\n                    break;\r\n                default:\r\n                    break;\r\n            }\r\n        }\r\n        if (this.props.loginStatus == true)\r\n            return (\r\n                <div className=\"section-container\">\r\n                    <ContentTitle title=\"Dashboard\" iconClass=\"fas fa-tachometer-alt\" description=\"Have a Nice Shop Keeping!\" />\r\n                    <DashboardMenu currentMenu={this.state.featureCode} goToMenu={this.setFeatureCode} />\r\n                    {mainComponent}\r\n                </div>\r\n            )\r\n        else\r\n            return <ErrorPage message=\"OOPS! Page not found\" />\r\n    }\r\n}\r\n\r\n\r\nfunction CashflowInfoContent(props) {\r\n    const cashflowInfo = props.cashflowInfo;\r\n    const title = props.type == \"earn\" ? \"Total Earning\" : \"Total Spending\";\r\n    const value = <><i className=\"fas fa-comments-dollar\"></i>&nbsp;{stringUtil.beautifyNominal(cashflowInfo.amount) + \",00\"}</>;\r\n    const content = <div>\r\n        <Label style={{ fontFamily: \"TNR\" }} text={value} />\r\n        <Label text=\"Item\" />\r\n        <Label text={<>{stringUtil.beautifyNominal(cashflowInfo.count)}</>} />\r\n    </div>\r\n    return (<Card style={{ marginTop: '3px' }} title={title + \" \" + stringUtil.monthYearString(cashflowInfo.month, cashflowInfo.year)} content={content} />);\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        cashflowInfoIn: state.transactionState.cashflowInfoIn,\r\n        cashflowInfoOut: state.transactionState.cashflowInfoOut,\r\n        transactionYears: state.transactionState.transactionYears\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    getCashflowInfo: (month, year, type, app) => dispatch(actions.getCashflowInfo(month, year, type, app)),\r\n\r\n})\r\nexport default withRouter(connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(Dashboard)); ","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport * as x from '../catalog/Catalog.css'\r\nimport { BrowserRouter as Router, Route, Link, Switch, withRouter } from 'react-router-dom'\r\nimport * as actions from '../../../redux/actionCreators'\r\nimport * as menus from '../../../constant/Menus'\r\nimport ActionButtons from '../../buttons/ActionButtons'\r\nimport ComboBox from '../../inputs/ComboBox'\r\nimport * as componentUtil from '../../../utils/ComponentUtil'\r\nimport * as url from '../../../constant/Url'\r\nimport Card from '../../card/Card'\r\nimport ContentTitle from '../../container/ContentTitle'\r\nimport NavButtons from '../../navigation/NavButtons'\r\nimport GridComponent from '../../container/GridComponent'\r\nimport InputField from '../../inputs/InputField'\r\n\r\nclass SupplierList extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            suppliersData: { entities: [] },\r\n            limit: 10, totalData: 0, suppliers: [],\r\n            supplierPage: 0, firstLoad: true,\r\n            requestOrderBy: null, requestOrderType: null,\r\n            requestSupplierName: \"\",\r\n        };\r\n\r\n        this.getSupplierList = (_page) => {\r\n            this.props.getSupplierList({\r\n                page: _page,\r\n                name: this.state.requestSupplierName,\r\n                orderby: this.state.requestOrderBy,\r\n                ordertype: this.state.requestOrderType\r\n            }, this.props.app);\r\n            this.setState({ supplierPage: _page });\r\n            this.setState({ totalData: this.props.suppliersData.totalData });\r\n        }\r\n\r\n        this.handleOrderChange = (value) => {\r\n            if (value == null || value.length == 0 || value.split(\"-\").length != 2) {\r\n                return;\r\n            } else {\r\n                let rawOrderRequest = value.split(\"-\");\r\n                this.setState({ requestOrderBy: rawOrderRequest[0] });\r\n                this.setState({ requestOrderType: rawOrderRequest[1] });\r\n            }\r\n\r\n        }\r\n\r\n        this.handleInputNameChange = (value) => {\r\n            this.setState({ catalogPage: 0 })\r\n            this.setState({ requestSupplierName: value });\r\n        }\r\n\r\n        this.clearField = () => {\r\n            document.getElementById(\"input-supplier-name\").value = \"\";\r\n            this.setState({ requestSupplierName: \"\" });\r\n\r\n            document.getElementById(\"select-order\").value = \"00\";\r\n            this.setState({ requestOrderBy: null, requestOrderType: null });\r\n\r\n            this.props.app.infoDialog(\"filter has been cleared, please push the search button to take effect\")\r\n        }\r\n\r\n        this.next = () => {\r\n            let supplierPage = this.state.supplierPage;\r\n            let totalPage = Math.floor(this.props.suppliersData.totalData / this.state.limit);\r\n            if (supplierPage >= totalPage - 1) { supplierPage = 0; }\r\n            else { supplierPage++; }\r\n\r\n            this.getSupplierList(supplierPage);\r\n        }\r\n\r\n        this.prev = () => {\r\n            let supplierPage = this.state.supplierPage;\r\n            let totalPage = Math.floor(this.props.suppliersData.totalData / this.state.limit);\r\n            if (supplierPage <= 0) { supplierPage = totalPage - 1; }\r\n            else { supplierPage--; }\r\n\r\n            this.getSupplierList(supplierPage);\r\n        }\r\n\r\n        this.generateNavButtonsData = () => {\r\n            let suppliers = this.props.suppliersData.entities == null ? [] : this.props.suppliersData.entities;\r\n            let buttonData = [];\r\n            if (suppliers.length > 0) {\r\n                buttonData = componentUtil.createNavButtons(this.props.suppliersData.totalData / this.state.limit, this.state.supplierPage);\r\n\r\n            }\r\n\r\n            const navButtonsData = [{\r\n                id: \"btn-prev\",\r\n                buttonClick: this.prev,\r\n                text: \"previous\"\r\n            }];\r\n            for (let i = 0; i < buttonData.length; i++) {\r\n                const b = buttonData[i];\r\n                let active = (b.value == this.state.supplierPage)\r\n                navButtonsData.push({\r\n                    id: b.value,\r\n                    active: active,\r\n                    buttonClick: () => this.getSupplierList(b.value),\r\n                    text: b.text\r\n                });\r\n            }\r\n\r\n            navButtonsData.push({\r\n                id: \"btn-next\",\r\n                buttonClick: this.next,\r\n                text: \"next\"\r\n            });\r\n            return navButtonsData;\r\n        }\r\n\r\n        this.filterBox = () => {\r\n            let actionButtons = [\r\n                { text: <i className=\"fas fa-search\"></i>, status: \"success\", onClick: () => this.getSupplierList(0), id: \"btn-search\" },\r\n                { text: \"Clear Filter\", status: 'warning', onClick: this.clearField, id: \"Clear\" }\r\n            ];\r\n\r\n            return (<div className=\"filter-box\">\r\n                <GridComponent cols={2} style={{ width: 'max-content' }} items={\r\n                    [\r\n                        <InputField placeholder=\"search by supplier name\" onKeyUp={this.handleInputNameChange} type=\"search\"\r\n                            id=\"input-supplier-name\" />,\r\n                        <ComboBox defaultValue={this.state.requestOrderBy + \"-\" + this.state.requestOrderType} onChange={this.handleOrderChange}\r\n                            options={filterSupplierOptions} key=\"k-select-order\" id=\"select-order\" />,\r\n                        <ActionButtons style={{ margin: '5px' }} key=\"btns\" buttonsData={actionButtons} />\r\n                    ]\r\n                } />\r\n                <p></p>\r\n            </div>);\r\n        }\r\n\r\n    }\r\n\r\n    componentWillMount() {\r\n\r\n        document.title = \"Our Suppliers\";\r\n        this.getSupplierList(this.state.supplierPage);\r\n        this.props.setMenuCode(menus.SUPPLIERLIST);\r\n\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        if (this.state.firstLoad && this.props.suppliersData.filter != null) {\r\n            this.setState({\r\n                //limit: this.props.suppliersData.filter.limit,\r\n                totalData: this.props.suppliersData.totalData,\r\n                firstLoad: false\r\n            });\r\n        }\r\n    }\r\n\r\n    render() {\r\n\r\n        let suppliers = this.props.suppliersData.entities == null ? [] : this.props.suppliersData.entities;\r\n\r\n        let supplierCatalog = (<div className=\"section-container\" id=\"catalog-main\" key=\"catalog-main\">\r\n            <ContentTitle title=\"Supplier List Page\" iconClass=\"fas fa-warehouse\" description=\"List of our partners\" />\r\n            <NavButtons buttonsData={this.generateNavButtonsData()} />\r\n            <this.filterBox />\r\n            <div className=\"row catalog-container\">\r\n                {suppliers.map(\r\n                    supplier => {\r\n                       return <SupplierCard supplier={supplier} />\r\n                    }\r\n                )}\r\n            </div>\r\n        </div>);\r\n\r\n        return (supplierCatalog)\r\n    }\r\n}\r\n\r\nfunction SupplierCard(props) {\r\n    const supplier = props.supplier;\r\n    const imageUrl = url.baseImageUrl + supplier.iconUrl;\r\n    const content = <div  >\r\n        <a href={supplier.website}>{supplier.name}</a>\r\n        <br />\r\n        <span style={{ fontSize: '0.7em' }}>{supplier.address}</span>\r\n    </div>\r\n\r\n    return <div className=\"col-md-3\"><Card\r\n        icon={imageUrl}\r\n        style={{ float: 'left', color: 'dimgrey' }}\r\n        key={supplier.id}\r\n        content={content}\r\n    /></div>\r\n}\r\n\r\nconst filterSupplierOptions = [\r\n    { value: \"00\", text: \"-Select Order-\" },\r\n    { value: \"name-asc\", text: \"Name [A-Z]\" },\r\n    { value: \"name-desc\", text: \"Name [Z-A]\" }\r\n];\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        suppliersData: state.shopState.suppliersData\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    getSupplierList: (request, app) => dispatch(actions.getSupplierList(request, app))\r\n\r\n})\r\nexport default withRouter(connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(SupplierList));","import React, { Component } from 'react';\r\nimport './Footer.css'\r\nimport { connect } from 'react-redux'\r\n\r\nclass Footer extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.fontColor = this.props.applicationProfile.fontColor;\r\n        this.backgroundColor = this.props.applicationProfile.color;\r\n    }\r\n\r\n    footerStyle() {\r\n        return {\r\n            color: this.fontColor,\r\n            backgroundColor: this.backgroundColor\r\n        };\r\n    }\r\n\r\n    render() {\r\n        const year = new Date().getFullYear();\r\n        const profile = this.props.applicationProfile ? this.props.applicationProfile : {};\r\n        return (\r\n            <div className=\"App-footer\" style={this.footerStyle()}>\r\n                <span className={profile.footerIconClassValue}></span>&nbsp;&nbsp;{profile.name} {year}\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        applicationProfile: state.userState.applicationProfile,\r\n    }\r\n}\r\n\r\nexport default (connect(\r\n    mapStateToProps\r\n)(Footer));","import React, { Component } from 'react'  \r\nimport './Chat.css'\r\nimport GridComponent from '../../container/GridComponent';\r\nimport Label from '../../container/Label';\r\n\r\nclass ChatList extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n\r\n        let chats = this.props.messages ? this.props.messages : [];\r\n        let chatRows = [];\r\n        for (let i = 0; i < chats.length; i++) {\r\n            const chat = chats[i];\r\n            chatRows.push(\r\n                <ChatItem message={chat} username={this.props.username} />\r\n            )\r\n        }\r\n        return (\r\n            <GridComponent cols={1} items={chatRows} />)\r\n    }\r\n}\r\n\r\nconst ChatItem = props => {\r\n    let className = \"chat-item rounded paper-shadow  \" + (props.message.admin == 1 ? \" admin \" : \"user\");\r\n    let username = \"\";\r\n    if (props.username) {\r\n        username = \" [\" + props.username + \"]\";\r\n    }\r\n    let sender = props.message.admin == 1 ? \"Admin\" : \"You\" + username;\r\n    let senderComponent = <span>\r\n        {sender}<span style={{ marginLeft: '11px', fontSize: '0.7em', float: 'right' }} >{props.message.date}</span>\r\n    </span>\r\n    return (\r\n        <div className={className}>\r\n            <Label style={{ fontSize: '0.8em', color: 'black' }} text={senderComponent} />\r\n            <Label text={props.message.text} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ChatList;","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport * as actions from '../../../redux/actionCreators'\r\nimport { byId } from '../../../utils/ComponentUtil'\r\nimport InputField from '../../inputs/InputField';\r\nimport ActionButton from '../../buttons/ActionButton';\r\nimport SockJsClient from 'react-stomp'; \r\nimport ContentTitle from '../../container/ContentTitle'; \r\nimport GridComponent from '../../container/GridComponent'\r\nimport ChatList from './CharList';\r\n\r\nclass ChatRoom extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { messages: null, username: null, activeId: null }\r\n        this.sendChatMessage = () => {\r\n            if (!byId(\"input-msg\").value) {\r\n                this.props.app.infoDialog(\"Message must not be null\");\r\n                return;\r\n            }\r\n            this.props.sendChatMessage(byId(\"input-msg\").value, this.state.username, this.props.app);\r\n            byId(\"input-msg\").value = \"\";\r\n        }\r\n\r\n        this.handleMessage = (response) => {\r\n            console.log(\"Responses handleMessage: \", response.code);\r\n            console.log(\"LOCAL STORAGE:\", localStorage.getItem(\"requestId\"))\r\n            if (response.code != localStorage.getItem(\"requestId\")) {\r\n                return;\r\n            }\r\n            this.props.storeChatMessageLocally(response.entities);\r\n            // this.setState({ messages: response.entities });\r\n        }\r\n\r\n        this.changeUsername = (value, id) => {\r\n            this.setState({ username: value, activeId: id });\r\n        }\r\n\r\n    }\r\n\r\n    componentWillMount() {\r\n        this.props.setMenuCode('chatroom');\r\n        document.title = \"Chat Room\";\r\n        this.props.getMessages(this.props.app);\r\n        if (this.props.userAlias) {\r\n            this.setState({ username: this.props.userAlias })\r\n        }\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        if (this.state.activeId && byId(this.state.activeId)) {\r\n            byId(this.state.activeId).focus();\r\n        }\r\n    }\r\n\r\n    render() {\r\n        let userAlias = this.props.userAlias ? this.props.userAlias : \"\";\r\n        let cloudHost = \"https://nuswantoroshop.herokuapp.com/\";\r\n        let localHost = \"http://localhost:8080/universal-good-shop/\";\r\n        const usedHost = localHost;\r\n        return (\r\n            <div className=\"section-container\">\r\n                <ContentTitle title=\"What Do You Feel?\" description=\r\n                    {\"Identified as [\" + this.state.username + \"]\"}  iconClass=\"fas fa-comments\"/>\r\n                <InputField\r\n                    value={userAlias}\r\n                    onKeyUp={this.changeUsername}\r\n                    id=\"input-username\"\r\n                    placeholder=\"identify your name\" />\r\n                <div style={{ textAlign: 'left' }} id=\"chat-room\">\r\n\r\n                    <div className=\"chat-container\"  >\r\n                        <ChatList username={this.state.username} messages={this.props.messages} />\r\n                    </div>\r\n\r\n                    <GridComponent style={{ width: '50%', textAlign: 'right' }} items={[\r\n                        <InputField style={{ width: '130%' }} type=\"textarea\" placeholder=\"input message\" id=\"input-msg\" />,\r\n                        <ActionButton style={{ margin: '5px' }} status=\"success\" onClick={this.sendChatMessage} text={<i className=\"fas fa-paper-plane\"></i>} />\r\n\r\n                    ]} />\r\n\r\n                    <SockJsClient url={usedHost+'realtime-app'} topics={['/wsResp/messages']}\r\n                        onMessage={(msg) => { this.handleMessage(msg) }}\r\n                        ref={(client) => { this.clientRef = client }} />\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    //console.log(state);\r\n    return {\r\n        messages: state.shopState.messages,\r\n        userAlias: state.shopState.userAlias\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    sendChatMessage: (message, username, app) => dispatch(actions.sendChatMessage(message, username, app)),\r\n    storeChatMessageLocally: (messages) => dispatch(actions.storeMessageLocally(messages)),\r\n    getMessages: (app) => dispatch(actions.getMessageList(app))\r\n\r\n})\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(ChatRoom)","import React, { Component } from 'react' \r\nimport * as cartCss from './Cart.css' \r\nimport ContentTitle from '../container/ContentTitle';\r\nimport * as stringUtil from '../../utils/StringUtil'\r\nimport InstantTable from '../container/InstantTable';\r\nimport { connect } from 'react-redux'\r\nimport * as url from '../../constant/Url'\r\nimport Label from '../container/Label';\r\n\r\nclass CartDetail extends Component {\r\n    constructor(props) {\r\n        super(props); \r\n    }\r\n\r\n    componentWillMount() {\r\n        document.title = \"My Cart\";\r\n        this.props.setMenuCode('cart');\r\n    }\r\n\r\n    render() {\r\n        let cart = this.props.enableShopping ? this.props.cart : [];  \r\n       \r\n        return (\r\n            <div className=\"section-container\">\r\n                <ContentTitle title=\"My Cart\" iconClass=\"fas fa-shopping-cart\"/>\r\n                <div className=\" cart-bg\">\r\n                    <div className=\"cart-container paper-shadow\" >\r\n                       <CartItemList cart={cart} />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nfunction CartItemList (props ) {\r\n    let grandTotalPrice = 0;\r\n    let cartRows = [\r\n        { values: [\"No\", \"Name\", \"Qty\", \"Unit\", \"@Price\", \"Total Price\"] }\r\n    ]\r\n    let number = 0;\r\n    const cart = props.cart;\r\n\r\n    for (let i = 0; i < cart.length; i++) {\r\n        let cartItem = cart[i];\r\n        if (!cartItem.product) {\r\n            continue;\r\n        }\r\n\r\n        const name = cartItem.product.name;\r\n        const count = (cartItem.count);\r\n        const price = (cartItem.product.price);\r\n        const productImageUrl = cartItem.product.imageUrl;\r\n        const imageUrl = url.baseImageUrl + productImageUrl.split(\"~\")[0];\r\n        let totalPrice = price * count;\r\n\r\n        totalPrice = (totalPrice);\r\n\r\n        grandTotalPrice += totalPrice;\r\n        number++;\r\n        cartRows.push({\r\n            values: [\r\n                number, \r\n               <div style={{textAlign:'center'}}><img src={imageUrl} width=\"50\" height=\"50\"/><Label text={name} /></div> , \r\n                stringUtil.beautifyNominal(count),\r\n                cartItem.product.unit.name,\r\n                stringUtil.beautifyNominal(price),\r\n                stringUtil.beautifyNominal(totalPrice)\r\n            ]\r\n        })\r\n    }\r\n\r\n    cartRows.push({\r\n        values: [\r\n            \"Total Price\", <b>{stringUtil.beautifyNominal(grandTotalPrice)}</b>\r\n        ],\r\n        CS: [5, 1]\r\n    })\r\n    let cartItemList = cart.length > 0 ? <InstantTable style={{ fontFamily: 'Arial Narrow', width: '100%' }}\r\n            rows={cartRows} /> :\r\n            <h3 style={{ margin: 'auto' }}>You don't have any list</h3>;\r\n    return cartItemList;\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return { \r\n        cart: state.shopState.cart\r\n    }\r\n}\r\nexport default connect(\r\n    mapStateToProps, \r\n)(CartDetail);","import React, { Component } from 'react'\r\nimport * as stringUtil from '../../utils/StringUtil'\r\nimport * as componentUtil from '../../utils/ComponentUtil'\r\nimport ActionButton from '../buttons/ActionButton';\r\n\r\nclass InputFile extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            base64Data: null\r\n        }\r\n\r\n        this.onChange = (e) => {\r\n            componentUtil.toBase64(e.target, this, function (result, referer) {\r\n                referer.setState({ base64Data: result });\r\n\r\n            });\r\n        }\r\n\r\n        this.removeImage = () => {\r\n            if (this.props.removeImage) {\r\n                this.props.removeImage();\r\n            }\r\n        }\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        if (this.props.onChange) {\r\n            this.props.onChange(this.state.base64Data);\r\n        }\r\n    }\r\n\r\n    render() {\r\n\r\n        let displayImage = null;\r\n        if (this.state.base64Data) {\r\n            displayImage =\r\n                <DisplayedImage enableRemove={false} value={this.state.base64Data} />\r\n        }\r\n        if (this.props.value && this.props.value.trim() != \"\") {\r\n            displayImage = <DisplayedImage enableRemove={true} value={this.props.value} removeImage={this.removeImage} />\r\n\r\n        }\r\n\r\n        return (\r\n            <div className=\"row\" >\r\n                <div className=\"col-12\">\r\n                    <input className=\"form-control\" accept=\"image/*\" onChange={this.onChange}\r\n                        type=\"file\" key={\"input_file_\" + stringUtil.uniqueId()} />\r\n                </div>\r\n                <div className=\"col-12\">\r\n                    {displayImage}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nfunction DisplayedImage(props) {\r\n    return (<div className=\"input-image-wrapper row\">\r\n        <div className=\"col-6\">\r\n            <img src={props.value} width=\"60\" height=\"60\" />\r\n        </div>\r\n        <div className=\"col-6\">\r\n            {props.enableRemove ? <ActionButton text={<i className=\"fas fa-minus-circle\" ></i>} status=\"danger btn-sm\" onClick={props.removeImage} /> : null}\r\n        </div></div>)\r\n}\r\n\r\nexport default InputFile;\r\n\r\n","import React, { Component } from 'react';\r\nimport * as url from '../../constant/Url'\r\nimport * as stringUtil from '../../utils/StringUtil'\r\nimport InputFile from './InputFile';\r\nimport ActionButton from '../buttons/ActionButton';\r\n\r\nclass InputFileMultiple extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.handleAddMoreFile = () => {\r\n            if (this.props.addMoreImage) {\r\n                this.props.addMoreImage();\r\n            }\r\n        }\r\n\r\n    }\r\n    render() {\r\n\r\n        let inputFields = [];\r\n        if (this.props.inputFilesData) {\r\n            inputFields = this.props.inputFilesData;\r\n        }\r\n\r\n\r\n\r\n        return (\r\n            <div >\r\n\r\n                {inputFields.map(\r\n                    inputFileData => {\r\n                        let value = inputFileData.value;\r\n                        return (\r\n                            <InputFile\r\n                                key={stringUtil.uniqueId() + \"_multiple_file_item\"}\r\n                                onChange={(base64) => {\r\n                                    if (inputFileData.onChange)\r\n                                        inputFileData.onChange(base64)\r\n                                }}\r\n                                value={value && value.includes(\"base64\") ? value : value ?\r\n                                    url.baseImageUrl + value : null}\r\n                                id={inputFileData.inputId}\r\n                                removeImage={() => {\r\n                                    if (inputFileData.removeImage)\r\n                                        inputFileData.removeImage()\r\n                                }\r\n                                }\r\n                            />\r\n                        )\r\n                    }\r\n                )}\r\n                <ActionButton status=\"info bn-sm\" text={<i className=\"fas fa-plus-circle\" ></i>} onClick={this.handleAddMoreFile} />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default InputFileMultiple;","import React, { Component } from 'react'\r\nimport './Entity.css'\r\nimport { byId } from '../../../utils/ComponentUtil'\r\nimport * as stringUtil from '../../../utils/StringUtil'\r\nimport { withRouter } from 'react-router'\r\nimport * as actions from '../../../redux/actionCreators'\r\nimport { connect } from 'react-redux'\r\nimport * as url from '../../../constant/Url'\r\nimport DynamicDropdown from '../../inputs/DynamicDropdown'\r\nimport InputField from '../../inputs/InputField'\r\nimport InputFile from '../../inputs/InputFile'\r\nimport InputFileMultiple from '../../inputs/InputFileMultiple'\r\nimport Label from '../../container/Label'\r\nimport ActionButtons from '../../buttons/ActionButtons'\r\nimport ComboBox from './../../inputs/ComboBox';\r\n\r\nclass EntityForm extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            managedEntity: null,\r\n            activeId: null,\r\n            formValues: {},\r\n            dropdownList: {},\r\n            dropdownValues: {},\r\n            selectedEntities: {},\r\n            base64Data: {},\r\n            base64DataMultiple: {},\r\n            updated: new Date()\r\n        }\r\n\r\n        /**\r\n         * valudate before submit\r\n         */\r\n        this.validateEntity = (entity) => {\r\n            console.info(\"validateEntity\");\r\n            const result = entity;\r\n            for (let key in entity) {\r\n\r\n                const element = this.getElementProperty(key);\r\n                if (element) {\r\n                    if (element.type == \"img\" && element.multiple == false) {\r\n                        /**\r\n                         * handle single Image\r\n                         */\r\n                        if (entity[key] && !entity[key].includes(\"base64\")) {\r\n                            result[key] = null;\r\n                        }\r\n                    } else if (element.type == \"img\" && element.multiple == true) {\r\n                        /**\r\n                         * handle MULTIPLE Image\r\n                         */\r\n                        console.info(\"this.state.base64DataMultiple[key] \", this.state.base64DataMultiple[key]);\r\n\r\n                        if (entity[key]) {\r\n                            let arrayOfValues = entity[key].split(\"~\");\r\n                            let resultValue = new Array();\r\n                            for (let i = 0; i < arrayOfValues.length; i++) {\r\n                                const element = arrayOfValues[i];\r\n                                /**\r\n                                 * if not modified\r\n                                 */\r\n                                if (!this.state.base64DataMultiple[key] ||\r\n                                    !this.state.base64DataMultiple[key][i]) {\r\n                                    resultValue.push(\"{ORIGINAL>>\" + element + \"}\");\r\n                                } else\r\n                                    /**\r\n                                     * if modified\r\n                                     */\r\n                                    if (this.state.base64DataMultiple[key] &&\r\n                                        this.state.base64DataMultiple[key][i]) {\r\n                                        const updatedValue = this.state.base64DataMultiple[key][i];\r\n                                        resultValue.push(\"{ORIGINAL>>\" + element + \"}\" + updatedValue);\r\n                                    }\r\n\r\n                            }\r\n\r\n                            if (this.state.base64DataMultiple[key] && this.state.base64DataMultiple[key].length > arrayOfValues.length) {\r\n                                for (let i = arrayOfValues.length - 1; i < this.state.base64DataMultiple[key].length; i++) {\r\n                                    const element = this.state.base64DataMultiple[key][i];\r\n                                    if (element && element.includes(\"base64\")) {\r\n                                        resultValue.push(element);\r\n                                    }\r\n                                }\r\n                            }\r\n\r\n                            if (resultValue.length > 0)\r\n                                result[key] = resultValue.join(\"~\");\r\n                        }\r\n                    }\r\n                }\r\n                console.log(key, \"=>\", result[key]);\r\n            }\r\n\r\n            return result;\r\n        }\r\n\r\n        this.refresh = () => {\r\n            this.setState({ updated: new Date() })\r\n        }\r\n\r\n        this.handleSubmit = () => {\r\n            const updateMode = this.props.managedEntity != null;\r\n            if (updateMode) {\r\n                console.log(\"WILL UPDATE(props):\", this.props.managedEntity);\r\n                if (this.props.updateEntity) {\r\n                    this.props.updateEntity(this.props.entityProperty.entityName,\r\n                        this.validateEntity(this.props.managedEntity), \"update\");\r\n                }\r\n            }\r\n\r\n            const addNewMod = this.state.managedEntity != null;\r\n            if (addNewMod) {\r\n                console.log(\"WILL SUBMIT NEW(state):\", this.state.managedEntity);\r\n                if (this.props.updateEntity) {\r\n                    this.props.updateEntity(this.props.entityProperty.entityName,\r\n                        this.validateEntity(this.state.managedEntity), \"addNew\");\r\n                }\r\n            }\r\n            this.clear();\r\n        }\r\n\r\n        this.focusActiveId = () => {\r\n            if (byId(this.state.activeId)) {\r\n                byId(this.state.activeId).focus();\r\n            }\r\n        }\r\n\r\n        this.onKeyUp = (value, id, propName) => {\r\n            this.setState({ activeId: id });\r\n            this.updateSelectedEntity(propName, value);\r\n\r\n        }\r\n\r\n        this.clear = () => {\r\n            this.setState({\r\n                managedEntity: null,\r\n                dropdownList: {},\r\n                dropdownValues: {},\r\n                selectedEntities: {},\r\n                base64Data: {},\r\n                base64DataMultiple: {}\r\n            });\r\n            if (this.props.removeManagedEntity) {\r\n                this.props.removeManagedEntity();\r\n            }\r\n        }\r\n\r\n        this.populateDropdown = (entityname, fieldname, fieldvalue) => {\r\n            const request = {\r\n                entityName: entityname,\r\n                fieldName: fieldname.split(\".\")[1],\r\n                fieldValue: fieldvalue\r\n            }\r\n            this.props.getEntitiesWithCallback(request, this, function (data, referer) {\r\n                console.log(\"DATA FOR DROPDOWN: \", data);\r\n            });\r\n\r\n        }\r\n\r\n        this.onKeyUpDynamicDropdown = (value, inputPhysicalId, fieldId, reffEntity, optionItemName) => {\r\n            if (value == null || value.trim() == \"\") { return; }\r\n            const request = {\r\n                entityName: reffEntity.toLowerCase(),\r\n                fieldName: optionItemName,\r\n                fieldValue: value\r\n            }\r\n            this.props.getEntitiesWithCallback(request, this, function (data, referer) {\r\n                console.log(\"LIST FOR \", fieldId, \" DROPDOWN: \", data.entities)\r\n                referer.populateDropdownValues(data.entities, fieldId);\r\n            });\r\n            let currentDropdownValue = this.state.dropdownValues;\r\n            currentDropdownValue[fieldId] = value;\r\n            this.setState({ activeId: inputPhysicalId, dropdownValues: currentDropdownValue });\r\n        }\r\n\r\n        this.populateDropdownValues = (entities, fieldId) => {\r\n            console.log(\"ENTITIES (\", fieldId, \"):\", entities)\r\n            let options = new Array();\r\n            const element = this.getElementProperty(fieldId);\r\n            if (null == element) {\r\n                console.log(\"FORM DATA NOT FOUND\");\r\n                return;\r\n            }\r\n\r\n            for (let i = 0; i < entities.length; i++) {\r\n                const entity = entities[i];\r\n                options.push({\r\n                    value: entity[element.optionValueName],\r\n                    text: entity[element.optionItemName],\r\n                    entity: entity\r\n                })\r\n            }\r\n            let currentDropdownList = this.state.dropdownList;\r\n            currentDropdownList[fieldId] = options;\r\n            //  this.setState({ dropdownList: currentDropdownList })\r\n            return options;\r\n        }\r\n\r\n        this.getSelectedDropdownItem = (value, fieldId) => {\r\n            if (this.state.dropdownList[fieldId] == null) {\r\n                return null;\r\n            }\r\n            const dropdownList = this.state.dropdownList[fieldId];\r\n            for (let i = 0; i < dropdownList.length; i++) {\r\n                const option = dropdownList[i];\r\n                if (option.value == value) {\r\n                    return option;\r\n                }\r\n\r\n            }\r\n            return null;\r\n        }\r\n\r\n        this.getElementProperty = (fieldId) => {\r\n            if (this.props.entityProperty) {\r\n                const entityProperty = this.props.entityProperty;\r\n                for (let i = 0; i < entityProperty.elements.length; i++) {\r\n                    const element = entityProperty.elements[i];\r\n                    if (element.id == fieldId) {\r\n                        return element;\r\n                    }\r\n                }\r\n            }\r\n            return null;\r\n        }\r\n\r\n        this.addMoreImage = (propName) => {\r\n            if (this.props.managedEntity) {\r\n                let currentValue = this.props.managedEntity[propName];\r\n                if (currentValue) {\r\n                    currentValue = currentValue.trim() + \"~DEFAULT.BMP\";\r\n                    this.updateSelectedEntity(propName, currentValue);\r\n                }\r\n            } else {\r\n                let managedEntity = this.state.managedEntity;\r\n                let currentValue;\r\n                if (!managedEntity) {\r\n                    managedEntity = {};\r\n                    currentValue = \"\";\r\n                } else\r\n                    currentValue = managedEntity[propName] + \"~\";\r\n                currentValue = currentValue.trim() + \"DEFAULT.BMP\";\r\n                this.updateSelectedEntity(propName, currentValue);\r\n            }\r\n        }\r\n\r\n        this.updateSelectedEntity = (propName, value) => {\r\n            if (this.props.managedEntity) {\r\n                this.props.managedEntity[propName] = value;\r\n                this.refresh();\r\n            } else {\r\n                let managedEntity = this.state.managedEntity;\r\n                if (!managedEntity) managedEntity = {};\r\n                managedEntity[propName] = value;\r\n                this.setState({ managedEntity: managedEntity });\r\n            }\r\n\r\n        }\r\n        this.handleRemoveImage = (fieldId) => {\r\n\r\n            let base64Data = this.state.base64Data;\r\n            base64Data[fieldId] = null;\r\n\r\n            this.updateSelectedEntity(fieldId, null);\r\n            this.setState({ base64Data: base64Data });\r\n        }\r\n\r\n        this.handleChangeBase64Image = (base64, fieldId) => {\r\n\r\n            let base64Data = this.state.base64Data;\r\n            base64Data[fieldId] = base64;\r\n\r\n            this.updateSelectedEntity(fieldId, base64);\r\n            this.setState({ base64Data: base64Data });\r\n        }\r\n\r\n        this.handleChangeBase64MultipleImage = function (base64, fieldId, i) {\r\n            let base64DataMultiple = this.state.base64DataMultiple;\r\n            const propName = fieldId;\r\n            if (!base64DataMultiple[propName]) {\r\n                base64DataMultiple[propName] = new Array();\r\n            }\r\n            base64DataMultiple[propName][i] = base64;\r\n\r\n            this.setState({ base64DataMultiple: base64DataMultiple });\r\n\r\n        }\r\n\r\n        this.removeElementAtPosition = (array, index) => {\r\n            let result = new Array();\r\n            for (let i = 0; i < array.length; i++) {\r\n                if (i != index) {\r\n                    result.push(array[i])\r\n                }\r\n            }\r\n\r\n            return result;\r\n        }\r\n\r\n        this.handleRemoveMultipleImage = (_fieldId, i) => {\r\n            let base64DataMultiple = this.state.base64DataMultiple;\r\n            const fieldId = _fieldId;\r\n            if (!base64DataMultiple[fieldId]) {\r\n                base64DataMultiple[fieldId] = new Array();\r\n            }\r\n            base64DataMultiple[fieldId][i] = null; //set to NULL\r\n\r\n            this.setState({ base64DataMultiple: base64DataMultiple });\r\n\r\n            if (this.props.managedEntity) {\r\n                let currentValue = this.props.managedEntity[fieldId];\r\n                if (currentValue) {\r\n                    let newArrayValue = this.removeElementAtPosition(currentValue.split(\"~\"), i);\r\n                    this.updateSelectedEntity(fieldId, newArrayValue.join(\"~\"));\r\n                }\r\n            } else {\r\n                let managedEntity = this.state.managedEntity;\r\n                if (!managedEntity) {\r\n                    return;\r\n                }\r\n                let currentValue = managedEntity[fieldId];\r\n                if (currentValue) {\r\n                    let newArrayValue = this.removeElementAtPosition(currentValue.split(\"~\"), i);\r\n                    this.updateSelectedEntity(fieldId, newArrayValue.join(\"~\"));\r\n\r\n                }\r\n            }\r\n        }\r\n\r\n        this.selectFromDynamicDropdown = (value, propName) => {\r\n            console.log(\"Dynamic Dropdown \", propName, \":\", value);\r\n            const stateDropdownList = this.state.dropdownList;\r\n            const stateDropdownValues = this.state.dropdownValues;\r\n            const selectedEntities = this.state.selectedEntities;\r\n\r\n            const selectedOption = this.getSelectedDropdownItem(value, propName);\r\n            if (null == selectedOption) {\r\n                return;\r\n            }\r\n\r\n            stateDropdownValues[propName] = selectedOption.text;\r\n            stateDropdownList[propName] = [];\r\n            selectedEntities[propName] = selectedOption.entity;\r\n\r\n            /**\r\n             * time to modify entity\r\n             */\r\n            const displayPropName = propName;\r\n\r\n            this.updateSelectedEntity(displayPropName, selectedOption.entity);\r\n            this.setState({ activeId: null, dropdownList: stateDropdownList, dropdownValues: stateDropdownValues, selectedEntities: selectedEntities });\r\n            this.refresh();\r\n        }\r\n\r\n        this.selectFromFixedDropdown = (value, fieldId) => {\r\n            console.log(\"FIXED Dropdown \", fieldId, \":\", value);\r\n            const stateDropdownList = this.state.dropdownList;\r\n            const stateDropdownValues = this.state.dropdownValues;\r\n\r\n            stateDropdownValues[fieldId] = value;\r\n            const element = this.getElementProperty(fieldId);\r\n            const optionValueName = element.optionValueName;\r\n            const currentDropdownList = stateDropdownList[fieldId];\r\n\r\n            for (let i = 0; i < currentDropdownList.length; i++) {\r\n                const entity = currentDropdownList[i];\r\n                if (entity[optionValueName] == value) {\r\n                    console.info(\"update fieldId: \", entity);\r\n                    this.updateSelectedEntity(fieldId, entity);\r\n                    this.setState({ activeId: null, dropdownValues: stateDropdownValues });\r\n                    this.refresh();\r\n                    break;\r\n                }\r\n            }\r\n\r\n        }\r\n        this.selectFromPlainListDropdown = (value, fieldId) => {\r\n            console.log(\"Plain Dropdown \", fieldId, \":\", value);\r\n            const stateDropdownList = this.state.dropdownList;\r\n            const dropdownValues = this.state.dropdownValues;\r\n            dropdownValues[fieldId] = value;\r\n            const currentDropdownList = stateDropdownList[fieldId];\r\n\r\n            for (let i = 0; i < currentDropdownList.length; i++) {\r\n                const item = currentDropdownList[i];\r\n                if (item.toString() == value.toString()) {\r\n                    console.info(\"update fieldId: \", item);\r\n                    this.updateSelectedEntity(fieldId, item);\r\n                    this.setState({ activeId: null, dropdownValues: dropdownValues });\r\n                    this.refresh();\r\n                    break;\r\n                }\r\n            }\r\n\r\n        }\r\n\r\n        this.updateFixedListValues = (options, fieldId) => {\r\n\r\n            const currentDropdownList = this.state.dropdownList;\r\n            if (currentDropdownList[fieldId] != null && currentDropdownList[fieldId].length == options.length) return;\r\n            currentDropdownList[fieldId] = options;\r\n            this.setState({ dropdownList: currentDropdownList });\r\n        }\r\n        this.updatePlainListValues = (options, fieldId) => {\r\n\r\n            const currentDropdownList = this.state.dropdownList;\r\n            if (currentDropdownList[fieldId] != null && currentDropdownList[fieldId].length == options.length) return;\r\n            currentDropdownList[fieldId] = options;\r\n            this.setState({ dropdownList: currentDropdownList });\r\n        }\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        this.focusActiveId();\r\n\r\n        console.debug(\"props managedEntity: \", this.props.managedEntity);\r\n        console.debug(\"state managedEntity: \", this.state.managedEntity);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"entity-form-wrapper\">\r\n                <div className=\"entity-form  \">\r\n                    <FormElement\r\n                        entityConfig={this.props.entityConfig}\r\n                        managedEntity={this.props.managedEntity}\r\n                        entityProperty={this.props.entityProperty}\r\n\r\n                        app={this}\r\n\r\n                        updated={this.state.updated}\r\n                        stateManagedEntity={this.state.managedEntity}\r\n                        dropdownValues={this.state.dropdownValues}\r\n                        dropdownList={this.state.dropdownList}\r\n                        base64DataMultiple={this.state.base64DataMultiple}\r\n\r\n                    />\r\n                    <FormActionButtons\r\n                        entityConfig={this.props.entityConfig}\r\n                        managedEntity={this.props.managedEntity}\r\n                        handleSubmit={this.handleSubmit}\r\n                        clear={this.clear} />\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nfunction FormActionButtons(props) {\r\n    if (!props.entityConfig.disabled) {\r\n        return (<ActionButtons buttonsData={[\r\n            {\r\n                text: props.managedEntity ? \"Update\" : \"Add Record\",\r\n                onClick: props.handleSubmit,\r\n                status: \"success\"\r\n            },\r\n            {\r\n                text: \"Clear\",\r\n                status: \"warning\",\r\n                onClick: props.clear\r\n            }\r\n        ]} />)\r\n    }\r\n\r\n    return <></>;\r\n}\r\n\r\nfunction FormElement(_props) {\r\n    const props = _props;\r\n    const app = props.app;\r\n    const entityExist = props.managedEntity != null || props.stateManagedEntity;\r\n    const enityProperty = props.entityProperty;\r\n    const elements = enityProperty.elements;\r\n\r\n    return (<>\r\n        {elements.map(\r\n            element => {\r\n                const elementId = element.id;\r\n                let value = null;\r\n                if (entityExist) {\r\n                    const entity = props.managedEntity ? props.managedEntity : props.stateManagedEntity;\r\n\r\n                    if (element.entityReferenceClass != null && props.activeId != \"input-for-\" + element.name) {\r\n                        const valueAsObject = entity[elementId];\r\n\r\n                        if (valueAsObject != null) {\r\n                            if (element.type == \"dynamiclist\") {\r\n                                const objectPropName = element.optionItemName;\r\n                                value = valueAsObject[objectPropName];\r\n                            } else if (element.type == \"fixedlist\") {\r\n                                const objectPropName = element.optionValueName;\r\n                                value = valueAsObject[objectPropName];\r\n                            }\r\n                        }\r\n                    } else {\r\n                        value = entity[elementId];\r\n                    }\r\n                }\r\n\r\n                let inputComponent = null;\r\n                const inputId = \"input-for-\" + elementId;\r\n\r\n                if (element.type == \"dynamiclist\") {\r\n                    /**\r\n                     * if dynamic dropDown\r\n                     */\r\n\r\n                    if (null == value) {\r\n                        value = props.dropdownValues[elementId]\r\n                    }\r\n\r\n                    inputComponent = <DynamicDropdown\r\n                        onSelect={(value) => app.selectFromDynamicDropdown(value, elementId)}\r\n                        id={inputId}\r\n                        placeholder={element.lableName}\r\n                        value={value}\r\n                        dropdownList={props.dropdownList[elementId]}\r\n                        onKeyUp={(value, id) => { app.onKeyUpDynamicDropdown(value, id, elementId, element.entityReferenceClass, element.optionItemName) }} />\r\n\r\n                } else if (element.type == \"fixedlist\") {\r\n                    /**\r\n                     * if fixed dropDown\r\n                     */\r\n\r\n                    if (null == value) {\r\n                        value = props.dropdownValues[elementId];\r\n                    }\r\n\r\n                    app.updateFixedListValues(element.options, elementId);\r\n                    console.info(\"def value \", elementId, \" : \", value)\r\n                    const comboBoxOptions = getFixedListElementOptions(element);\r\n                    inputComponent = <ComboBox\r\n                        onChange={(value) => {\r\n                            app.selectFromFixedDropdown(value, elementId);\r\n                        }}\r\n                        defaultValue={value}\r\n                        id={inputId}\r\n                        placeholder={element.lableName}\r\n                        options={comboBoxOptions}\r\n                    />\r\n\r\n                } else if (element.type == \"plainlist\") {\r\n                    /**\r\n                     * if fixed dropDown\r\n                     */\r\n\r\n                    if (null == value) {\r\n                        value = props.dropdownValues[elementId];\r\n                    }\r\n\r\n                    app.updatePlainListValues(element.plainListValues, elementId);\r\n                    console.info(\"def value \", elementId, \" : \", value)\r\n                    const comboBoxOptions = getPlainListElementOptions(element);\r\n                    inputComponent = <ComboBox\r\n                        onChange={(value) => {\r\n                            app.selectFromPlainListDropdown(value, elementId);\r\n                        }}\r\n                        defaultValue={value == null ? null : value.toString()}\r\n                        id={inputId}\r\n                        placeholder={element.lableName}\r\n                        options={comboBoxOptions}\r\n                    />\r\n\r\n                } else if (element.type == \"img\" && element.multiple == false) {\r\n                    /**\r\n                     * handle image single\r\n                     */\r\n                    inputComponent = <InputFile\r\n                        onChange={(base64) => app.handleChangeBase64Image(base64, elementId)}\r\n                        value={value && value.includes(\"base64\") ? value : value ? url.baseImageUrl + value : null}\r\n                        id={inputId}\r\n                        removeImage={() => app.handleRemoveImage(elementId)}\r\n\r\n                    />\r\n\r\n                } else if (element.type == \"img\" && element.multiple == true) {\r\n                    /**\r\n                     * handle multiple single\r\n                     */\r\n                    const valueSplit = value ? value.split(\"~\") : [];\r\n\r\n                    const imagesData = new Array();\r\n                    for (let i = 0; i < valueSplit.length; i++) {\r\n                        let valueSplitItem = valueSplit[i];\r\n                        if (props.base64DataMultiple[elementId] &&\r\n                            props.base64DataMultiple[elementId][i]\r\n                            && props.base64DataMultiple[elementId][i].includes(\"base64\")) {\r\n                            valueSplitItem = props.base64DataMultiple[elementId][i];\r\n                        }\r\n                        imagesData.push({\r\n                            value: valueSplitItem,\r\n                            onChange: (base64) => {\r\n                                app.handleChangeBase64MultipleImage(base64, elementId, i);\r\n                            },\r\n                            removeImage: () => app.handleRemoveMultipleImage(elementId, i)\r\n\r\n                        })\r\n                    }\r\n                    inputComponent = <InputFileMultiple\r\n                        addMoreImage={() => app.addMoreImage(elementId)}\r\n                        inputFilesData={imagesData}\r\n                    />\r\n                }\r\n\r\n                else {\r\n                    /**\r\n                     * regular\r\n                     */\r\n                    inputComponent = <InputField\r\n                        disabled={element.idField == true}\r\n                        onKeyUp={(value, id) => { app.onKeyUp(value, id, elementId) }}\r\n                        id={inputId} value={value}\r\n                        type={element.type} placeholder={element.lableName} />;\r\n                }\r\n\r\n                return (\r\n                    <div key={\"FORM-FIELD-\" + stringUtil.uniqueId()}  >\r\n                        <Label text={element.lableName} />\r\n                        {inputComponent}\r\n                    </div>\r\n                )\r\n            }\r\n        )}\r\n    </>);\r\n\r\n}\r\n\r\nconst getPlainListElementOptions = (element) => {\r\n    const options = [];\r\n\r\n    for (let i = 0; i < element.plainListValues.length; i++) {\r\n        const el = element.plainListValues[i];\r\n        options.push({\r\n            value: el,\r\n            text: el\r\n        })\r\n    }\r\n\r\n    return options;\r\n}\r\n\r\nconst getFixedListElementOptions = (element) => {\r\n    const options = [];\r\n\r\n    for (let i = 0; i < element.options.length; i++) {\r\n        const el = element.options[i];\r\n        options.push({\r\n            value: el[element.optionValueName],\r\n            text: el[element.optionItemName]\r\n        })\r\n    }\r\n\r\n    return options;\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {}\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    getEntitiesWithCallback: (request, referer, callback) => dispatch(actions.getEntitiesWithCallback(request, referer, callback)),\r\n\r\n\r\n})\r\nexport default withRouter(connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(EntityForm))","\r\nimport React, { Component } from 'react'\r\nexport const  CenterLoading = (props) => {\r\n    return (\r\n        <div className=\"d-flex justify-content-center\"  style={{padding:'5px'}}>\r\n            <div className=\"spinner-border\" role=\"status\" style={{width: '3rem', height: '3rem'}}>\r\n                <span className=\"sr-only\">Loading...</span>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React, { Component } from 'react'\r\nimport InstantTable from '../../container/InstantTable'\r\nimport { byId } from '../../../utils/ComponentUtil'\r\nimport * as stringUtil from '../../../utils/StringUtil'\r\nimport './Management.css'\r\nimport './Entity.css'\r\nimport * as componentUtil from '../../../utils/ComponentUtil'\r\nimport ActionButtons from '../../buttons/ActionButtons';\r\nimport InputField from '../../inputs/InputField'\r\nimport EntityForm from './EntityForm';\r\nimport * as url from '../../../constant/Url'\r\nimport Label from '../../container/Label'\r\nimport GridComponent from './../../container/GridComponent';\r\nimport { CenterLoading } from '../../messages/SimpleLoader'\r\n\r\nclass EntityList extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            filter: {},\r\n            activeId: null,\r\n            orderBy: null,\r\n            orderType: null\r\n        }\r\n\r\n        this.handleDelete = (id) => {\r\n            if (!window.confirm(\"Are your sure for deleting this entity?\")) { return; }\r\n            console.log(\"Will DELETE: \", id)\r\n        }\r\n        this.handleEdit = (id) => {\r\n            this.getEntityById(id);\r\n        }\r\n\r\n        this.goToPage = (page, orderObject) => {\r\n            if (page > this.props.entitiesData.totalData / 10) {\r\n                page = 0;\r\n            }\r\n            if (page < 0) {\r\n                page = Math.ceil(this.props.entitiesData.totalData / 10 - 1);\r\n            }\r\n\r\n            let config = this.props.entityConfig;\r\n            config.filter = this.state.filter;\r\n            if (orderObject != null) {\r\n                config.orderBy = orderObject.orderBy;\r\n                config.orderType = orderObject.orderType;\r\n                this.setState({ orderBy: orderObject.orderBy, orderType: orderObject.orderType });\r\n            }\r\n\r\n            this.props.getEntityInPage(config, page);\r\n\r\n        }\r\n\r\n        this.getEntityById = (id) => {\r\n            const config = this.props.entityConfig;\r\n            if (config == null) {\r\n                alert(\"Config Not Found!\");\r\n                return;\r\n            }\r\n\r\n            this.props.getEntityById(config.entityName, id);\r\n        }\r\n\r\n        this.createNavButtons = () => {\r\n            let displayedButtons = componentUtil.createNavButtons(this.props.entitiesData.totalData / 10, this.props.currentPage);\r\n            return displayedButtons;\r\n        }\r\n\r\n        this.setOrderBy = (fieldName, orderType) => {\r\n            this.goToPage(this.props.currentPage, { orderBy: fieldName, orderType: orderType });\r\n        }\r\n\r\n        this.createFilterInputsv2 = (entityProperty) => {\r\n            const inputs = new Array();\r\n            const elements = entityProperty.elements;\r\n            if (!elements) {\r\n                return inputs;\r\n            }\r\n            for (let i = 0; i < elements.length; i++) {\r\n                const element = elements[i];\r\n                const id = element.id;\r\n\r\n                let value = \"\";\r\n\r\n                if (this.state.filter[id] != null) {\r\n                    value = this.state.filter[id];\r\n                }\r\n\r\n                let input = <InputField value={value} id={id + \"_filter_id\"}\r\n                    onKeyUp={this.handleFilterChange} key={\"input_field_\" + stringUtil.uniqueId()}\r\n                    placeholder={id} />\r\n\r\n                if (element.type == \"date\") {\r\n                    input = <DateFilter id={id} filter={this.state.filter} app={this} />\r\n                }\r\n\r\n                inputs.push(<div className=\"filter-wrapper\">\r\n                    {input}<SortingButton app={this} id={id} />\r\n                </div>);\r\n            }\r\n            inputs.push(\"\");\r\n            return inputs;\r\n        }\r\n\r\n\r\n        this.handleFilterChange = (value, id) => {\r\n\r\n            let filter = this.state.filter;\r\n            if (value != null && value.trim() == \"\") {\r\n                filter[id.split(\"_filter_id\")[0]] = null;\r\n            } else {\r\n                filter[id.split(\"_filter_id\")[0]] = value;\r\n            }\r\n\r\n            this.setState({ filter: filter, activeId: id });\r\n            this.goToPage(this.props.currentPage);\r\n        }\r\n\r\n        this.focusActiveId = () => {\r\n            if (byId(this.state.activeId)) {\r\n                byId(this.state.activeId).focus();\r\n            }\r\n        }\r\n\r\n        //for data table\r\n        this.getEntityDataTableRowData = () => {\r\n            const entitiesData = this.props.entitiesData;\r\n            const entityConfig = this.props.entityConfig;\r\n            const entityProperty = this.props.entityProperty;\r\n\r\n            if (null == entitiesData || null == entityConfig || null == entitiesData.entities) {\r\n                return (<CenterLoading />)\r\n            }\r\n\r\n            const rows = [\r\n                //header\r\n                {\r\n                    values: [\"No\", ...getHeaderNamesv2(entityProperty)], disabled: true, style: { textAlign: 'center', fontWeight: 'bold' }\r\n                },\r\n                //filter\r\n                {\r\n                    values: [null, ... this.createFilterInputsv2(entityProperty)], disabled: true\r\n                }\r\n            ];\r\n\r\n            const entities = this.props.entitiesData.entities;\r\n            const idField = entityProperty.idField;\r\n            const currentPage = this.props.currentPage;\r\n\r\n            for (let i = 0; i < entities.length; i++) {\r\n                const entity = entities[i];\r\n                const number = (currentPage * 10) + i + 1;\r\n                const rowValues = [number];\r\n\r\n                for (let j = 0; j < entityProperty.elements.length; j++) {\r\n                    const element = entityProperty.elements[j];\r\n                    const elementId = element.id;\r\n                    const isObject = element.entityReferenceClass != null;\r\n\r\n                    let entityValue = entity[elementId];\r\n                    if (element.type && entityValue) {\r\n                        if (element.type == \"number\") {\r\n                            entityValue = stringUtil.beautifyNominal(entityValue);\r\n                            // } else if (element.type == \"link\") {\r\n                            //     entityValue = <a href={entityValue}><u>{entityValue}</u></a>\r\n                        } else if (element.type == \"img\" && element.multiple == false) {\r\n                            entityValue = <img width=\"60\" height=\"60\" alt={url.baseImageUrl + entityValue} src={url.baseImageUrl + entityValue} />\r\n                        } else if (element.type == \"img\" && element.multiple == true) {\r\n                            let imgName = entityValue.split(\"~\")[0];\r\n                            entityValue = <img width=\"60\" height=\"60\" src={url.baseImageUrl + imgName} />\r\n                        } else if (element.type == \"date\") {\r\n                            const dateStr = new Date(entityValue).toDateString();\r\n                            entityValue = <Label text={dateStr} />;\r\n                        } else if (isObject) {\r\n                            entityValue = entityValue[element.optionItemName];\r\n                        }\r\n\r\n                        //validate length..\r\n                        if (entityValue.constructor == String) {\r\n                            const str = entityValue.toString();\r\n                            if (str.length > 50) {\r\n                                entityValue = str.substr(0, 50) + \"....\";\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                    rowValues.push(entityValue);\r\n                }\r\n\r\n                rows.push(\r\n                    {\r\n                        identifier: entity[idField],\r\n                        values: rowValues,\r\n                        handleDelete: this.handleDelete,\r\n                        handleEdit: this.handleEdit,\r\n                        disabled: entityConfig.disabled == true ? true : false\r\n                    }\r\n                )\r\n            }\r\n            return rows;\r\n        }\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        this.focusActiveId();\r\n    }\r\n\r\n    render() {\r\n\r\n        const entitiesData = this.props.entitiesData;\r\n        const entityConfig = this.props.entityConfig;\r\n\r\n        if (null == entitiesData || null == entityConfig || null == entitiesData.entities) {\r\n            return (<CenterLoading />)\r\n        }\r\n        return (\r\n            <div style={{ textAlign: 'center' }}>\r\n                <div className=\"entity-container\">\r\n                    <div style={{ backgroundColor: 'white', margin: '10px' }} > </div>\r\n                    <NavigationButton buttonsData={this.createNavButtons()}\r\n                        goToPage={this.goToPage} currentPage={this.props.currentPage} />\r\n                    <div className=\"entityForm\">\r\n                        <EntityForm\r\n                            app={this.props.app}\r\n                            updateEntity={this.props.updateEntity}\r\n                            removeManagedEntity={this.props.removeManagedEntity}\r\n                            managedEntity={this.props.managedEntity}\r\n                            entityProperty={this.props.entityProperty}\r\n                            entityConfig={entityConfig}\r\n                        />\r\n                    </div>\r\n                    <EntityTable rows={this.getEntityDataTableRowData()} />\r\n                </div>\r\n            </div>\r\n\r\n        )\r\n    }\r\n\r\n}\r\n\r\n \r\n\r\nfunction SortingButton(props) {\r\n    return (<ActionButtons orientation=\"vertical\" buttonsData={[{\r\n        status: 'outline-secondary btn-xs no-border',\r\n        onClick: () => { props.app.setOrderBy(props.id, 'asc') },\r\n        text: <i className={\"fa fa-angle-up\"} aria-hidden=\"true\"></i>\r\n    },\r\n    {\r\n        status: 'outline-secondary btn-xs no-border',\r\n        onClick: () => { props.app.setOrderBy(props.id, 'desc') },\r\n        text: <i className={\"fa fa-angle-down\"} aria-hidden=\"true\"></i>\r\n    }\r\n    ]} />);\r\n}\r\n\r\nfunction DateFilter(props) {\r\n    const valueDay = props.filter[id + \"-day\"];\r\n    const valueMonth = props.filter[id + \"-month\"];\r\n    const valueYear = props.filter[id + \"-year\"];\r\n    const app = props.app;\r\n    const id = props.id;\r\n\r\n    const style = { width: '60px', fontSize: '0.7em' };\r\n\r\n    const inputDay = <InputField style={style} value={valueDay} id={id + \"-day_filter_id\"}\r\n        onKeyUp={app.handleFilterChange} key={\"input_field_d\" + stringUtil.uniqueId()}\r\n        placeholder={\"day\"} />;\r\n    const inputMonth = <InputField style={style} value={valueMonth} id={id + \"-month_filter_id\"}\r\n        onKeyUp={app.handleFilterChange} key={\"input_field_m\" + stringUtil.uniqueId()}\r\n        placeholder={\"month\"} />;\r\n    const inputYear = <InputField style={style} value={valueYear} id={id + \"-year_filter_id\"}\r\n        onKeyUp={app.handleFilterChange} key={\"input_field_y\" + stringUtil.uniqueId()}\r\n        placeholder={\"year\"} />;\r\n    return <GridComponent items={[inputDay, inputMonth, inputYear]} />\r\n}\r\n\r\nconst getHeaderNamesv2 = function (entityProperty) {\r\n    const elements = entityProperty.elements;\r\n    const headers = [];\r\n    for (let i = 0; i < elements.length; i++) {\r\n        const element = elements[i];\r\n        let headerName = element.lableName;\r\n        headers.push(headerName);\r\n    }\r\n    headers.push(\"OPTION\");\r\n    return headers;\r\n}\r\n\r\nfunction EntityTable(props) {\r\n    return <div className=\"entity-list-container\">\r\n        <InstantTable style={{ width: \"100%\", margin: \"5px\", }} rows={props.rows} />\r\n    </div>\r\n}\r\n\r\nfunction NavigationButton(props) {\r\n\r\n    const buttonsData = props.buttonsData;\r\n    const fixButtonData = new Array();\r\n\r\n    fixButtonData.push({\r\n        onClick: () => { props.goToPage(props.currentPage + -1) },\r\n        text: 'previous'\r\n    })\r\n\r\n    for (let i = 0; i < buttonsData.length; i++) {\r\n        buttonsData[i].onClick = () => { props.goToPage(buttonsData[i].value) }\r\n        if (buttonsData[i].value == props.currentPage) {\r\n            buttonsData[i].status = \"info btn-sm\";\r\n        } else {\r\n            buttonsData[i].status = \"outline-info btn-sm\";\r\n        }\r\n        buttonsData[i].text = buttonsData[i].text;\r\n        fixButtonData.push(buttonsData[i]);\r\n    }\r\n\r\n    fixButtonData.push({\r\n        onClick: () => { props.goToPage(props.currentPage + 1) },\r\n        text: 'next'\r\n    });\r\n\r\n    const style = { width: 'min-content', paddingTop: '15px', margin: '10px' };\r\n    return (<ActionButtons style={style} buttonsData={fixButtonData} />);\r\n\r\n}\r\n\r\nexport default EntityList;","import React, { Component } from 'react'\r\nimport './Management.css'\r\nimport { withRouter } from 'react-router';\r\nimport * as actions from '../../../redux/actionCreators'\r\nimport { connect } from 'react-redux'\r\nimport ContentTitle from '../../container/ContentTitle' \r\nimport EntityList from './EntityList';\r\nimport Tab from '../../navigation/Tab';\r\nimport { CenterLoading } from '../../messages/SimpleLoader';\r\n\r\nclass Management extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            entityList: [],\r\n            currentPage: 0,\r\n            entityConfig: null\r\n        }\r\n        this.validateLoginStatus = () => {\r\n            if (this.props.loginStatus != true) this.props.history.push(\"/login\");\r\n        }\r\n\r\n        this.refresh = () => {\r\n            this.getEntityInPage(this.state.entityConfig, this.state.currentPage);\r\n        }\r\n\r\n        this.loadEntityManagement = (config) => {\r\n            \r\n            this.props.removeManagedEntity();\r\n            this.setState({ currentPage: 0, entityConfig: config });\r\n           \r\n            this.props.getEntities({\r\n                entityName: config.entityName,\r\n                page: 0,\r\n                limit: 10,\r\n                entityConfig: config\r\n            }, this.props.app);\r\n            this.props.getEntityProperty(config.entityName, this.props.app);\r\n        }\r\n\r\n        this.getEntityInPage = (config, page) => {\r\n            this.setState({ currentPage: page });\r\n\r\n            const request = {\r\n                entityName: config.entityName,\r\n                page: page,\r\n                limit: 10,\r\n                entityConfig: config,\r\n                fieldsFilter: config.filter,\r\n                orderBy: config.orderBy,\r\n                orderType: config.orderType,\r\n            };\r\n\r\n            console.log(\"REQUEST: \", request)\r\n\r\n            this.props.getEntities(request, this.props.app);\r\n        }\r\n\r\n        this.checkIfCurrentMenuName = (name) => {\r\n            if(!this.state.entityConfig || !this.props.entitiesData.entityConfig){\r\n                return false;\r\n            }\r\n            return (this.state.entityConfig.entityName == name) || (this.props.entitiesData.entityConfig.entityName == name);\r\n        }\r\n\r\n        this.getTabMenusData = () => {\r\n\r\n            if(this.props.entityConfigList == null) {\r\n                return [];\r\n            }\r\n\r\n            const configList = this.props.entityConfigList;\r\n            const buttonsData = [];\r\n            for (let i = 0; i < configList.length; i++) {\r\n                const config = configList[i];\r\n                buttonsData.push( {\r\n                    text: config.label,\r\n                    active: this.checkIfCurrentMenuName(config.entityName),\r\n                    onClick: () => { this.loadEntityManagement(config) }\r\n                });\r\n            }\r\n\r\n            if(!this.state.entityConfig &&  (configList).length > 0){\r\n                this.loadEntityManagement(configList[0]);\r\n            }\r\n\r\n            return buttonsData; \r\n            \r\n        }\r\n\r\n        this.updateEntity = (name, entity, flag) => {\r\n            const app = this;\r\n            this.props.app.confirmDialog(\"Are you sure will update \" + name + \"?\",\r\n                function (e) {\r\n                    let newRecord = flag == \"addNew\"; \r\n                    app.props.updateEntity({ entityName: name, entity: entity, isNewRecord: newRecord }, app, function (ref) {\r\n                        ref.callbackHandleUpdate();\r\n                    });\r\n                }, function (e) { }); \r\n\r\n        }\r\n\r\n        this.getEntityById = (name, id) => {\r\n            this.props.getEntityById(name, id, this.props.app);\r\n        }\r\n        this.removeManagedEntity = () => {\r\n            this.props.removeManagedEntity();\r\n        }\r\n\r\n        this.callbackHandleUpdate = () => {\r\n            this.refresh();\r\n            this.removeManagedEntity();\r\n\r\n        }\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        this.validateLoginStatus();\r\n    }\r\n\r\n    componentWillMount() {\r\n        this.validateLoginStatus();\r\n        document.title = \"Management\";\r\n        this.props.setMenuCode(\"management\");\r\n\r\n        if(!this.props.entityConfigList || this.props.entityConfigList.length == 0){\r\n            this.props.getManagementMenus(this.props.app);\r\n        }\r\n       \r\n        \r\n    }\r\n\r\n    render() {\r\n\r\n        let entityList = this.props.entitiesData ? this.props.entitiesData.entities : [];\r\n        if (null == entityList) { entityList = []; }\r\n\r\n        const buttonsData = this.getTabMenusData();\r\n\r\n        return (\r\n            <div className=\"section-container\">\r\n                <ContentTitle iconClass=\"fas fa-database\" title={\"Master Data \" + (this.props.entityProperty ?\r\n                        this.props.entityProperty.alias : \"\")}  description=\"master data management\" />\r\n                <div className=\"management-container\">\r\n                    <Tab tabsData={buttonsData} />\r\n                    {this.props.entityProperty? \r\n                    <EntityList currentPage={this.state.currentPage}\r\n                        app={this.props.app}\r\n                        getEntityInPage={this.getEntityInPage}\r\n                        entityConfig={this.props.entitiesData.entityConfig}\r\n                        entitiesData={this.props.entitiesData}\r\n                        managedEntity={this.props.managedEntity}\r\n                        getEntityById={this.getEntityById}\r\n                        removeManagedEntity={this.removeManagedEntity}\r\n                        updateEntity={this.updateEntity}\r\n                        entityProperty={this.props.entityProperty}\r\n                    /> :<CenterLoading />}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    //console.log(state);\r\n    return {\r\n        entitiesData: state.managementState.entitiesData,\r\n        managedEntity: state.managementState.managedEntity,\r\n        entityProperty: state.managementState.entityProperty,\r\n        entityConfigList: state.managementState.managementMenus\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    getEntities: (request, app) => dispatch(actions.getEntityList(request, app)),\r\n    getEntityProperty: (entityName, app) => dispatch(actions.getEntityProperty(entityName, app)),\r\n    getEntityById: (name, id, app) => dispatch(actions.getEntityById(name, id, app)),\r\n    removeManagedEntity: () => dispatch(actions.removeManagedEntity()),\r\n    updateEntity: (request, referer, callback) => dispatch(actions.updateEntity(request, referer, callback)),\r\n    getManagementMenus: (app) => dispatch(actions.getManagementMenus(app))\r\n\r\n})\r\nexport default withRouter(connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(Management))","import React, { Component } from 'react'\r\nimport * as cartCss from './Cart.css'\r\nimport Label from '../container/Label';\r\nimport * as stringUtil from '../../utils/StringUtil'\r\nimport { connect } from 'react-redux'\r\n\r\nclass CartInfo extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            firstLoad: true,\r\n            detail: false\r\n        }\r\n\r\n        this.showCartList = (e) => {\r\n            this.setState({ detail: true })\r\n        }\r\n        this.hideCartList = (e) => {\r\n            this.setState({ detail: false })\r\n        }\r\n        this.handleClick = (e) => {\r\n            if (this.props.onClick) {\r\n                this.props.onClick();\r\n            }\r\n        }\r\n\r\n        this.caculateTotalPrice = () => {\r\n            let totalPrice = 0;\r\n\r\n            let cart = this.props.cart;\r\n            for (let i = 0; i < cart.length; i++) {\r\n                if (cart[i].product == null) continue;\r\n\r\n                totalPrice += (cart[i].product.price * cart[i].count);\r\n            }\r\n            return stringUtil.beautifyNominal(totalPrice) + \",-\";\r\n        }\r\n    }\r\n\r\n    componentDidUpdate(){\r\n        console.debug(\"Cart Info updated\");\r\n    }\r\n\r\n    render() {\r\n         \r\n        if(!this.props.enableShopping){\r\n            return <></>\r\n        }\r\n\r\n        const cart = this.props.cart;   \r\n        const totalPrice = this.caculateTotalPrice(); \r\n        \r\n        let count = 0;\r\n        for (let i = 0; i < cart.length; i++) {\r\n            const cartItem = cart[i];\r\n            count += cartItem.count\r\n        }\r\n\r\n        return (\r\n            <div onClick={this.handleClick} onMouseOver={this.showCartList} onMouseLeave={this.hideCartList} className=\"cart-info\" >\r\n              \r\n               <CartInfoContent detail={this.state.detail} count={count} totalPrice={totalPrice} />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nfunction CartInfoContent(props) {\r\n    let content;\r\n\r\n    if (props.detail) {\r\n        content = <h3 style={{ paddingLeft: '5px' }}>See Detail</h3>\r\n    } else {\r\n        content = <div>\r\n            <Label text={<span><i className=\"fas fa-shopping-cart\"></i>Listed Product</span>} />\r\n            <span style={{ margin: '5px' }} className=\"quantity-label\">{props.count}</span>\r\n            <span style={{ margin: '5px', color: 'yellow', backgroundColor: 'blue' }} className=\"quantity-label\">{props.totalPrice}</span>\r\n        </div>\r\n    }\r\n\r\n    return content;\r\n}\r\nconst mapDispatchToProps = dispatch => ({ \r\n})\r\nconst mapStateToProps = state => {\r\n    return { \r\n        cart: state.shopState.cart\r\n    }\r\n}\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(CartInfo);","import React, { Component } from 'react';\r\nimport './Header.css'\r\nimport CartInfo from '../../cart/CartInfo';\r\nimport { connect } from 'react-redux'\r\n\r\nclass Header extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.handleClick = () => { }\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <div className=\"App-header\" style={{ color: this.props.applicationProfile.color }}>\r\n                {this.props.showOptionButton ? \r\n                <button style={{position:'fixed', left:'0'}} onClick={this.props.showMenu} className=\"btn\"><i className=\"fa fa-align-justify\"></i>  </button> : \r\n                <button style={{position:'fixed', left:'0'}} onClick={this.props.hideMenu} className=\"btn\"><i className=\"fa fa-angle-double-left\"></i>  </button>}\r\n                <h2>{this.props.applicationProfile.name}</h2>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        applicationProfile: state.userState.applicationProfile,\r\n    }\r\n}\r\n\r\nexport default (connect(\r\n    mapStateToProps\r\n)(Header));","import React, { Component } from 'react'\r\n\r\nclass Alert extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.onOk = (e) => {\r\n             \r\n            if (this.props.onOk) {\r\n                this.props.onOk(e);\r\n            }\r\n        }\r\n        this.onNo = (e) => {\r\n            \r\n            if (this.props.onNo) {\r\n                this.props.onNo(e);\r\n            }\r\n        }\r\n        this.onClose = (e) => {\r\n            if (this.props.onClose) {\r\n                this.props.onClose(e);\r\n            }\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const title = this.props.title ? this.props.title : \"Info\";\r\n        const yesOnly = this.props.yesOnly == true;\r\n        return (\r\n            <>\r\n                <Backdrop />\r\n                <div className=\"modal fade show\" style={{ display: 'block' }} id=\"exampleModalCenter\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalCenterTitle\" aria-hidden=\"true\">\r\n                    <div className=\"modal-dialog modal-dialog-centered\" role=\"document\">\r\n                        <div className=\"modal-content\">\r\n                            <Header title={title} onClose={this.onClose} />\r\n                            <Body content={this.props.message} />\r\n                            <Footer yesOnly={yesOnly} onOk={this.onOk} onNo={this.onNo} />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nfunction Backdrop(props) {\r\n    return (\r\n        <div className=\"modal-backdrop\" style={{backgroundColor: 'rgba(100,100,100,0.7)'}} ></div>\r\n    );\r\n}\r\n\r\nfunction Body(props) {\r\n    return (\r\n        <div className=\"modal-body\"> \r\n            {props.content}\r\n        </div>\r\n    );\r\n}\r\n\r\nfunction Footer(props) {\r\n    return (\r\n        <div className=\"modal-footer\">\r\n            <button type=\"button\"\r\n                onClick={props.onOk} className=\"btn btn-primary\">Ok</button>\r\n            {props.yesOnly ? null : <button type=\"button\"\r\n                onClick={props.onNo} className=\"btn btn-secondary\">No</button>}\r\n        </div>\r\n    )\r\n}\r\n\r\nfunction Header(props) {\r\n    return (<div className=\"modal-header\">\r\n        <h5 className=\"modal-title\" id=\"exampleModalCenterTitle\">{props.title}</h5>\r\n        <button onClick={props.onClose} type=\"button\" className=\"close\">\r\n            <span aria-hidden=\"true\">&times;</span>\r\n        </button>\r\n    </div>)\r\n}\r\n\r\nexport default Alert;","\nimport React, { Component } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\n\nimport Menu from './components/navigation/Menu'\nimport Home from './components/pages/index/Home'\nimport About from './components/pages/about/About'\n\nimport { Route, Switch, withRouter } from 'react-router-dom'\nimport * as actions from './redux/actionCreators'\nimport { connect } from 'react-redux'\nimport Catalog from './components/pages/catalog/Catalog'\nimport Login from './components/pages/login/Login'\nimport Dashboard from './components/pages/dashboard/Dashboard';\nimport * as menus from './constant/Menus'\nimport SupplierList from './components/pages/supplier_list/SupplierList';\nimport Loader from './components/messages/Loader';\nimport Footer from './components/layout/footer/Footer';\nimport SockJsClient from 'react-stomp';\nimport ChatRoom from './components/pages/chat_room/ChatRoom';\nimport CartDetail from './components/cart/CartDetail';\nimport Management from './components/pages/management/Management';\nimport Header from './components/layout/header/Header';\nimport * as url from './constant/Url';\nimport Alert from './components/messages/Alert';\nimport CartInfo from './components/cart/CartInfo';\n\nconst blankFunc = function (e) { };\n\nclass App extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      menus: [],\n      detailMode: false,\n      menuCode: '',\n      loading: false,\n      loadingPercentage: 0,\n      requestId: null,\n      enableShopping: false,\n      mainAppUpdated: new Date(),\n      hideSidebar: true\n    };\n\n    this.loadings = 0;\n\n    this.alertCallback = {\n      title: \"Info\",\n      message: \"Info\",\n      yesOnly: false,\n      onOk: () => { },\n      onNo: () => { }\n    }\n\n    this.setDetailMode = (detailMode) => {\n      this.setState({ detailMode: detailMode });\n    }\n\n    this.setMenuCode = (code) => {\n      this.setState({ menuCode: code });\n    }\n\n    this.refresh = () => {\n      this.setState({ mainAppUpdated: new Date() });\n    }\n\n    this.setEnableShopping = (val) => {\n      this.setState({ enableShopping: val })\n    }\n\n    this.logout = () => {\n      const app = this;\n      this.confirmDialog(\"Are you sure to logout?\",\n        function (e) {\n          app.props.performLogout(app);\n        }, blankFunc);\n    }\n\n    this.handleMenuCLick = (menu) => {\n\n      switch (menu.code) {\n\n        case menus.LOGOUT:\n          this.logout();\n          break;\n        default:\n          break;\n      }\n\n    }\n\n    this.requestAppId = () => {\n      this.props.requestAppId(this);\n    }\n\n    this.incrementLoadings = function () {\n      this.loadings++;\n    }\n\n    this.decrementLoadings = function () {\n      this.loadings--;\n      if (this.loadings < 0) {\n        this.loadings = 0;\n      }\n    }\n\n    this.startLoading = (realtime) => {\n      this.incrementLoadings();\n      this.setState({ loading: true, realtime: realtime });\n    }\n\n    this.endLoading = () => {\n      this.decrementLoadings();\n      if (this.loadings == 0) {\n        this.setState({ loading: false, loadingPercentage: 0 });\n      }\n\n    }\n\n    this.handleMessage = (msg) => {\n      let percentage = Math.floor(msg.percentage);\n      if (msg.percentage < 0 || msg.percentage > 100) {\n        this.endLoading();\n      }\n      this.setState({ loadingPercentage: percentage });\n    }\n\n    this.mainContent = () => {\n      return (<>\n        <Switch>\n          \n           \n          <Route  path=\"/suppliers\" render={\n            (renderProps) =>\n              <SupplierList app={this} setMenuCode={this.setMenuCode} />\n          } />\n          <Route exact path={[\"/\", \"/home\"]} render={\n            (renderProps) =>\n              <Home app={this} applicationProfile={this.props.applicationProfile} setMenuCode={this.setMenuCode} />\n          }  />\n          <Route  path=\"/chatroom\" render={\n            (renderProps) =>\n              <ChatRoom app={this} setMenuCode={this.setMenuCode} />\n          } />\n          <Route  path=\"/about\" render={\n            (renderProps) =>\n              <About app={this} applicationProfile={this.props.applicationProfile} setMenuCode={this.setMenuCode} />\n          }></Route>\n          <Route  path=\"/catalog\" render={\n            (renderProps) =>\n              <Catalog\n                app={this}\n                enableShopping={this.state.enableShopping}\n                setMenuCode={this.setMenuCode}\n                setDetailMode={this.setDetailMode} detailMode={this.state.detailMode} />\n\n          }></Route>\n          <Route  path=\"/cart\" render={\n            (renderProps) => <CartDetail enableShopping={this.state.enableShopping} app={this} setMenuCode={this.setMenuCode} />\n\n          }></Route>\n          <Route  path=\"/login\" render={\n            (renderProps) => <Login setMenuCode={this.setMenuCode} app={this} />\n\n          }></Route>\n          {/* ///////////authenticated//////////// */}\n          <Route  path=\"/dashboard\" render={\n            (renderProps) =>\n              <Dashboard app={this} loginStatus={this.props.loginStatus} setMenuCode={this.setMenuCode} />\n\n          }></Route>\n          <Route  path=\"/management\" render={\n            (renderProps) =>\n              <Management app={this} loginStatus={this.props.loginStatus} setMenuCode={(this.setMenuCode)} />\n\n          }></Route>\n        </Switch>\n\n      </>);\n    }\n\n    this.alertDialog = (message, title, yesOnly, onOk, onNo) => {\n\n      this.alertCallback.yesOnly = yesOnly;\n      this.alertCallback.onOk = onOk;\n      this.alertCallback.onNo = onNo;\n      this.alertCallback.message = message;\n      this.alertCallback.title = title;\n      this.setState({ showInfo: true })\n\n    }\n\n    this.infoDialog = (message) => {\n      this.alertDialog(message, \"Info\", true, blankFunc, blankFunc);\n    }\n\n    this.confirmDialog = (message, onOk, onNo) => {\n      this.alertDialog(message, \"Confirmation\", false, onOk, onNo);\n    }\n\n  }\n\n  componentDidUpdate() {\n    if (this.props.requestId != this.state.requestId) {\n      this.setState({ requestId: this.props.requestId });\n      this.props.refreshLogin();\n\n    }\n\n    if (this.props.applicationProfile) {\n      this.updateIcon(this.props.applicationProfile);\n    }\n  }\n\n  updateIcon(profile) {\n    if(profile.iconUrl){\n      let link = document.querySelector('link[rel=\"shortcut icon\"]') ||\n        document.querySelector('link[rel=\"icon\"]');\n      if (!link) {\n        link = document.createElement('link');\n        link.id = 'favicon';\n        link.rel = 'shortcut icon';\n        document.head.appendChild(link);\n      }\n\n      link.href = url.baseImageUrl + '/' + profile.iconUrl;\n    }\n  }\n\n  componentDidMount() {\n    this.requestAppId();\n    this.setState({ loadingPercentage: 0 });\n  }\n\n  setMenus() {\n    const additionalMenus = this.props.menus ? this.props.menus : [];\n    const menus = new Array();\n    for (let i = 0; i < additionalMenus.length; i++) {\n\n      const menu = additionalMenus[i];\n      const isNotAuthenticated = this.props.loginStatus != true && menu.authenticated == true;\n      const isShoppingDisabled = !this.state.enableShopping && menu.code == 'cart';\n\n      if (isNotAuthenticated) { continue; } \n      if (isShoppingDisabled) { continue; }\n\n      menus.push(menu);\n    }\n\n    return menus;\n\n  }\n\n  render() {\n\n    if (!this.state.requestId) {\n      return (<Loader realtime={false} text=\"Please wait...\" type=\"loading\" />)\n    }\n\n    const menus = this.setMenus(); \n    const usedHost = url.contextPath();\n    const applicationProfile = this.props.applicationProfile;\n    const isHideSidebar = this.state.hideSidebar == true;\n    const contentClass = isHideSidebar ? 'col-12' : 'col-10';\n    const toggleButtonIconClass = isHideSidebar ? 'fa fa-align-justify' : 'fa fa-angle-double-left';\n\n    return (\n      <div className=\"App\">\n        <Loading realtime={this.state.realtime} loading={this.state.loading} loadingPercentage={this.state.loadingPercentage} />\n        <AlertComponent showInfo={this.state.showInfo} alertData={this.alertCallback} hideInfo={() => this.setState({ showInfo: false })} />\n        <CartInfo mainAppUpdated={this.state.mainAppUpdated} enableShopping={this.state.enableShopping} />\n\n        <Header showOptionButton={isHideSidebar} hideMenu={() => { this.setState({ hideSidebar: true }) }} showMenu={() => { this.setState({ hideSidebar: false }) }} applicationProfile={applicationProfile} />\n        <div className=\"row\" id=\"main-layout\">\n          {isHideSidebar ? null :\n            <div id=\"main-menu\" className={'col-2'} style={{ backgroundColor: applicationProfile.color }}>\n              <button style={{ float: \"right\", margin: '5px', color: applicationProfile.fontColor }} className=\"btn\" onClick={() => {\n                this.setState({ hideSidebar: true })\n              }} ><i className='fa fa-angle-double-left'></i></button>\n              <Menu alertDialog={this.alertDialog}\n                handleMenuCLick={this.handleMenuCLick}\n                activeCode={this.state.menuCode}\n                menus={menus} />\n            </div>}\n\n          <div id=\"main-content\" className={contentClass}><this.mainContent /></div>\n        </div>\n\n        <SockJsClient url={usedHost + 'realtime-app'} topics={['/wsResp/progress/' + localStorage.getItem(\"requestId\")]}\n          onMessage={(msg) => { this.handleMessage(msg) }}\n          ref={(client) => { this.clientRef = client }} />\n        <Footer applicationProfile={this.props.applicationProfile} />\n\n      </div>\n    )\n  }\n\n}\n\nfunction AlertComponent(props) {\n  if (props.showInfo) {\n    const alertData = props.alertData;\n    return <Alert\n      title={alertData.title}\n      message={alertData.message}\n      onOk={(e) => {\n        if (alertData.onOk) { alertData.onOk(e); }\n        props.hideInfo();\n      }}\n      yesOnly={alertData.yesOnly}\n      onNo={(e) => {\n        if (alertData.onNo) { alertData.onNo(e); }\n        props.hideInfo();\n      }}\n      onClose={(e) => {\n        props.hideInfo();\n      }}\n    />\n  }\n  return null;\n}\n\nfunction Loading(props) {\n  if (props.loading == true) {\n    return (\n      <Loader realtime={props.realtime} progress={props.loadingPercentage} text=\"Please wait...\" type=\"loading\" />\n    );\n  }\n  return null;\n}\n\nconst mapStateToProps = state => {\n  //console.log(state);\n  return {\n    //\n    entities: state.shopState.entities,\n\n    //user\n    loginStatus: state.userState.loginStatus,\n    menus: state.userState.menus,\n    requestId: state.userState.requestId,\n    applicationProfile: state.userState.applicationProfile,\n\n    //\n    cart: state.shopState.cart\n  }\n}\n\nconst mapDispatchToProps = dispatch => ({\n  performLogout: (app) => dispatch(actions.performLogout(app)),\n  requestAppId: (app) => dispatch(actions.requestAppId(app)),\n  refreshLogin: () => dispatch(actions.refreshLoginStatus()),\n  // getProductCatalog: (page) => dispatch(actions.getProductList(page))\n})\n\nexport default withRouter(connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(App))\n","import * as types from './types'\r\n\r\nexport const initState = {\r\n    catalogData: {},\r\n    entities: [],\r\n    entity: {},\r\n    categories: [],\r\n    suppliersData: [],\r\n    requestId: null,\r\n    messages: null,\r\n    userAlias: \"anonymous_\" + new Date().getTime(),\r\n    cart: []\r\n\r\n};\r\n\r\nexport const reducer = (state = initState, action) => {\r\n    switch (action.type) {\r\n        case types.FETCH_PRODUCT_LIST:\r\n            return { ...state, catalogData: action.payload };\r\n        case types.FETCH_PRODUCT_DETAIL:\r\n            return { ...state, entity: action.payload.entities[0] };\r\n        case types.REMOVE_SHOP_ENTITY:\r\n            return { ...state, entity: action.payload  /*null*/ };\r\n        case types.FETCH_SUPPLIER_LIST:\r\n            return { ...state, suppliersData: action.payload };\r\n        case types.RESET_SUPPLIERS:\r\n            return { ...state, suppliersData: {} };\r\n        case types.LOAD_MORE_SUPPLIER:\r\n            let currentProduct = state.entity;\r\n            let loadedSupplier = action.payload.entities;\r\n            for (let index = 0; index < loadedSupplier.length; index++) {\r\n                currentProduct.suppliers.push(loadedSupplier[index]);\r\n            }\r\n            console.info(\"additinal suppliers: \", currentProduct.suppliers);\r\n            action.referrer.refresh();\r\n            return { ...state, entity: currentProduct };\r\n        case types.FETCH_PRODUCT_CATEGORIES_ALL:\r\n            return { ...state, categories: action.payload.entities };\r\n        // case types.REQUEST_ID:\r\n\r\n        //     return { ...state, requestId: action.payload.message };\r\n        case types.SEND_MESSAGE:\r\n            return { ...state, messages: action.payload.entities, userAlias: action.payload.username };\r\n        case types.STORE_MESSAGE:\r\n            return { ...state, messages: action.payload.entities };\r\n        case types.GET_MESSAGE:\r\n            return { ...state, messages: action.payload.entities };\r\n        case types.UPDATE_CART:\r\n            if (action.payload.app) {\r\n                action.payload.app.refresh();\r\n            }\r\n            return { ...state, cart: action.payload.cart };\r\n\r\n       \r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default reducer;","\r\n\r\nexport const menus = [\r\n  {\r\n    code:\"home\",\r\n    name:\"Home\",\r\n    url:\"home\",\r\n    menuClass: \"fa fa-home\",\r\n    active: false,\r\n    authenticated: false\r\n  } ,\r\n  {\r\n    code:\"catalog\",\r\n    name:\"Catalog\",\r\n    url:\"catalog\",\r\n    menuClass: \"fa fa-store-alt\",\r\n    active: false,\r\n     authenticated: false\r\n  } ,\r\n  {\r\n    code:\"about\",\r\n    name:\"About\",\r\n    url:\"about\",\r\n    menuClass: \"fa fa-address-book\",\r\n    active: false,\r\n    authenticated: false\r\n  } ,\r\n  {\r\n    code:\"supplierlist\",\r\n    name:\"Our Supplier\",\r\n    url:\"suppliers\",\r\n    menuClass: \"fas fa-warehouse\",\r\n    active: false,\r\n    authenticated: false\r\n  }, \r\n  {\r\n    code:\"chatroom\",\r\n    name:\"Chat Room\",\r\n    url:\"chatroom\",\r\n    menuClass: \"fas fa-comments\",\r\n    active: false,\r\n    authenticated: false\r\n  } ,\r\n  {\r\n    code:\"cart\",\r\n    name:\"My Cart\",\r\n    url:\"cart\",\r\n    menuClass: \"fa fa-shopping-cart\",\r\n    active: false,\r\n    authenticated: false\r\n  } ,\r\n  {\r\n    code:\"login\",\r\n    name:\"Login\",\r\n    url:\"login\",\r\n    menuClass: \"fas fa-sign-in-alt\",\r\n    active: false,\r\n    authenticated: false\r\n  }, \r\n  {\r\n    code:\"dashboard\",\r\n    name:\"Dashboard\",\r\n    url:\"dashboard\",\r\n    menuClass: \"fas fa-tachometer-alt\",\r\n    active: false,\r\n    authenticated: true\r\n  }, \r\n  {\r\n    code:\"management\",\r\n    name:\"Management\",\r\n    url:\"management\",\r\n    menuClass: \"fa fa-database\",\r\n    active: false,\r\n    authenticated: true\r\n  }, \r\n  {\r\n    code:\"logout\",\r\n    name:\"Logout\",\r\n    url:\"#\",\r\n    menuClass: \"fas fa-sign-out-alt\",\r\n    active: false,\r\n    authenticated: true\r\n  }\r\n];\r\n","import * as types from './types'\r\nimport * as menus from '../utils/HardCodedEntites'\r\nimport * as menuCodes from '../constant/Menus'\r\n\r\nexport const initState = {\r\n    loginKey: null,\r\n    loginStatus: false,\r\n    loginFailed: false,\r\n    menus: menus.menus,\r\n    loggedUser: null,\r\n    loginAttempt: false,\r\n    requestId: null,\r\n    applicationProfile: {},\r\n};\r\n\r\nexport const reducer = (state = initState, action) => {\r\n    /*\r\n        ========setting menu========\r\n    */\r\n    let updatedMenus = new Array();\r\n    if (action.payload) {\r\n\r\n        let loggedIn = action.payload && action.payload.loginStatus == true;\r\n        for (let index = 0; index < menus.menus.length; index++) {\r\n            const menu = menus.menus[index];\r\n            if (loggedIn && menu.code == menuCodes.LOGIN) { continue; }\r\n\r\n            if (menu.authenticated == false) {\r\n                updatedMenus.push(menu);\r\n            } else {\r\n                if (loggedIn) { updatedMenus.push(menu); }\r\n            }\r\n        }\r\n    }\r\n\r\n    switch (action.type) {\r\n        case types.REQUEST_ID:\r\n            result = { ...state, requestId: action.payload.message, applicationProfile: action.payload.applicationProfile };\r\n             \r\n            localStorage.setItem('requestId', result.requestId);\r\n            if (action.payload.loggedIn != true) {\r\n\r\n                result.loginStatus = false;\r\n                result.loggedUser = null;\r\n                localStorage.removeItem(\"loginKey\");\r\n                localStorage.removeItem(\"loggedUser\");\r\n            } else {\r\n\r\n                if (action.payload.sessionData) {\r\n\r\n                    result.loggedUser = action.payload.sessionData.user;\r\n                    result.loginStatus = action.payload.loggedIn;\r\n                    result.loginKey = localStorage.getItem('loginKey');\r\n                    localStorage.setItem(\"loggedUser\", JSON.stringify(result.loggedUser));\r\n                }else {\r\n                    result.loginStatus = false;\r\n                    result.loggedUser = null;\r\n                    localStorage.removeItem(\"loginKey\");\r\n                    localStorage.removeItem(\"loggedUser\");\r\n                }\r\n            } \r\n\r\n            console.debug(\"o o o result.loginStatus:\", result.loginStatus)\r\n            //  action.payload.referer.refresh();\r\n\r\n            return result;\r\n        case types.DO_LOGIN:\r\n            let result = {\r\n                ...state,\r\n                loginAttempt: true,\r\n                loginStatus: action.payload.loginStatus,\r\n                loginKey: action.payload.loginKey,\r\n                loginFailed: action.payload.loginStatus == false,\r\n                menus: updatedMenus,\r\n                loggedUser: action.payload.loggedUser\r\n            };\r\n\r\n            if (result.loginStatus == true) {\r\n                localStorage.setItem(\"loginKey\", result.loginKey);\r\n                // localStorage.setItem(\"loggedUser\", JSON.stringify(result.loggedUser));\r\n            }\r\n\r\n            return result;\r\n        case types.DO_LOGOUT:\r\n            result = {\r\n                ...state,\r\n                loginStatus: action.payload.loginStatus,\r\n                menus: updatedMenus,\r\n                loggedUser: null\r\n            };\r\n            localStorage.removeItem(\"loginKey\");\r\n            localStorage.removeItem(\"loggedUser\");\r\n            return result;\r\n        case types.REFRESH_LOGIN:\r\n            result = {\r\n                ...state,\r\n                loginStatus: action.payload.loginStatus,\r\n                menus: updatedMenus,\r\n                loggedUser: action.payload.loggedUser,\r\n                requestId: action.payload.requestId,\r\n            };\r\n            return result;\r\n        case types.GET_LOGGED_USER:\r\n            result = {\r\n                ...state,\r\n                loggedUser: action.payload.data\r\n            };\r\n            localStorage.setItem(\"loggedUser\", JSON.stringify(action.payload))\r\n            return result;\r\n        default:\r\n            if (action.payload && action.payload.loginStatus != null)\r\n                return { ...state, menus: updatedMenus };\r\n            else {\r\n                return { ...state };\r\n            }\r\n    }\r\n}\r\n\r\nexport default reducer;","import * as types from './types'\r\nimport { nullLiteral } from '@babel/types';\r\n\r\nexport const initState = {\r\n    productFlowStock: null,\r\n    products: null,\r\n    transactionData: null,\r\n    successTransaction: false,\r\n    customersData: null,\r\n    productsData: null,\r\n    cashflowInfoOut: null,\r\n    cashflowInfoIn: null,\r\n    cashflowDetail: null,\r\n    productSalesData: null,\r\n    productSalesDetails: null,\r\n    transactionYears: [new Date().getFullYear(), new Date().getFullYear()]\r\n};\r\n\r\nexport const reducer = (state = initState, action) => {\r\n\r\n    //update trx year\r\n    if (action != null && action.payload != null && action.payload.transactionYears != null) {\r\n        state.transactionYears = action.payload.transactionYears;\r\n    }\r\n\r\n    switch (action.type) {\r\n\r\n        case types.GET_STOCK_INFO:\r\n            let result = { ...state, productFlowStock: action.payload.entities[0] };\r\n            return result;\r\n\r\n        case types.SUBMIT_TRX_PURCHASE:\r\n            return { ...state, transactionData: action.payload.transaction, successTransaction: true };\r\n\r\n        case types.SUBMIT_TRX_SUPPLY:\r\n            return { ...state, transactionData: action.payload.transaction, successTransaction: true };\r\n\r\n        case types.RESET_TRX_PURCHASE:\r\n            return {\r\n                ...state, productFlowStock: null,\r\n                transactionData: null, successTransaction: false,\r\n                customersData: null, productsData: null\r\n            };\r\n\r\n        case types.FETCH_CUSTOMER_LIST:\r\n            return { ...state, customersData: action.payload.entities };\r\n        case types.RESET_CUSTOMERS:\r\n            return { ...state, customersData: null };\r\n        case types.FETCH_PRODUCT_LIST_TRX:\r\n            return { ...state, productsData: action.payload.entities };\r\n        case types.RESET_PRODUCTS:\r\n            return { ...state, productsData: null };\r\n\r\n        case types.GET_CASHFLOW_INFO:\r\n            result = state;\r\n\r\n            if (action.payload.entity.module == \"OUT\")\r\n                result.cashflowInfoOut = action.payload.entity;\r\n            if (action.payload.entity.module == \"IN\")\r\n                result.cashflowInfoIn = action.payload.entity;\r\n\r\n            return result;\r\n\r\n        case types.GET_CASHFLOW_DETAIL:\r\n            return { ...state, cashflowDetail: action.payload };\r\n        case types.GET_PRODUCT_SALES:\r\n            let currentProductSalesData = action.payload;\r\n            if (action.loadMore == true) {\r\n                currentProductSalesData = state.productSalesData;\r\n                let loadedProductList = action.payload.entities;\r\n                for (let i = 0; i < loadedProductList.length; i++) {\r\n                    currentProductSalesData.entities.push(loadedProductList[i]);\r\n                }\r\n            }\r\n            console.log(\"will update currentProductSalesData: \", currentProductSalesData.entities.length);\r\n            result = { ...state, productSalesData: currentProductSalesData };\r\n            action.referrer.refresh();\r\n            return result;\r\n        case types.GET_PRODUCT_STOCKS:\r\n            return { ...state, products: action.payload.entities };\r\n        case types.RESET_PRODUCT_STOCKS:\r\n            return { ...state, products: null };\r\n        case types.GET_PRODUCT_SALES_DETAIL:\r\n            return { ...state, productSalesDetails: action.payload };\r\n        default:\r\n            return { ...state };\r\n    }\r\n}\r\n\r\nexport default reducer;","import * as types from './types'\r\n\r\nexport const initState = {\r\n\r\n    entitiesData: {\r\n        entityConfig: null,\r\n    },\r\n    managedEntity: null,\r\n    entityProperty: null,\r\n    managementMenus: [],\r\n\r\n};\r\n\r\nexport const reducer = (state = initState, action) => {\r\n    switch (action.type) {\r\n        case types.GET_ENTITY:\r\n\r\n            return { ...state, entitiesData: action.payload };\r\n        case types.GET_ENTITY_BY_ID:\r\n\r\n            return { ...state, managedEntity: action.payload.entities[0] };\r\n        case types.UPDATE_ENTITY:\r\n\r\n            return state;\r\n        case types.REMOVE_MANAGED_ENTITY:\r\n\r\n            return { ...state, managedEntity: null };\r\n        case types.GET_ENTITY_PROPERTY:\r\n\r\n            return { ...state, entityProperty: action.payload };\r\n        case types.GET_MANAGEMENT_MENUS:\r\n\r\n            return { ...state, managementMenus: action.payload.generalList };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default reducer;","import * as shopReducer from \"./shopReducer\"\r\nimport * as userReducer from \"./userReducer\"\r\nimport * as transactionReducer from \"./transactionReducer\"\r\nimport * as managementReducer from \"./managementReducer\"\r\n\r\nimport { combineReducers } from \"redux\";\r\n\r\nexport const rootReducer = combineReducers(\r\n    {\r\n        shopState: shopReducer.reducer,\r\n        userState: userReducer.reducer,\r\n        transactionState: transactionReducer.reducer,\r\n        managementState: managementReducer.reducer\r\n    }\r\n);\r\n\r\nexport const initialState = {\r\n    shopState: shopReducer.initState,\r\n    userState: userReducer.initState,\r\n    transactionState: transactionReducer.initState,\r\n    managementState: managementReducer.initState\r\n}\r\n\r\nexport default rootReducer;","\r\nexport const commonAuthorizedHeader = () => {\r\n    return {\r\n        'Content-Type': 'application/json', \r\n        'requestId':  getRequestId(),//'localStorage.getItem(\"requestId\")',\r\n        'loginKey': localStorage.getItem('loginKey')\r\n    }\r\n};\r\n\r\nexport const getRequestId = () => {\r\n    return localStorage.getItem(\"requestId\");// document.getElementById(\"requestId\").value;\r\n}","import * as common from './Common'\r\nimport * as types from '../redux/types'\r\n\r\nconst POST_METHOD = \"post\";\r\n\r\nexport const performLoginMiddleware = store => next => action => {\r\n    if (!action.meta || action.meta.type !== types.DO_LOGIN) {\r\n        return next(action);\r\n    }\r\n    const app = action.meta.app;\r\n    fetch(action.meta.url, {\r\n        method: POST_METHOD, body: JSON.stringify(action.payload), headers: common.commonAuthorizedHeader()\r\n    })\r\n        .then(response => { return Promise.all([response.json(), response]); })\r\n        .then(([responseJson, response]) => {\r\n\r\n            let loginKey = \"\";\r\n            let loginSuccess = false;\r\n\r\n            if (responseJson.code != null && responseJson.code == \"00\") {\r\n                for (var pair of response.headers.entries()) {\r\n                    if (pair[0] == \"loginkey\") {\r\n                        loginKey = pair[1];\r\n                        break;\r\n                    }\r\n                }\r\n                console.log(\"loginKey: \", loginKey);\r\n                loginSuccess = true;\r\n\r\n            }\r\n            let newAction = Object.assign({}, action, {\r\n                payload: {\r\n                    loginStatus: loginSuccess,\r\n                    loginKey: loginKey,\r\n                    loggedUser: responseJson.entity\r\n                }\r\n            });\r\n            delete newAction.meta;\r\n            store.dispatch(newAction);\r\n        })\r\n        .catch(err => { console.log(err) })\r\n        .finally(param => {\r\n            app.endLoading();  \r\n        });\r\n\r\n}\r\n\r\nexport const requestAppIdMiddleware = store => next => action => {\r\n    if (!action.meta || action.meta.type !== types.REQUEST_ID) { return next(action); }\r\n\r\n    let headers = common.commonAuthorizedHeader(); \r\n\r\n    fetch(action.meta.url, {\r\n        method: POST_METHOD, body: JSON.stringify(action.payload),\r\n        headers: headers\r\n    }).then(response => response.json())\r\n        .then(data => {\r\n            console.debug(\"Request App Id Middleware Response:\", data);\r\n            \r\n            if (data.code != \"00\") {\r\n                alert(\"Error requesting app ID\");\r\n                return;\r\n            }\r\n\r\n            let newAction = Object.assign({}, action, { payload: {loginStatus: data.loggedIn, ...data }});\r\n            delete newAction.meta;\r\n            store.dispatch(newAction);\r\n        })\r\n        .catch(err => console.log(err)).finally(param => action.meta.app.endLoading());\r\n}\r\n\r\nexport const getLoggedUserMiddleware = store => next => action => {\r\n    if (!action.meta || action.meta.type !== types.GET_LOGGED_USER) { return next(action); }\r\n\r\n    let headers = common.commonAuthorizedHeader(); \r\n\r\n    fetch(action.meta.url, {\r\n        method: POST_METHOD, body: JSON.stringify(action.payload),\r\n        headers: headers\r\n    }).then(response => response.json())\r\n        .then(data => {\r\n            console.debug(\"getLoggedUserMiddleware Response:\", data);\r\n            \r\n            if (!data) {\r\n                alert(\"Error performing request\");\r\n                return;\r\n            }\r\n\r\n            let newAction = Object.assign({}, action, { payload: { data }});\r\n            delete newAction.meta;\r\n            store.dispatch(newAction);\r\n        })\r\n        .catch(err => console.log(err)).finally(param =>{ \r\n            action.meta.app.endLoading();\r\n            action.meta.app.refresh();\r\n        });\r\n}\r\n\r\nexport const refreshLoginStatusMiddleware = store => next => action => {\r\n    if (!action.meta || action.meta.type !== types.REFRESH_LOGIN) {\r\n        return next(action);\r\n    }\r\n\r\n    let loggedUser = null;\r\n    if (localStorage.getItem(\"loggedUser\")) {\r\n        loggedUser = JSON.parse(localStorage.getItem(\"loggedUser\"));\r\n    }\r\n\r\n    let newAction = Object.assign({}, action, {\r\n        payload: {\r\n            loginStatus: loggedUser ? true : false,\r\n            loginKey: localStorage.getItem(\"loginKey\"),\r\n            loggedUser: loggedUser,\r\n            requestId: common.getRequestId(), //TODO: no hard code\r\n        }\r\n    });\r\n    delete newAction.meta;\r\n    store.dispatch(newAction);\r\n\r\n}\r\n\r\nexport const performLogoutMiddleware = store => next => action => {\r\n    if (!action.meta || action.meta.type !== types.DO_LOGOUT) {\r\n        return next(action);\r\n    }\r\n    const app = action.meta.app;\r\n\r\n    fetch(action.meta.url, {\r\n        method: POST_METHOD, body: JSON.stringify(action.payload),\r\n        headers: { 'Content-Type': 'application/json', 'requestId': localStorage.getItem(\"requestId\"), 'loginKey': localStorage.getItem(\"loginKey\") }\r\n    })\r\n        .then(response => { return Promise.all([response.json(), response]); })\r\n        .then(([responseJson, response]) => {\r\n            let logoutSuccess = false;\r\n            if (responseJson.code == \"00\") {\r\n                logoutSuccess = true;\r\n            }else{\r\n                alert(\"Logout Failed\");\r\n            }\r\n\r\n            let newAction = Object.assign({}, action, {\r\n                payload: {\r\n                    loginStatus: !logoutSuccess\r\n                }\r\n            });\r\n            delete newAction.meta;\r\n            store.dispatch(newAction);\r\n        })\r\n        .catch(err => { console.log(err) })\r\n        .finally(param => app.endLoading());\r\n\r\n}","import * as common from './Common'\r\nimport * as types from '../redux/types'\r\n\r\nconst POST_METHOD = \"post\";\r\n\r\n\r\nexport const getEntitiesWithCallbackMiddleware = store => next => action => {\r\n    if (!action.meta || action.meta.type !== types.GET_ENTITY_WITH_CALLBACK) { return next(action); }\r\n\r\n    fetch(action.meta.url, {\r\n        method: POST_METHOD, body: JSON.stringify(action.payload),\r\n        headers: common.commonAuthorizedHeader()\r\n    })\r\n        .then(response => response.json())\r\n        .then(data => {\r\n            if (data.entities == null || data.entities.length == 0) {\r\n                alert(\"Data not found!\");\r\n                return;\r\n            }\r\n\r\n            action.meta.callback(data, action.meta.referer);\r\n\r\n            let newAction = Object.assign({}, action, {\r\n                payload: data\r\n            });\r\n            delete newAction.meta;\r\n            store.dispatch(newAction);\r\n        })\r\n        .catch(err => console.log(err))\r\n        .finally(param => action.meta.app.endLoading());\r\n}\r\n\r\nexport const updateEntityMiddleware = store => next => action => {\r\n    if (!action.meta || action.meta.type !== types.UPDATE_ENTITY) { return next(action); }\r\n\r\n    fetch(action.meta.url, {\r\n        method: POST_METHOD, body: JSON.stringify(action.payload),\r\n        headers: common.commonAuthorizedHeader()\r\n    })\r\n        .then(response => response.json())\r\n        .then(data => {\r\n            console.debug(\"Response updateEntityMiddleware:\", data);\r\n            if (data.code != \"00\") {\r\n                alert(\"Error Update Entity!\");\r\n                return;\r\n            }\r\n            alert(\"Update Success!\");\r\n            const callback = action.meta.callback;\r\n            const referer = action.meta.referer;\r\n            let newAction = Object.assign({}, action, { payload: data });\r\n            delete newAction.meta;\r\n            store.dispatch(newAction);\r\n            callback(referer);\r\n        })\r\n        .catch(err => console.log(err))\r\n        .finally(param => action.meta.app.endLoading());\r\n}\r\n\r\nexport const getEntityByIdMiddleware = store => next => action => {\r\n    if (!action.meta || action.meta.type !== types.GET_ENTITY_BY_ID) { return next(action); }\r\n\r\n    fetch(action.meta.url, {\r\n        method: POST_METHOD, body: JSON.stringify(action.payload),\r\n        headers: common.commonAuthorizedHeader()\r\n    })\r\n        .then(response => response.json())\r\n        .then(data => {\r\n            console.debug(\"Response:\", data);\r\n            if (data.entities == null || data.entities.length == 0) {\r\n                alert(\"Data not found!\");\r\n                return;\r\n            }\r\n            let newAction = Object.assign({}, action, {\r\n                payload: data\r\n            });\r\n            delete newAction.meta;\r\n            store.dispatch(newAction);\r\n        })\r\n        .catch(err => console.log(err))\r\n        .finally(param => action.meta.app.endLoading());\r\n}\r\n\r\nexport const getEntityListMiddleware = store => next => action => {\r\n    if (!action.meta || action.meta.type !== types.GET_ENTITY) { return next(action); }\r\n\r\n    fetch(action.meta.url, {\r\n        method: POST_METHOD, body: JSON.stringify(action.payload),\r\n        headers: common.commonAuthorizedHeader()\r\n    })\r\n        .then(response => response.json())\r\n        .then(data => {\r\n            console.debug(\"Response:\", data);\r\n            if (data.entities == null ) {\r\n                data.entities = [];\r\n            }\r\n            data.entityConfig = action.meta.entityConfig;\r\n            let newAction = Object.assign({}, action, {\r\n                payload: data\r\n            });\r\n            delete newAction.meta;\r\n            store.dispatch(newAction);\r\n        })\r\n        .catch(err => console.log(err))\r\n        .finally(param => action.meta.app.endLoading());\r\n}\r\n\r\nexport const getEntityPropertyMiddleware = store => next => action => {\r\n    if (!action.meta || action.meta.type !== types.GET_ENTITY_PROPERTY) { return next(action); }\r\n\r\n    fetch(action.meta.url, {\r\n        method: POST_METHOD, body: JSON.stringify(action.payload),\r\n        headers: common.commonAuthorizedHeader()\r\n    })\r\n        .then(response => response.json())\r\n        .then(data => {\r\n            if(data == null){\r\n                alert(\"Error requesting EntityProperty\");\r\n                return;\r\n            }\r\n            console.debug(\"Response:\", data);  \r\n            let newAction = Object.assign({}, action, {\r\n                payload: data\r\n            });\r\n            delete newAction.meta;\r\n            store.dispatch(newAction);\r\n        })\r\n        .catch(err => console.log(err))\r\n        .finally(param => action.meta.app.endLoading());\r\n}\r\n\r\nexport const getManagementMenusMiddleware = store => next => action => {\r\n    if (!action.meta || action.meta.type !== types.GET_MANAGEMENT_MENUS) { return next(action); }\r\n\r\n    fetch(action.meta.url, {\r\n        method: POST_METHOD, body: JSON.stringify(action.payload),\r\n        headers: common.commonAuthorizedHeader()\r\n    })\r\n        .then(response => response.json())\r\n        .then(data => {\r\n            if(data == null){\r\n                alert(\"Error requesting getManagementMenus\");\r\n                return;\r\n            }\r\n            console.debug(\"Response:\", data);  \r\n            let newAction = Object.assign({}, action, {\r\n                payload: data\r\n            });\r\n            delete newAction.meta;\r\n            store.dispatch(newAction);\r\n        })\r\n        .catch(err => console.log(err))\r\n        .finally(param => action.meta.app.endLoading());\r\n}\r\n\r\nexport const removeManagedEntityMiddleware = store => next => action => {\r\n    if (!action.meta || action.meta.type !== types.REMOVE_MANAGED_ENTITY) { return next(action); }\r\n    let newAction = Object.assign({}, action, { payload: action.payload });\r\n    delete newAction.meta;\r\n    store.dispatch(newAction);\r\n}\r\n \r\n","import * as common from './Common'\r\nimport * as types from '../redux/types'\r\n\r\nconst POST_METHOD = \"post\"; \r\n\r\nexport const getMessagesMiddleware = store => next => action => {\r\n    if (!action.meta || action.meta.type !== types.GET_MESSAGE) { return next(action); }\r\n    fetch(action.meta.url, {\r\n        method: POST_METHOD, body: JSON.stringify(action.payload),\r\n        headers: { 'Content-Type': 'application/json', 'requestId': localStorage.getItem(\"requestId\") }\r\n    }).then(response => response.json())\r\n        .then(data => {\r\n            console.debug(\"sendChatMessageMiddleware Response:\", data);\r\n            let newAction = Object.assign({}, action, { payload: data });\r\n            delete newAction.meta;\r\n            store.dispatch(newAction);\r\n        })\r\n        .catch(err => console.log(err)).finally(param => action.meta.app.endLoading());\r\n}\r\n\r\nexport const sendChatMessageMiddleware = store => next => action => {\r\n    if (!action.meta || action.meta.type !== types.SEND_MESSAGE) { return next(action); }\r\n    fetch(action.meta.url, {\r\n        method: POST_METHOD, body: JSON.stringify(action.payload),\r\n        headers: { 'Content-Type': 'application/json', 'requestId': localStorage.getItem(\"requestId\") }\r\n    }).then(response => response.json())\r\n        .then(data => {\r\n            console.debug(\"sendChatMessageMiddleware Response:\", data);\r\n            data.username = action.payload.username;\r\n            let newAction = Object.assign({}, action, { payload: data });\r\n            delete newAction.meta;\r\n            store.dispatch(newAction);\r\n        })\r\n        .catch(err => console.log(err)).finally(param => action.meta.app.endLoading());\r\n}\r\n\r\nexport const storeChatMessageLocallyMiddleware = store => next => action => {\r\n    if (!action.meta || action.meta.type !== types.STORE_MESSAGE) { return next(action); }\r\n    let newAction = Object.assign({}, action, { payload: action.payload });\r\n    delete newAction.meta;\r\n    store.dispatch(newAction);\r\n} \r\n\r\n","import * as common from './Common'\r\nimport * as types from '../redux/types'\r\n\r\nconst POST_METHOD = \"post\";\r\n\r\nexport const getProductListMiddleware = store => next => action => {\r\n    if (!action.meta || action.meta.type !== types.FETCH_PRODUCT_LIST) {\r\n        return next(action);\r\n    }\r\n\r\n    fetch(action.meta.url, {\r\n        method: POST_METHOD, body: JSON.stringify(action.payload), headers: common.commonAuthorizedHeader()\r\n    })\r\n        .then(response => response.json())\r\n        .then(data => {\r\n            console.debug(\"Response:\", data);\r\n            if (data.entities == null || data.entities.length == 0) {\r\n                alert(\"Data not found!\");\r\n                return;\r\n            }\r\n            let newAction = Object.assign({}, action, {\r\n                payload: data\r\n            });\r\n            delete newAction.meta;\r\n            store.dispatch(newAction);\r\n        })\r\n        .catch(err => console.log(err)).finally(param => action.meta.app.endLoading());\r\n}\r\n\r\nexport const getProductDetailMiddleWare = store => next => action => {\r\n    if (!action.meta || action.meta.type !== types.FETCH_PRODUCT_DETAIL) {\r\n        return next(action);\r\n    }\r\n    const app = action.meta.app;\r\n    fetch(action.meta.url, {\r\n        method: POST_METHOD, body: JSON.stringify(action.payload), headers: common.commonAuthorizedHeader()\r\n    })\r\n        .then(response => response.json())\r\n        .then(data => {\r\n            console.debug(\"Response:\", data);\r\n            if (data.entities == null || data.entities.length == 0) {\r\n                alert(\"Data not found!\");\r\n                return;\r\n            }\r\n            let newAction = Object.assign({}, action, {\r\n                payload: data\r\n            });\r\n            delete newAction.meta;\r\n            store.dispatch(newAction);\r\n        })\r\n        .catch(err => console.log(err))\r\n        .finally(param => app.endLoading());\r\n}\r\n\r\nexport const loadMoreSupplierMiddleware = store => next => action => {\r\n    if (!action.meta || action.meta.type !== types.LOAD_MORE_SUPPLIER) {\r\n        return next(action);\r\n    }\r\n    fetch(action.meta.url, {\r\n        method: POST_METHOD, body: JSON.stringify(action.payload), headers: common.commonAuthorizedHeader()\r\n    })\r\n        .then(response => response.json())\r\n        .then(data => {\r\n            console.debug(\"Response:\", data);\r\n            if (data.entities == null || data.entities.length == 0) {\r\n                alert(\"Data not found!\");\r\n                return;\r\n            }\r\n            let newAction = Object.assign({}, action, {\r\n                payload: data, referrer: action.meta.referrer\r\n            });\r\n            delete newAction.meta;\r\n            store.dispatch(newAction);\r\n        })\r\n        .catch(err => console.log(err))\r\n        .finally(parap => action.meta.referrer.props.app.endLoading());\r\n\r\n}\r\n\r\nexport const removeEntityMiddleware = store => next => action => {\r\n    if (!action.meta || action.meta.type !== types.REMOVE_SHOP_ENTITY) { return next(action); }\r\n    let newAction = Object.assign({}, action, { payload: null });\r\n    delete newAction.meta;\r\n    store.dispatch(newAction);\r\n\r\n}\r\n\r\n\r\nexport const getSupplierListMiddleware = store => next => action => {\r\n    if (!action.meta || action.meta.type !== types.FETCH_SUPPLIER_LIST) { return next(action); }\r\n\r\n    fetch(action.meta.url, {\r\n        method: POST_METHOD, body: JSON.stringify(action.payload),\r\n        headers: common.commonAuthorizedHeader()\r\n    })\r\n        .then(response => response.json())\r\n        .then(data => {\r\n            console.debug(\"Response:\", data);\r\n            if (data.entities == null || data.entities.length == 0) {\r\n                alert(\"Data not found!\");\r\n                return;\r\n            }\r\n            let newAction = Object.assign({}, action, {\r\n                payload: data\r\n            });\r\n            delete newAction.meta;\r\n            store.dispatch(newAction);\r\n        })\r\n        .catch(err => console.log(err))\r\n        .finally(param => action.meta.app.endLoading());\r\n}\r\n \r\n\r\nexport const getAllProductCategoriesMiddleware = store => next => action => {\r\n    if (!action.meta || action.meta.type !== types.FETCH_PRODUCT_CATEGORIES_ALL) {\r\n        return next(action);\r\n    }\r\n    fetch(action.meta.url, {\r\n        method: POST_METHOD, body: JSON.stringify(action.payload), headers: common.commonAuthorizedHeader()\r\n    })\r\n        .then(response => response.json())\r\n        .then(data => {\r\n            console.debug(\"Response:\", data);\r\n            if (data.entities == null || data.entities.length == 0) {\r\n                alert(\"Data not found!\");\r\n                return;\r\n            }\r\n            let newAction = Object.assign({}, action, {\r\n                payload: data\r\n            });\r\n            delete newAction.meta;\r\n            store.dispatch(newAction);\r\n        })\r\n        .catch(err => console.log(err));\r\n\r\n}\r\n\r\nexport const updateCartMiddleware = store => next => action => {\r\n    if (!action.meta || action.meta.type !== types.UPDATE_CART) { return next(action); }\r\n    let newAction = Object.assign({}, action, { payload: action.payload });\r\n    delete newAction.meta;\r\n    store.dispatch(newAction);\r\n}\r\n\r\n","import { createStore, applyMiddleware } from 'redux'\r\nimport { initialState, rootReducer } from './reducers'\r\nimport * as actionCreator from './actionCreators';\r\nimport * as types from './types';\r\nimport * as userMiddleware from '../middlewares/UserMiddleware'\r\nimport * as managementMiddleware from '../middlewares/ManagementMiddleware'\r\nimport * as realtimeChatMiddleware from '../middlewares/RealtimeChatMiddleware'\r\nimport * as catalogMiddleware from '../middlewares/CatalogMiddleware'\r\nimport * as common from '../middlewares/Common';\r\n\r\nconst commonAuthorizedHeader = () => {\r\n   return common.commonAuthorizedHeader(); \r\n};\r\nconst POST_METHOD = \"POST\";\r\n\r\nexport const configureStore = () => {\r\n    const store = createStore(\r\n        rootReducer,\r\n        initialState,\r\n        applyMiddleware(\r\n            catalogMiddleware.getProductListMiddleware,\r\n            catalogMiddleware.getProductDetailMiddleWare,\r\n            catalogMiddleware.removeEntityMiddleware,\r\n            catalogMiddleware.loadMoreSupplierMiddleware,\r\n            catalogMiddleware.getAllProductCategoriesMiddleware,\r\n            catalogMiddleware.getSupplierListMiddleware,\r\n            catalogMiddleware.updateCartMiddleware,\r\n\r\n            //user related\r\n            userMiddleware.performLoginMiddleware,\r\n            userMiddleware.performLogoutMiddleware,\r\n            userMiddleware.refreshLoginStatusMiddleware,\r\n            userMiddleware.requestAppIdMiddleware, \r\n            userMiddleware.getLoggedUserMiddleware, \r\n\r\n            //transaction\r\n            getStockInfoMiddleware,\r\n            submitPurchaseTransactionMiddleware,\r\n            submitSupplyTransactionMiddleware,\r\n            resetPurchaseTransactionMiddleware,\r\n            getCustomerListMiddleware,\r\n            getProductListTrxMiddleware,\r\n            getCashflowInfoMiddleware,\r\n            getCashflowDetailMiddleware,\r\n            getProductSalesMiddleware,\r\n            resetProductsMiddleware,\r\n            resetSuppliersMiddleware,\r\n            resetCustomersMiddleware,\r\n            getProductStocksMiddleware,\r\n            resetProductStocksMiddleware,\r\n            getProductSalesDetailMiddleware,  \r\n\r\n            /*enntity management*/\r\n            managementMiddleware.getEntityListMiddleware,\r\n            managementMiddleware.getEntityByIdMiddleware,\r\n            managementMiddleware.updateEntityMiddleware,\r\n            managementMiddleware.removeManagedEntityMiddleware, \r\n            managementMiddleware.getEntitiesWithCallbackMiddleware,\r\n            managementMiddleware.getEntityPropertyMiddleware,\r\n            managementMiddleware.getManagementMenusMiddleware,\r\n\r\n            /*realtime chat*/\r\n            realtimeChatMiddleware.sendChatMessageMiddleware,\r\n            realtimeChatMiddleware.storeChatMessageLocallyMiddleware,\r\n            realtimeChatMiddleware.getMessagesMiddleware,\r\n\r\n        )\r\n    );\r\n\r\n    return store;\r\n}\r\n  \r\n \r\nconst getProductStocksMiddleware = store => next => action => {\r\n    if (!action.meta || action.meta.type !== types.GET_PRODUCT_STOCKS) { return next(action); }\r\n    fetch(action.meta.url, {\r\n        method: POST_METHOD, body: JSON.stringify(action.payload),\r\n        headers: commonAuthorizedHeader(),\r\n    }).then(response => response.json())\r\n        .then(data => {\r\n            console.debug(\"getProductStocksMiddleware Response:\", data, \"load more:\", action.meta.loadMore);\r\n            if (data.code != \"00\") {\r\n                alert(\"Data not found\");\r\n                return;\r\n            }\r\n\r\n            let newAction = Object.assign({}, action, { payload: data });\r\n            delete newAction.meta;\r\n            store.dispatch(newAction);\r\n        })\r\n        .catch(err => console.log(err)).finally(param => action.meta.app.endLoading());\r\n}\r\n\r\nconst getProductSalesDetailMiddleware = store => next => action => {\r\n    if (!action.meta || action.meta.type !== types.GET_PRODUCT_SALES_DETAIL) { return next(action); }\r\n    fetch(action.meta.url, {\r\n        method: POST_METHOD, body: JSON.stringify(action.payload),\r\n        headers: { 'Content-Type': 'application/json', 'requestId': localStorage.getItem(\"requestId\"), 'loginKey': localStorage.getItem(\"loginKey\") }\r\n    }).then(response => response.json())\r\n        .then(data => {\r\n            console.debug(\"getProductSalesDetailMiddleware Response:\", data);\r\n            if (data.code != \"00\") {\r\n                alert(\"Server error\");\r\n                return;\r\n            }\r\n\r\n            let newAction = Object.assign({}, action, { payload: data });\r\n            delete newAction.meta;\r\n            store.dispatch(newAction);\r\n        })\r\n        .catch(err => console.log(err)).finally(param => action.meta.app.endLoading());\r\n}\r\n\r\nconst getProductSalesMiddleware = store => next => action => {\r\n    if (!action.meta || action.meta.type !== types.GET_PRODUCT_SALES) { return next(action); }\r\n    fetch(action.meta.url, {\r\n        method: POST_METHOD, body: JSON.stringify(action.payload),\r\n        headers: { 'Content-Type': 'application/json', 'requestId': localStorage.getItem(\"requestId\"), 'loginKey': localStorage.getItem(\"loginKey\") }\r\n    }).then(response => response.json())\r\n        .then(data => {\r\n            console.debug(\"getProductSalesMiddleware Response:\", data, \"load more:\", action.meta.loadMore);\r\n            if (data.code != \"00\") {\r\n                alert(\"Server error\");\r\n                return;\r\n            }\r\n\r\n            let newAction = Object.assign({}, action, { payload: data, loadMore: action.meta.loadMore, referrer: action.meta.referrer });\r\n            delete newAction.meta;\r\n            store.dispatch(newAction);\r\n        })\r\n        .catch(err => console.log(err)).finally(param => action.meta.referrer.props.app.endLoading());\r\n}\r\n\r\nconst getCashflowDetailMiddleware = store => next => action => {\r\n    if (!action.meta || action.meta.type !== types.GET_CASHFLOW_DETAIL) { return next(action); }\r\n    fetch(action.meta.url, {\r\n        method: POST_METHOD, body: JSON.stringify(action.payload),\r\n        headers: { 'Content-Type': 'application/json', 'requestId': localStorage.getItem(\"requestId\"), 'loginKey': localStorage.getItem(\"loginKey\") }\r\n    }).then(response => response.json())\r\n        .then(data => {\r\n            console.debug(\"getCashflowDetailMiddleware Response:\", data);\r\n            if (data.code != \"00\") {\r\n                alert(\"Server error\");\r\n                return;\r\n            }\r\n\r\n            let newAction = Object.assign({}, action, { payload: data });\r\n            delete newAction.meta;\r\n            store.dispatch(newAction);\r\n        })\r\n        .catch(err => console.log(err)).finally(param => action.meta.app.endLoading());\r\n}\r\n\r\nconst getCashflowInfoMiddleware = store => next => action => {\r\n    if (!action.meta || action.meta.type !== types.GET_CASHFLOW_INFO) { return next(action); }\r\n    fetch(action.meta.url, {\r\n        method: POST_METHOD, body: JSON.stringify(action.payload),\r\n        headers: { 'Content-Type': 'application/json', 'requestId': localStorage.getItem(\"requestId\"), 'loginKey': localStorage.getItem(\"loginKey\") }\r\n    }).then(response => response.json())\r\n        .then(data => {\r\n            console.debug(\"getCashflowInfoMiddleware Response:\", data);\r\n            if (data.code != \"00\") {\r\n                alert(\"Server error\");\r\n                return;\r\n            }\r\n\r\n            if (data.entity == null) {\r\n                alert(\"Data for cashflow: \" + action.payload.filter.module + \" in \" + action.payload.filter.month + \"/\" + action.payload.filter.year + \" period not found!\");\r\n                return;\r\n            }\r\n\r\n            if (data.entity.amount == null) {\r\n                data.entity.amount = 0;\r\n                data.entity.count = 0;\r\n                console.log(\"DATA:\", data);\r\n            }\r\n            let newAction = Object.assign({}, action, { payload: data });\r\n            delete newAction.meta;\r\n            store.dispatch(newAction);\r\n        })\r\n        .catch(err => console.log(err)).finally(param => action.meta.app.endLoading());\r\n}\r\n\r\nconst getProductListTrxMiddleware = store => next => action => {\r\n    if (!action.meta || action.meta.type !== types.FETCH_PRODUCT_LIST_TRX) { return next(action); }\r\n\r\n    if (action.payload.filter.fieldsFilter.name == null || action.payload.filter.fieldsFilter.name.trim() == \"\") {\r\n        let newAction = Object.assign({}, action, {\r\n            payload: { entities: [] }\r\n        });\r\n        delete newAction.meta;\r\n        store.dispatch(newAction);\r\n    } else\r\n        fetch(action.meta.url, {\r\n            method: POST_METHOD, body: JSON.stringify(action.payload), headers: commonAuthorizedHeader()\r\n        })\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                console.debug(\"getProductListTrxMiddleware Response:\", data);\r\n                if (data.entities == null || data.entities.length == 0) {\r\n                    alert(\"Data not found!\");\r\n                    return;\r\n                }\r\n                let newAction = Object.assign({}, action, { payload: data });\r\n                delete newAction.meta;\r\n                store.dispatch(newAction);\r\n            })\r\n            .catch(err => console.log(err)).finally(param => action.meta.app.endLoading());\r\n}\r\n\r\nconst getCustomerListMiddleware = store => next => action => {\r\n    if (!action.meta || action.meta.type !== types.FETCH_CUSTOMER_LIST) { return next(action); }\r\n\r\n    if (action.payload.filter.fieldsFilter.name == null || action.payload.filter.fieldsFilter.name.trim() == \"\") {\r\n        let newAction = Object.assign({}, action, {\r\n            payload: { entities: [] }\r\n        });\r\n        delete newAction.meta;\r\n        store.dispatch(newAction);\r\n    } else\r\n        fetch(action.meta.url, {\r\n            method: POST_METHOD,\r\n            body: JSON.stringify(action.payload),\r\n            headers: commonAuthorizedHeader()\r\n        })\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                console.debug(\"Response:\", data);\r\n                if (data.entities == null || data.entities.length == 0) {\r\n                    alert(\"Data not found!\");\r\n                    return;\r\n                }\r\n                let newAction = Object.assign({}, action, { payload: data });\r\n                delete newAction.meta;\r\n                store.dispatch(newAction);\r\n            })\r\n            .catch(err => console.log(err)).finally(param => action.meta.app.endLoading());\r\n}\r\n\r\nconst resetProductStocksMiddleware = store => next => action => {\r\n    if (!action.meta || action.meta.type !== types.RESET_PRODUCT_STOCKS) { return next(action); }\r\n    let newAction = Object.assign({}, action, { payload: null });\r\n    delete newAction.meta;\r\n    store.dispatch(newAction);\r\n}\r\n\r\nconst resetCustomersMiddleware = store => next => action => {\r\n    if (!action.meta || action.meta.type !== types.RESET_CUSTOMERS) { return next(action); }\r\n    let newAction = Object.assign({}, action, { payload: null });\r\n    delete newAction.meta;\r\n    store.dispatch(newAction);\r\n}\r\n\r\nconst resetProductsMiddleware = store => next => action => {\r\n    if (!action.meta || action.meta.type !== types.RESET_PRODUCTS) { return next(action); }\r\n    let newAction = Object.assign({}, action, { payload: null });\r\n    delete newAction.meta;\r\n    store.dispatch(newAction);\r\n}\r\n\r\nconst resetSuppliersMiddleware = store => next => action => {\r\n    if (!action.meta || action.meta.type !== types.RESET_SUPPLIERS) { return next(action); }\r\n    let newAction = Object.assign({}, action, { payload: null });\r\n    delete newAction.meta;\r\n    store.dispatch(newAction);\r\n}\r\n\r\nconst resetPurchaseTransactionMiddleware = store => next => action => {\r\n    if (!action.meta || action.meta.type !== types.RESET_TRX_PURCHASE) { return next(action); }\r\n    let newAction = Object.assign({}, action, { payload: null });\r\n    delete newAction.meta;\r\n    store.dispatch(newAction);\r\n\r\n}\r\n\r\nconst submitSupplyTransactionMiddleware = store => next => action => {\r\n    if (!action.meta || action.meta.type !== types.SUBMIT_TRX_SUPPLY) {\r\n        return next(action);\r\n    }\r\n\r\n    fetch(action.meta.url, {\r\n        method: POST_METHOD, body: JSON.stringify(action.payload),\r\n        headers: { 'Content-Type': 'application/json', 'requestId': localStorage.getItem(\"requestId\"), 'loginKey': localStorage.getItem(\"loginKey\") }\r\n    })\r\n        .then(response => response.json())\r\n        .then(data => {\r\n            console.debug(\"Response:\", data);\r\n            if (data.code != \"00\") {\r\n                alert(\"Transaction Failed!\");\r\n                return;\r\n            }\r\n            alert(\"Transaction Success!\")\r\n            data.transaction.productFlows = action.payload.productFlows;\r\n            let newAction = Object.assign({}, action, { payload: data });\r\n            delete newAction.meta;\r\n            store.dispatch(newAction);\r\n        })\r\n        .catch(err => console.log(err)).finally(param => action.meta.app.endLoading());\r\n}\r\n\r\nconst submitPurchaseTransactionMiddleware = store => next => action => {\r\n    if (!action.meta || action.meta.type !== types.SUBMIT_TRX_PURCHASE) {\r\n        return next(action);\r\n    }\r\n\r\n    fetch(action.meta.url, {\r\n        method: POST_METHOD, body: JSON.stringify(action.payload),\r\n        headers: { 'Content-Type': 'application/json', 'requestId': localStorage.getItem(\"requestId\"), 'loginKey': localStorage.getItem(\"loginKey\") }\r\n    })\r\n        .then(response => response.json())\r\n        .then(data => {\r\n            console.debug(\"Response:\", data);\r\n            if (data.code != \"00\") {\r\n                alert(\"Transaction Failed!\");\r\n                return;\r\n            }\r\n            alert(\"Transaction Success!\")\r\n            data.transaction.productFlows = action.payload.productFlows;\r\n            let newAction = Object.assign({}, action, { payload: data });\r\n            delete newAction.meta;\r\n            store.dispatch(newAction);\r\n        })\r\n        .catch(err => console.log(err)).finally(param => action.meta.app.endLoading());\r\n}\r\n\r\nconst getStockInfoMiddleware = store => next => action => {\r\n    if (!action.meta || action.meta.type !== types.GET_STOCK_INFO) {\r\n        return next(action);\r\n    }\r\n\r\n    fetch(action.meta.url, {\r\n        method: POST_METHOD, body: JSON.stringify(action.payload),\r\n        headers: { 'Content-Type': 'application/json', 'requestId': localStorage.getItem(\"requestId\"), 'loginKey': localStorage.getItem(\"loginKey\") }\r\n    })\r\n        .then(response => response.json())\r\n        .then(data => {\r\n            console.debug(\"Response:\", data);\r\n            if (data.entities == null || data.entities.length == 0) {\r\n                alert(\"Data not found!\");\r\n                return;\r\n            }\r\n            let newAction = Object.assign({}, action, {\r\n                payload: data\r\n            });\r\n            delete newAction.meta;\r\n            store.dispatch(newAction);\r\n        })\r\n        .catch(err => console.log(err)).finally(param => action.meta.app.endLoading());\r\n}\r\n \r\n\r\nexport default configureStore;","import React from 'react'\r\nimport App from './App'\r\nimport { Provider } from 'react-redux'\r\nimport configureStore from './redux/configureStore'\r\nimport { BrowserRouter, HashRouter } from 'react-router-dom';\r\n\r\nconst Root = (props) => {\r\n\r\n    const store = configureStore();\r\n\r\n    return (\r\n        <Provider store={store}>\r\n            <HashRouter>\r\n                <App />\r\n            </HashRouter>\r\n        </Provider>\r\n\r\n    );\r\n}\r\n\r\n\r\nexport default Root;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Root from './Root';\nimport * as serviceWorker from './serviceWorker';\n\n\nReactDOM.render(<Root />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}